//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\KTUOneDrive\OneDrive - Kaunas University of Technology\4pusmetis\Programavimo kalbų teorija\Compiler\CompilerC2022V2\Solution1\ConsoleApp1\Content\c2022v2.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConsoleApp1.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class c2022v2Lexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, 
		BOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", 
		"IDENTIFIER", "COMMENT", "WS"
	};


	public c2022v2Lexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'elseif'", 
		"'else'", "'for'", "'forend'", "'while'", "'whileend'", "'!'", "'*'", 
		"'/'", "'%'", "'+'", "'++'", "'--'", "'-'", "'=='", "'!='", "'>'", "'<'", 
		"'<='", "'>='", "'print'", null, null, null, null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", 
		"NULL", "IDENTIFIER", "COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "c2022v2.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\xF6\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v"+
		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14"+
		"\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18"+
		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x6\x1E"+
		"\xAE\n\x1E\r\x1E\xE\x1E\xAF\x3\x1F\x6\x1F\xB3\n\x1F\r\x1F\xE\x1F\xB4\x3"+
		"\x1F\x3\x1F\x6\x1F\xB9\n\x1F\r\x1F\xE\x1F\xBA\x3 \x3 \x3 \x3 \x3!\x3!"+
		"\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xCA\n!\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3"+
		"#\a#\xD3\n#\f#\xE#\xD6\v#\x3$\x3$\x3$\x3$\a$\xDC\n$\f$\xE$\xDF\v$\x3$"+
		"\x3$\x3$\x3$\a$\xE5\n$\f$\xE$\xE8\v$\x3$\x3$\x5$\xEC\n$\x3$\x3$\x3%\x6"+
		"%\xF1\n%\r%\xE%\xF2\x3%\x3%\x3\xE6\x2\x2&\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2"+
		"\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)"+
		"\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2"+
		"\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&\x3"+
		"\x2\b\x3\x2\x32;\x4\x2\x43\\\x63|\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;"+
		"\x43\\\x61\x61\x63|\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\xFE\x2\x3\x3\x2"+
		"\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2"+
		"\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3"+
		"\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2"+
		"\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2"+
		"\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+"+
		"\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2"+
		"\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x3"+
		"K\x3\x2\x2\x2\x5M\x3\x2\x2\x2\aO\x3\x2\x2\x2\tQ\x3\x2\x2\x2\vS\x3\x2\x2"+
		"\x2\rU\x3\x2\x2\x2\xFX\x3\x2\x2\x2\x11^\x3\x2\x2\x2\x13\x65\x3\x2\x2\x2"+
		"\x15j\x3\x2\x2\x2\x17n\x3\x2\x2\x2\x19u\x3\x2\x2\x2\x1B{\x3\x2\x2\x2\x1D"+
		"\x84\x3\x2\x2\x2\x1F\x86\x3\x2\x2\x2!\x88\x3\x2\x2\x2#\x8A\x3\x2\x2\x2"+
		"%\x8C\x3\x2\x2\x2\'\x8E\x3\x2\x2\x2)\x91\x3\x2\x2\x2+\x94\x3\x2\x2\x2"+
		"-\x96\x3\x2\x2\x2/\x99\x3\x2\x2\x2\x31\x9C\x3\x2\x2\x2\x33\x9E\x3\x2\x2"+
		"\x2\x35\xA0\x3\x2\x2\x2\x37\xA3\x3\x2\x2\x2\x39\xA6\x3\x2\x2\x2;\xAD\x3"+
		"\x2\x2\x2=\xB2\x3\x2\x2\x2?\xBC\x3\x2\x2\x2\x41\xC9\x3\x2\x2\x2\x43\xCB"+
		"\x3\x2\x2\x2\x45\xD0\x3\x2\x2\x2G\xEB\x3\x2\x2\x2I\xF0\x3\x2\x2\x2KL\a"+
		"=\x2\x2L\x4\x3\x2\x2\x2MN\a?\x2\x2N\x6\x3\x2\x2\x2OP\a*\x2\x2P\b\x3\x2"+
		"\x2\x2QR\a.\x2\x2R\n\x3\x2\x2\x2ST\a+\x2\x2T\f\x3\x2\x2\x2UV\ak\x2\x2"+
		"VW\ah\x2\x2W\xE\x3\x2\x2\x2XY\ak\x2\x2YZ\ah\x2\x2Z[\ag\x2\x2[\\\ap\x2"+
		"\x2\\]\a\x66\x2\x2]\x10\x3\x2\x2\x2^_\ag\x2\x2_`\an\x2\x2`\x61\au\x2\x2"+
		"\x61\x62\ag\x2\x2\x62\x63\ak\x2\x2\x63\x64\ah\x2\x2\x64\x12\x3\x2\x2\x2"+
		"\x65\x66\ag\x2\x2\x66g\an\x2\x2gh\au\x2\x2hi\ag\x2\x2i\x14\x3\x2\x2\x2"+
		"jk\ah\x2\x2kl\aq\x2\x2lm\at\x2\x2m\x16\x3\x2\x2\x2no\ah\x2\x2op\aq\x2"+
		"\x2pq\at\x2\x2qr\ag\x2\x2rs\ap\x2\x2st\a\x66\x2\x2t\x18\x3\x2\x2\x2uv"+
		"\ay\x2\x2vw\aj\x2\x2wx\ak\x2\x2xy\an\x2\x2yz\ag\x2\x2z\x1A\x3\x2\x2\x2"+
		"{|\ay\x2\x2|}\aj\x2\x2}~\ak\x2\x2~\x7F\an\x2\x2\x7F\x80\ag\x2\x2\x80\x81"+
		"\ag\x2\x2\x81\x82\ap\x2\x2\x82\x83\a\x66\x2\x2\x83\x1C\x3\x2\x2\x2\x84"+
		"\x85\a#\x2\x2\x85\x1E\x3\x2\x2\x2\x86\x87\a,\x2\x2\x87 \x3\x2\x2\x2\x88"+
		"\x89\a\x31\x2\x2\x89\"\x3\x2\x2\x2\x8A\x8B\a\'\x2\x2\x8B$\x3\x2\x2\x2"+
		"\x8C\x8D\a-\x2\x2\x8D&\x3\x2\x2\x2\x8E\x8F\a-\x2\x2\x8F\x90\a-\x2\x2\x90"+
		"(\x3\x2\x2\x2\x91\x92\a/\x2\x2\x92\x93\a/\x2\x2\x93*\x3\x2\x2\x2\x94\x95"+
		"\a/\x2\x2\x95,\x3\x2\x2\x2\x96\x97\a?\x2\x2\x97\x98\a?\x2\x2\x98.\x3\x2"+
		"\x2\x2\x99\x9A\a#\x2\x2\x9A\x9B\a?\x2\x2\x9B\x30\x3\x2\x2\x2\x9C\x9D\a"+
		"@\x2\x2\x9D\x32\x3\x2\x2\x2\x9E\x9F\a>\x2\x2\x9F\x34\x3\x2\x2\x2\xA0\xA1"+
		"\a>\x2\x2\xA1\xA2\a?\x2\x2\xA2\x36\x3\x2\x2\x2\xA3\xA4\a@\x2\x2\xA4\xA5"+
		"\a?\x2\x2\xA5\x38\x3\x2\x2\x2\xA6\xA7\ar\x2\x2\xA7\xA8\at\x2\x2\xA8\xA9"+
		"\ak\x2\x2\xA9\xAA\ap\x2\x2\xAA\xAB\av\x2\x2\xAB:\x3\x2\x2\x2\xAC\xAE\t"+
		"\x2\x2\x2\xAD\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2"+
		"\xAF\xB0\x3\x2\x2\x2\xB0<\x3\x2\x2\x2\xB1\xB3\t\x2\x2\x2\xB2\xB1\x3\x2"+
		"\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5"+
		"\xB6\x3\x2\x2\x2\xB6\xB8\a\x30\x2\x2\xB7\xB9\t\x2\x2\x2\xB8\xB7\x3\x2"+
		"\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB"+
		">\x3\x2\x2\x2\xBC\xBD\a)\x2\x2\xBD\xBE\t\x3\x2\x2\xBE\xBF\a)\x2\x2\xBF"+
		"@\x3\x2\x2\x2\xC0\xC1\av\x2\x2\xC1\xC2\at\x2\x2\xC2\xC3\aw\x2\x2\xC3\xCA"+
		"\ag\x2\x2\xC4\xC5\ah\x2\x2\xC5\xC6\a\x63\x2\x2\xC6\xC7\an\x2\x2\xC7\xC8"+
		"\au\x2\x2\xC8\xCA\ag\x2\x2\xC9\xC0\x3\x2\x2\x2\xC9\xC4\x3\x2\x2\x2\xCA"+
		"\x42\x3\x2\x2\x2\xCB\xCC\ap\x2\x2\xCC\xCD\aw\x2\x2\xCD\xCE\an\x2\x2\xCE"+
		"\xCF\an\x2\x2\xCF\x44\x3\x2\x2\x2\xD0\xD4\t\x4\x2\x2\xD1\xD3\t\x5\x2\x2"+
		"\xD2\xD1\x3\x2\x2\x2\xD3\xD6\x3\x2\x2\x2\xD4\xD2\x3\x2\x2\x2\xD4\xD5\x3"+
		"\x2\x2\x2\xD5\x46\x3\x2\x2\x2\xD6\xD4\x3\x2\x2\x2\xD7\xD8\a\x31\x2\x2"+
		"\xD8\xD9\a\x31\x2\x2\xD9\xDD\x3\x2\x2\x2\xDA\xDC\n\x6\x2\x2\xDB\xDA\x3"+
		"\x2\x2\x2\xDC\xDF\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDE\x3\x2\x2\x2"+
		"\xDE\xEC\x3\x2\x2\x2\xDF\xDD\x3\x2\x2\x2\xE0\xE1\a\x31\x2\x2\xE1\xE2\a"+
		",\x2\x2\xE2\xE6\x3\x2\x2\x2\xE3\xE5\v\x2\x2\x2\xE4\xE3\x3\x2\x2\x2\xE5"+
		"\xE8\x3\x2\x2\x2\xE6\xE7\x3\x2\x2\x2\xE6\xE4\x3\x2\x2\x2\xE7\xE9\x3\x2"+
		"\x2\x2\xE8\xE6\x3\x2\x2\x2\xE9\xEA\a,\x2\x2\xEA\xEC\a\x31\x2\x2\xEB\xD7"+
		"\x3\x2\x2\x2\xEB\xE0\x3\x2\x2\x2\xEC\xED\x3\x2\x2\x2\xED\xEE\b$\x2\x2"+
		"\xEEH\x3\x2\x2\x2\xEF\xF1\t\a\x2\x2\xF0\xEF\x3\x2\x2\x2\xF1\xF2\x3\x2"+
		"\x2\x2\xF2\xF0\x3\x2\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3\xF4\x3\x2\x2\x2\xF4"+
		"\xF5\b%\x2\x2\xF5J\x3\x2\x2\x2\f\x2\xAF\xB4\xBA\xC9\xD4\xDD\xE6\xEB\xF2"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace ConsoleApp1.Content
