Index: ConsoleApp1/Content/c2022v2.g4
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>grammar c2022v2;\r\n\r\nprogram: line* EOF;\r\n\r\nline: statement \r\n    | ifBlock \r\n    | forBlock \r\n    | whileBlock\r\n    ;\r\n\r\nstatement: (assignment|funCall) ';';\r\n\r\nassignment: IDENTIFIER '=' expression;\r\n\r\nfunCall: IDENTIFIER '(' (expression (',' expression )*)? ')';\r\n\r\nifBlock: 'if' '(' expression ')' block 'ifend' ';' ;\r\n\r\nforBlock: 'for' '(' assignment ';' expression ';' expression ')' block 'forend' ';';\r\n\r\nwhileBlock: 'while' expression block 'whileend' ';';\r\n\r\nblock: line+ ;\r\n\r\nexpression:\r\n    constant\r\n|   IDENTIFIER\r\n|   funCall\r\n|   '(' expression ')'\r\n|   '!' expression\r\n|   expression comp expression\r\n|   expression mul expression\r\n|   expression div expression\r\n|   expression add expression\r\n|   expression sub expression \r\n|   expression unaryadd //TODO FIX CAUSE IT CAN TAKE FUNCCALL++\r\n|   expression unarysub //SAME\r\n//TODO FIX += -= *= /=\r\n;\r\n\r\nmul: '*';\r\ndiv: '/' | '%';\r\nadd: '+';\r\nunaryadd: '++';\r\nunarysub: '--';\r\nsub: '-';\r\ncomp: '==' | '!=' | '>' | '<' | '<=' | '>=';\r\n\r\nconstant: INTEGER | DOUBLE | CHAR | BOOL | NULL;\r\n\r\n\r\nINTEGER: [0-9]+;\r\nDOUBLE: [0-9]+ '.' [0-9]+;\r\nCHAR: '\\''[a-zA-Z]'\\'';\r\nBOOL: 'true' | 'false';\r\nNULL: 'null';\r\n\r\nIDENTIFIER\r\n    : [a-zA-Z_][a-zA-Z_0-9]*\r\n    ;\r\nCOMMENT : ( '//' ~[\\r\\n]* | '/*' .*? '*/' ) -> skip ;\r\nWS: [ \\t\\r\\n]+ -> skip;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/Content/c2022v2.g4 b/ConsoleApp1/Content/c2022v2.g4
--- a/ConsoleApp1/Content/c2022v2.g4	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/Content/c2022v2.g4	(date 1653053500795)
@@ -32,7 +32,7 @@
 |   expression mul expression
 |   expression div expression
 |   expression add expression
-|   expression sub expression 
+|   expression sub expression
 |   expression unaryadd //TODO FIX CAUSE IT CAN TAKE FUNCCALL++
 |   expression unarysub //SAME
 //TODO FIX += -= *= /=
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from C:\\Users\\modes\\OneDrive\\Stalinis kompiuteris\\Compuler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime.Misc;\r\nusing Antlr4.Runtime.Tree;\r\nusing IToken = Antlr4.Runtime.IToken;\r\nusing ParserRuleContext = Antlr4.Runtime.ParserRuleContext;\r\n\r\n/// <summary>\r\n/// This class provides an empty implementation of <see cref=\"Ic2022v2Visitor{Result}\"/>,\r\n/// which can be extended to create a visitor which only needs to handle a subset\r\n/// of the available methods.\r\n/// </summary>\r\n/// <typeparam name=\"Result\">The return type of the visit operation.</typeparam>\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2BaseVisitor<Result> : AbstractParseTreeVisitor<Result>, Ic2022v2Visitor<Result> {\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.program\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitProgram([NotNull] c2022v2Parser.ProgramContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.line\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitLine([NotNull] c2022v2Parser.LineContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.statement\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitStatement([NotNull] c2022v2Parser.StatementContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.assignment\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitAssignment([NotNull] c2022v2Parser.AssignmentContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.funCall\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitFunCall([NotNull] c2022v2Parser.FunCallContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.ifBlock\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitIfBlock([NotNull] c2022v2Parser.IfBlockContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.forBlock\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitForBlock([NotNull] c2022v2Parser.ForBlockContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.whileBlock\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitWhileBlock([NotNull] c2022v2Parser.WhileBlockContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.block\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitBlock([NotNull] c2022v2Parser.BlockContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.expression\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitExpression([NotNull] c2022v2Parser.ExpressionContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.mul\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitMul([NotNull] c2022v2Parser.MulContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.div\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitDiv([NotNull] c2022v2Parser.DivContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.add\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitAdd([NotNull] c2022v2Parser.AddContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.sub\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitSub([NotNull] c2022v2Parser.SubContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.comp\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitComp([NotNull] c2022v2Parser.CompContext context) { return VisitChildren(context); }\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.constant\"/>.\r\n\t/// <para>\r\n\t/// The default implementation returns the result of calling <see cref=\"AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)\"/>\r\n\t/// on <paramref name=\"context\"/>.\r\n\t/// </para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tpublic virtual Result VisitConstant([NotNull] c2022v2Parser.ConstantContext context) { return VisitChildren(context); }\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs	(date 1653054169358)
@@ -177,6 +177,28 @@
 	/// <return>The visitor result.</return>
 	public virtual Result VisitAdd([NotNull] c2022v2Parser.AddContext context) { return VisitChildren(context); }
 
+	/// <summary>
+	/// Visit a parse tree produced by <see cref="c2022v2Parser.unaryadd"/>.
+	/// <para>
+	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
+	/// on <paramref name="context"/>.
+	/// </para>
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	/// <return>The visitor result.</return>
+	public virtual Result VisitUnaryadd([NotNull] c2022v2Parser.UnaryaddContext context) { return VisitChildren(context); }
+
+	/// <summary>
+	/// Visit a parse tree produced by <see cref="c2022v2Parser.unarysub"/>.
+	/// <para>
+	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
+	/// on <paramref name="context"/>.
+	/// </para>
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	/// <return>The visitor result.</return>
+	public virtual Result VisitUnarysub([NotNull] c2022v2Parser.UnarysubContext context) { return VisitChildren(context); }
+
 	/// <summary>
 	/// Visit a parse tree produced by <see cref="c2022v2Parser.sub"/>.
 	/// <para>
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from C:\\Users\\modes\\OneDrive\\Stalinis kompiuteris\\Compuler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime;\r\nusing Antlr4.Runtime.Atn;\r\nusing Antlr4.Runtime.Misc;\r\nusing Antlr4.Runtime.Tree;\r\nusing System.Collections.Generic;\r\nusing DFA = Antlr4.Runtime.Dfa.DFA;\r\n\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2Parser : Parser {\r\n\tpublic const int\r\n\t\tT__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, \r\n\t\tT__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, \r\n\t\tT__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, INTEGER=24, \r\n\t\tDOUBLE=25, CHAR=26, BOOL=27, NULL=28, IDENTIFIER=29, WS=30;\r\n\tpublic const int\r\n\t\tRULE_program = 0, RULE_line = 1, RULE_statement = 2, RULE_assignment = 3, \r\n\t\tRULE_funCall = 4, RULE_ifBlock = 5, RULE_forBlock = 6, RULE_whileBlock = 7, \r\n\t\tRULE_block = 8, RULE_expression = 9, RULE_mul = 10, RULE_div = 11, RULE_add = 12, \r\n\t\tRULE_sub = 13, RULE_comp = 14, RULE_constant = 15;\r\n\tpublic static readonly string[] ruleNames = {\r\n\t\t\"program\", \"line\", \"statement\", \"assignment\", \"funCall\", \"ifBlock\", \"forBlock\", \r\n\t\t\"whileBlock\", \"block\", \"expression\", \"mul\", \"div\", \"add\", \"sub\", \"comp\", \r\n\t\t\"constant\"\r\n\t};\r\n\r\n\tprivate static readonly string[] _LiteralNames = {\r\n\t\tnull, \"';'\", \"'='\", \"'('\", \"','\", \"')'\", \"'if'\", \"'ifend'\", \"'for'\", \"'forend'\", \r\n\t\t\"'while'\", \"'whileend'\", \"'!'\", \"'*'\", \"'/'\", \"'%'\", \"'+'\", \"'-'\", \"'=='\", \r\n\t\t\"'!='\", \"'>'\", \"'<'\", \"'<='\", \"'>='\", null, null, null, null, \"'null'\"\r\n\t};\r\n\tprivate static readonly string[] _SymbolicNames = {\r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\t\"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \"NULL\", \"IDENTIFIER\", \"WS\"\r\n\t};\r\n\tpublic static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);\r\n\r\n\t[System.Obsolete(\"Use Vocabulary instead.\")]\r\n\tpublic static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);\r\n\r\n\tprivate static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {\r\n\t\tstring[] tokenNames = new string[length];\r\n\t\tfor (int i = 0; i < tokenNames.Length; i++) {\r\n\t\t\ttokenNames[i] = vocabulary.GetLiteralName(i);\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = vocabulary.GetSymbolicName(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = \"<INVALID>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokenNames;\r\n\t}\r\n\r\n\t[System.Obsolete(\"Use IRecognizer.Vocabulary instead.\")]\r\n\tpublic override string[] TokenNames\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn tokenNames;\r\n\t\t}\r\n\t}\r\n\r\n\t[NotNull]\r\n\tpublic override IVocabulary Vocabulary\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn DefaultVocabulary;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override string GrammarFileName { get { return \"c2022v2.g4\"; } }\r\n\r\n\tpublic override string[] RuleNames { get { return ruleNames; } }\r\n\r\n\tpublic override string SerializedAtn { get { return _serializedATN; } }\r\n\r\n\tpublic c2022v2Parser(ITokenStream input)\r\n\t\t: base(input)\r\n\t{\r\n\t\t_interp = new ParserATNSimulator(this,_ATN);\r\n\t}\r\n\tpublic partial class ProgramContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode Eof() { return GetToken(c2022v2Parser.Eof, 0); }\r\n\t\tpublic LineContext[] line() {\r\n\t\t\treturn GetRuleContexts<LineContext>();\r\n\t\t}\r\n\t\tpublic LineContext line(int i) {\r\n\t\t\treturn GetRuleContext<LineContext>(i);\r\n\t\t}\r\n\t\tpublic ProgramContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_program; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterProgram(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitProgram(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitProgram(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ProgramContext program() {\r\n\t\tProgramContext _localctx = new ProgramContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 0, RULE_program);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 35;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\twhile ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__7) | (1L << T__9) | (1L << IDENTIFIER))) != 0)) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 32; line();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 37;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t}\r\n\t\t\tState = 38; Match(Eof);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class LineContext : ParserRuleContext {\r\n\t\tpublic StatementContext statement() {\r\n\t\t\treturn GetRuleContext<StatementContext>(0);\r\n\t\t}\r\n\t\tpublic IfBlockContext ifBlock() {\r\n\t\t\treturn GetRuleContext<IfBlockContext>(0);\r\n\t\t}\r\n\t\tpublic ForBlockContext forBlock() {\r\n\t\t\treturn GetRuleContext<ForBlockContext>(0);\r\n\t\t}\r\n\t\tpublic WhileBlockContext whileBlock() {\r\n\t\t\treturn GetRuleContext<WhileBlockContext>(0);\r\n\t\t}\r\n\t\tpublic LineContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_line; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterLine(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitLine(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitLine(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic LineContext line() {\r\n\t\tLineContext _localctx = new LineContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 2, RULE_line);\r\n\t\ttry {\r\n\t\t\tState = 44;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch (_input.La(1)) {\r\n\t\t\tcase IDENTIFIER:\r\n\t\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tState = 40; statement();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__5:\r\n\t\t\t\tEnterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tState = 41; ifBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__7:\r\n\t\t\t\tEnterOuterAlt(_localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tState = 42; forBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__9:\r\n\t\t\t\tEnterOuterAlt(_localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tState = 43; whileBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class StatementContext : ParserRuleContext {\r\n\t\tpublic AssignmentContext assignment() {\r\n\t\t\treturn GetRuleContext<AssignmentContext>(0);\r\n\t\t}\r\n\t\tpublic FunCallContext funCall() {\r\n\t\t\treturn GetRuleContext<FunCallContext>(0);\r\n\t\t}\r\n\t\tpublic StatementContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_statement; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterStatement(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitStatement(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitStatement(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic StatementContext statement() {\r\n\t\tStatementContext _localctx = new StatementContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 4, RULE_statement);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 48;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch ( Interpreter.AdaptivePredict(_input,2,_ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tState = 46; assignment();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tState = 47; funCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tState = 50; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class AssignmentContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic AssignmentContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_assignment; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterAssignment(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitAssignment(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitAssignment(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic AssignmentContext assignment() {\r\n\t\tAssignmentContext _localctx = new AssignmentContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 6, RULE_assignment);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 52; Match(IDENTIFIER);\r\n\t\t\tState = 53; Match(T__1);\r\n\t\t\tState = 54; expression(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class FunCallContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic FunCallContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_funCall; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterFunCall(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitFunCall(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitFunCall(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic FunCallContext funCall() {\r\n\t\tFunCallContext _localctx = new FunCallContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 8, RULE_funCall);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 56; Match(IDENTIFIER);\r\n\t\t\tState = 57; Match(T__2);\r\n\t\t\tState = 66;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__11) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {\r\n\t\t\t\t{\r\n\t\t\t\tState = 58; expression(0);\r\n\t\t\t\tState = 63;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t\twhile (_la==T__3) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tState = 59; Match(T__3);\r\n\t\t\t\t\tState = 60; expression(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tState = 65;\r\n\t\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t\t_la = _input.La(1);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tState = 68; Match(T__4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class IfBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic IfBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_ifBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterIfBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitIfBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitIfBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic IfBlockContext ifBlock() {\r\n\t\tIfBlockContext _localctx = new IfBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 10, RULE_ifBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 70; Match(T__5);\r\n\t\t\tState = 71; Match(T__2);\r\n\t\t\tState = 72; expression(0);\r\n\t\t\tState = 73; Match(T__4);\r\n\t\t\tState = 74; block();\r\n\t\t\tState = 75; Match(T__6);\r\n\t\t\tState = 76; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ForBlockContext : ParserRuleContext {\r\n\t\tpublic AssignmentContext assignment() {\r\n\t\t\treturn GetRuleContext<AssignmentContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ForBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_forBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterForBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitForBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitForBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ForBlockContext forBlock() {\r\n\t\tForBlockContext _localctx = new ForBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 12, RULE_forBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 78; Match(T__7);\r\n\t\t\tState = 79; Match(T__2);\r\n\t\t\tState = 80; assignment();\r\n\t\t\tState = 81; Match(T__0);\r\n\t\t\tState = 82; expression(0);\r\n\t\t\tState = 83; Match(T__0);\r\n\t\t\tState = 84; expression(0);\r\n\t\t\tState = 85; Match(T__4);\r\n\t\t\tState = 86; block();\r\n\t\t\tState = 87; Match(T__8);\r\n\t\t\tState = 88; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class WhileBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic WhileBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_whileBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterWhileBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitWhileBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitWhileBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic WhileBlockContext whileBlock() {\r\n\t\tWhileBlockContext _localctx = new WhileBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 14, RULE_whileBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 90; Match(T__9);\r\n\t\t\tState = 91; expression(0);\r\n\t\t\tState = 92; block();\r\n\t\t\tState = 93; Match(T__10);\r\n\t\t\tState = 94; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class BlockContext : ParserRuleContext {\r\n\t\tpublic LineContext[] line() {\r\n\t\t\treturn GetRuleContexts<LineContext>();\r\n\t\t}\r\n\t\tpublic LineContext line(int i) {\r\n\t\t\treturn GetRuleContext<LineContext>(i);\r\n\t\t}\r\n\t\tpublic BlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_block; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic BlockContext block() {\r\n\t\tBlockContext _localctx = new BlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 16, RULE_block);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 97;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tdo {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 96; line();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 99;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__7) | (1L << T__9) | (1L << IDENTIFIER))) != 0) );\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ExpressionContext : ParserRuleContext {\r\n\t\tpublic ConstantContext constant() {\r\n\t\t\treturn GetRuleContext<ConstantContext>(0);\r\n\t\t}\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic FunCallContext funCall() {\r\n\t\t\treturn GetRuleContext<FunCallContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic CompContext comp() {\r\n\t\t\treturn GetRuleContext<CompContext>(0);\r\n\t\t}\r\n\t\tpublic MulContext mul() {\r\n\t\t\treturn GetRuleContext<MulContext>(0);\r\n\t\t}\r\n\t\tpublic DivContext div() {\r\n\t\t\treturn GetRuleContext<DivContext>(0);\r\n\t\t}\r\n\t\tpublic AddContext add() {\r\n\t\t\treturn GetRuleContext<AddContext>(0);\r\n\t\t}\r\n\t\tpublic SubContext sub() {\r\n\t\t\treturn GetRuleContext<SubContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_expression; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterExpression(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitExpression(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitExpression(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ExpressionContext expression() {\r\n\t\treturn expression(0);\r\n\t}\r\n\r\n\tprivate ExpressionContext expression(int _p) {\r\n\t\tParserRuleContext _parentctx = _ctx;\r\n\t\tint _parentState = State;\r\n\t\tExpressionContext _localctx = new ExpressionContext(_ctx, _parentState);\r\n\t\tExpressionContext _prevctx = _localctx;\r\n\t\tint _startState = 18;\r\n\t\tEnterRecursionRule(_localctx, 18, RULE_expression, _p);\r\n\t\ttry {\r\n\t\t\tint _alt;\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 111;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch ( Interpreter.AdaptivePredict(_input,6,_ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tState = 102; constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tState = 103; Match(IDENTIFIER);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\t{\r\n\t\t\t\tState = 104; funCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\t{\r\n\t\t\t\tState = 105; Match(T__2);\r\n\t\t\t\tState = 106; expression(0);\r\n\t\t\t\tState = 107; Match(T__4);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\t{\r\n\t\t\t\tState = 109; Match(T__11);\r\n\t\t\t\tState = 110; expression(6);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t_ctx.stop = _input.Lt(-1);\r\n\t\t\tState = 135;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_alt = Interpreter.AdaptivePredict(_input,8,_ctx);\r\n\t\t\twhile ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber ) {\r\n\t\t\t\tif ( _alt==1 ) {\r\n\t\t\t\t\tif ( _parseListeners!=null ) TriggerExitRuleEvent();\r\n\t\t\t\t\t_prevctx = _localctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\tState = 133;\r\n\t\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t\tswitch ( Interpreter.AdaptivePredict(_input,7,_ctx) ) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 113;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, \"Precpred(_ctx, 5)\");\r\n\t\t\t\t\t\tState = 114; comp();\r\n\t\t\t\t\t\tState = 115; expression(6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 117;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, \"Precpred(_ctx, 4)\");\r\n\t\t\t\t\t\tState = 118; mul();\r\n\t\t\t\t\t\tState = 119; expression(5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 121;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, \"Precpred(_ctx, 3)\");\r\n\t\t\t\t\t\tState = 122; div();\r\n\t\t\t\t\t\tState = 123; expression(4);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 125;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, \"Precpred(_ctx, 2)\");\r\n\t\t\t\t\t\tState = 126; add();\r\n\t\t\t\t\t\tState = 127; expression(3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 129;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 1))) throw new FailedPredicateException(this, \"Precpred(_ctx, 1)\");\r\n\t\t\t\t\t\tState = 130; sub();\r\n\t\t\t\t\t\tState = 131; expression(2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tState = 137;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_alt = Interpreter.AdaptivePredict(_input,8,_ctx);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tUnrollRecursionContexts(_parentctx);\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class MulContext : ParserRuleContext {\r\n\t\tpublic MulContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_mul; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterMul(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitMul(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitMul(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic MulContext mul() {\r\n\t\tMulContext _localctx = new MulContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 20, RULE_mul);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 138; Match(T__12);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class DivContext : ParserRuleContext {\r\n\t\tpublic DivContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_div; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterDiv(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitDiv(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitDiv(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic DivContext div() {\r\n\t\tDivContext _localctx = new DivContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 22, RULE_div);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 140;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !(_la==T__13 || _la==T__14) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class AddContext : ParserRuleContext {\r\n\t\tpublic AddContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_add; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterAdd(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitAdd(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitAdd(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic AddContext add() {\r\n\t\tAddContext _localctx = new AddContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 24, RULE_add);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 142; Match(T__15);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class SubContext : ParserRuleContext {\r\n\t\tpublic SubContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_sub; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterSub(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitSub(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitSub(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic SubContext sub() {\r\n\t\tSubContext _localctx = new SubContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 26, RULE_sub);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 144; Match(T__16);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class CompContext : ParserRuleContext {\r\n\t\tpublic CompContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_comp; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterComp(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitComp(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitComp(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic CompContext comp() {\r\n\t\tCompContext _localctx = new CompContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 28, RULE_comp);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 146;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__17) | (1L << T__18) | (1L << T__19) | (1L << T__20) | (1L << T__21) | (1L << T__22))) != 0)) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ConstantContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode INTEGER() { return GetToken(c2022v2Parser.INTEGER, 0); }\r\n\t\tpublic ITerminalNode DOUBLE() { return GetToken(c2022v2Parser.DOUBLE, 0); }\r\n\t\tpublic ITerminalNode CHAR() { return GetToken(c2022v2Parser.CHAR, 0); }\r\n\t\tpublic ITerminalNode BOOL() { return GetToken(c2022v2Parser.BOOL, 0); }\r\n\t\tpublic ITerminalNode NULL() { return GetToken(c2022v2Parser.NULL, 0); }\r\n\t\tpublic ConstantContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_constant; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterConstant(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitConstant(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitConstant(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ConstantContext constant() {\r\n\t\tConstantContext _localctx = new ConstantContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 30, RULE_constant);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 148;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL))) != 0)) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {\r\n\t\tswitch (ruleIndex) {\r\n\t\tcase 9: return expression_sempred((ExpressionContext)_localctx, predIndex);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate bool expression_sempred(ExpressionContext _localctx, int predIndex) {\r\n\t\tswitch (predIndex) {\r\n\t\tcase 0: return Precpred(_ctx, 5);\r\n\r\n\t\tcase 1: return Precpred(_ctx, 4);\r\n\r\n\t\tcase 2: return Precpred(_ctx, 3);\r\n\r\n\t\tcase 3: return Precpred(_ctx, 2);\r\n\r\n\t\tcase 4: return Precpred(_ctx, 1);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static readonly string _serializedATN =\r\n\t\t\"\\x3\\xAF6F\\x8320\\x479D\\xB75C\\x4880\\x1605\\x191C\\xAB37\\x3 \\x99\\x4\\x2\\t\\x2\"+\r\n\t\t\"\\x4\\x3\\t\\x3\\x4\\x4\\t\\x4\\x4\\x5\\t\\x5\\x4\\x6\\t\\x6\\x4\\a\\t\\a\\x4\\b\\t\\b\\x4\\t\\t\"+\r\n\t\t\"\\t\\x4\\n\\t\\n\\x4\\v\\t\\v\\x4\\f\\t\\f\\x4\\r\\t\\r\\x4\\xE\\t\\xE\\x4\\xF\\t\\xF\\x4\\x10\\t\"+\r\n\t\t\"\\x10\\x4\\x11\\t\\x11\\x3\\x2\\a\\x2$\\n\\x2\\f\\x2\\xE\\x2\\'\\v\\x2\\x3\\x2\\x3\\x2\\x3\\x3\"+\r\n\t\t\"\\x3\\x3\\x3\\x3\\x3\\x3\\x5\\x3/\\n\\x3\\x3\\x4\\x3\\x4\\x5\\x4\\x33\\n\\x4\\x3\\x4\\x3\\x4\"+\r\n\t\t\"\\x3\\x5\\x3\\x5\\x3\\x5\\x3\\x5\\x3\\x6\\x3\\x6\\x3\\x6\\x3\\x6\\x3\\x6\\a\\x6@\\n\\x6\\f\\x6\"+\r\n\t\t\"\\xE\\x6\\x43\\v\\x6\\x5\\x6\\x45\\n\\x6\\x3\\x6\\x3\\x6\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\x3\"+\r\n\t\t\"\\a\\x3\\a\\x3\\a\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\"+\r\n\t\t\"\\b\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\n\\x6\\n\\x64\\n\\n\\r\\n\\xE\\n\\x65\\x3\\v\\x3\"+\r\n\t\t\"\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x5\\vr\\n\\v\\x3\\v\\x3\\v\\x3\\v\\x3\"+\r\n\t\t\"\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\"+\r\n\t\t\"\\v\\x3\\v\\x3\\v\\a\\v\\x88\\n\\v\\f\\v\\xE\\v\\x8B\\v\\v\\x3\\f\\x3\\f\\x3\\r\\x3\\r\\x3\\xE\\x3\"+\r\n\t\t\"\\xE\\x3\\xF\\x3\\xF\\x3\\x10\\x3\\x10\\x3\\x11\\x3\\x11\\x3\\x11\\x2\\x2\\x3\\x14\\x12\\x2\"+\r\n\t\t\"\\x2\\x4\\x2\\x6\\x2\\b\\x2\\n\\x2\\f\\x2\\xE\\x2\\x10\\x2\\x12\\x2\\x14\\x2\\x16\\x2\\x18\\x2\"+\r\n\t\t\"\\x1A\\x2\\x1C\\x2\\x1E\\x2 \\x2\\x2\\x5\\x3\\x2\\x10\\x11\\x3\\x2\\x14\\x19\\x3\\x2\\x1A\"+\r\n\t\t\"\\x1E\\x99\\x2%\\x3\\x2\\x2\\x2\\x4.\\x3\\x2\\x2\\x2\\x6\\x32\\x3\\x2\\x2\\x2\\b\\x36\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\n:\\x3\\x2\\x2\\x2\\fH\\x3\\x2\\x2\\x2\\xEP\\x3\\x2\\x2\\x2\\x10\\\\\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x12\\x63\\x3\\x2\\x2\\x2\\x14q\\x3\\x2\\x2\\x2\\x16\\x8C\\x3\\x2\\x2\\x2\\x18\\x8E\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x1A\\x90\\x3\\x2\\x2\\x2\\x1C\\x92\\x3\\x2\\x2\\x2\\x1E\\x94\\x3\\x2\\x2\\x2 \\x96\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\\"$\\x5\\x4\\x3\\x2#\\\"\\x3\\x2\\x2\\x2$\\'\\x3\\x2\\x2\\x2%#\\x3\\x2\\x2\\x2\"+\r\n\t\t\"%&\\x3\\x2\\x2\\x2&(\\x3\\x2\\x2\\x2\\'%\\x3\\x2\\x2\\x2()\\a\\x2\\x2\\x3)\\x3\\x3\\x2\\x2\"+\r\n\t\t\"\\x2*/\\x5\\x6\\x4\\x2+/\\x5\\f\\a\\x2,/\\x5\\xE\\b\\x2-/\\x5\\x10\\t\\x2.*\\x3\\x2\\x2\\x2\"+\r\n\t\t\".+\\x3\\x2\\x2\\x2.,\\x3\\x2\\x2\\x2.-\\x3\\x2\\x2\\x2/\\x5\\x3\\x2\\x2\\x2\\x30\\x33\\x5\"+\r\n\t\t\"\\b\\x5\\x2\\x31\\x33\\x5\\n\\x6\\x2\\x32\\x30\\x3\\x2\\x2\\x2\\x32\\x31\\x3\\x2\\x2\\x2\\x33\"+\r\n\t\t\"\\x34\\x3\\x2\\x2\\x2\\x34\\x35\\a\\x3\\x2\\x2\\x35\\a\\x3\\x2\\x2\\x2\\x36\\x37\\a\\x1F\\x2\"+\r\n\t\t\"\\x2\\x37\\x38\\a\\x4\\x2\\x2\\x38\\x39\\x5\\x14\\v\\x2\\x39\\t\\x3\\x2\\x2\\x2:;\\a\\x1F\\x2\"+\r\n\t\t\"\\x2;\\x44\\a\\x5\\x2\\x2<\\x41\\x5\\x14\\v\\x2=>\\a\\x6\\x2\\x2>@\\x5\\x14\\v\\x2?=\\x3\\x2\"+\r\n\t\t\"\\x2\\x2@\\x43\\x3\\x2\\x2\\x2\\x41?\\x3\\x2\\x2\\x2\\x41\\x42\\x3\\x2\\x2\\x2\\x42\\x45\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x43\\x41\\x3\\x2\\x2\\x2\\x44<\\x3\\x2\\x2\\x2\\x44\\x45\\x3\\x2\\x2\\x2\\x45\"+\r\n\t\t\"\\x46\\x3\\x2\\x2\\x2\\x46G\\a\\a\\x2\\x2G\\v\\x3\\x2\\x2\\x2HI\\a\\b\\x2\\x2IJ\\a\\x5\\x2\\x2\"+\r\n\t\t\"JK\\x5\\x14\\v\\x2KL\\a\\a\\x2\\x2LM\\x5\\x12\\n\\x2MN\\a\\t\\x2\\x2NO\\a\\x3\\x2\\x2O\\r\\x3\"+\r\n\t\t\"\\x2\\x2\\x2PQ\\a\\n\\x2\\x2QR\\a\\x5\\x2\\x2RS\\x5\\b\\x5\\x2ST\\a\\x3\\x2\\x2TU\\x5\\x14\"+\r\n\t\t\"\\v\\x2UV\\a\\x3\\x2\\x2VW\\x5\\x14\\v\\x2WX\\a\\a\\x2\\x2XY\\x5\\x12\\n\\x2YZ\\a\\v\\x2\\x2\"+\r\n\t\t\"Z[\\a\\x3\\x2\\x2[\\xF\\x3\\x2\\x2\\x2\\\\]\\a\\f\\x2\\x2]^\\x5\\x14\\v\\x2^_\\x5\\x12\\n\\x2\"+\r\n\t\t\"_`\\a\\r\\x2\\x2`\\x61\\a\\x3\\x2\\x2\\x61\\x11\\x3\\x2\\x2\\x2\\x62\\x64\\x5\\x4\\x3\\x2\\x63\"+\r\n\t\t\"\\x62\\x3\\x2\\x2\\x2\\x64\\x65\\x3\\x2\\x2\\x2\\x65\\x63\\x3\\x2\\x2\\x2\\x65\\x66\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x66\\x13\\x3\\x2\\x2\\x2gh\\b\\v\\x1\\x2hr\\x5 \\x11\\x2ir\\a\\x1F\\x2\\x2jr\\x5\"+\r\n\t\t\"\\n\\x6\\x2kl\\a\\x5\\x2\\x2lm\\x5\\x14\\v\\x2mn\\a\\a\\x2\\x2nr\\x3\\x2\\x2\\x2op\\a\\xE\\x2\"+\r\n\t\t\"\\x2pr\\x5\\x14\\v\\bqg\\x3\\x2\\x2\\x2qi\\x3\\x2\\x2\\x2qj\\x3\\x2\\x2\\x2qk\\x3\\x2\\x2\"+\r\n\t\t\"\\x2qo\\x3\\x2\\x2\\x2r\\x89\\x3\\x2\\x2\\x2st\\f\\a\\x2\\x2tu\\x5\\x1E\\x10\\x2uv\\x5\\x14\"+\r\n\t\t\"\\v\\bv\\x88\\x3\\x2\\x2\\x2wx\\f\\x6\\x2\\x2xy\\x5\\x16\\f\\x2yz\\x5\\x14\\v\\az\\x88\\x3\"+\r\n\t\t\"\\x2\\x2\\x2{|\\f\\x5\\x2\\x2|}\\x5\\x18\\r\\x2}~\\x5\\x14\\v\\x6~\\x88\\x3\\x2\\x2\\x2\\x7F\"+\r\n\t\t\"\\x80\\f\\x4\\x2\\x2\\x80\\x81\\x5\\x1A\\xE\\x2\\x81\\x82\\x5\\x14\\v\\x5\\x82\\x88\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x83\\x84\\f\\x3\\x2\\x2\\x84\\x85\\x5\\x1C\\xF\\x2\\x85\\x86\\x5\\x14\\v\\x4\\x86\"+\r\n\t\t\"\\x88\\x3\\x2\\x2\\x2\\x87s\\x3\\x2\\x2\\x2\\x87w\\x3\\x2\\x2\\x2\\x87{\\x3\\x2\\x2\\x2\\x87\"+\r\n\t\t\"\\x7F\\x3\\x2\\x2\\x2\\x87\\x83\\x3\\x2\\x2\\x2\\x88\\x8B\\x3\\x2\\x2\\x2\\x89\\x87\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x89\\x8A\\x3\\x2\\x2\\x2\\x8A\\x15\\x3\\x2\\x2\\x2\\x8B\\x89\\x3\\x2\\x2\\x2\\x8C\"+\r\n\t\t\"\\x8D\\a\\xF\\x2\\x2\\x8D\\x17\\x3\\x2\\x2\\x2\\x8E\\x8F\\t\\x2\\x2\\x2\\x8F\\x19\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x90\\x91\\a\\x12\\x2\\x2\\x91\\x1B\\x3\\x2\\x2\\x2\\x92\\x93\\a\\x13\\x2\\x2\\x93\\x1D\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x94\\x95\\t\\x3\\x2\\x2\\x95\\x1F\\x3\\x2\\x2\\x2\\x96\\x97\\t\\x4\\x2\\x2\"+\r\n\t\t\"\\x97!\\x3\\x2\\x2\\x2\\v%.\\x32\\x41\\x44\\x65q\\x87\\x89\";\r\n\tpublic static readonly ATN _ATN =\r\n\t\tnew ATNDeserializer().Deserialize(_serializedATN.ToCharArray());\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs	(date 1653054169344)
@@ -33,28 +33,32 @@
 	public const int
 		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
 		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
-		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, INTEGER=24, 
-		DOUBLE=25, CHAR=26, BOOL=27, NULL=28, IDENTIFIER=29, WS=30;
+		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
+		T__24=25, INTEGER=26, DOUBLE=27, CHAR=28, BOOL=29, NULL=30, IDENTIFIER=31, 
+		COMMENT=32, WS=33;
 	public const int
 		RULE_program = 0, RULE_line = 1, RULE_statement = 2, RULE_assignment = 3, 
 		RULE_funCall = 4, RULE_ifBlock = 5, RULE_forBlock = 6, RULE_whileBlock = 7, 
 		RULE_block = 8, RULE_expression = 9, RULE_mul = 10, RULE_div = 11, RULE_add = 12, 
-		RULE_sub = 13, RULE_comp = 14, RULE_constant = 15;
+		RULE_unaryadd = 13, RULE_unarysub = 14, RULE_sub = 15, RULE_comp = 16, 
+		RULE_constant = 17;
 	public static readonly string[] ruleNames = {
 		"program", "line", "statement", "assignment", "funCall", "ifBlock", "forBlock", 
-		"whileBlock", "block", "expression", "mul", "div", "add", "sub", "comp", 
-		"constant"
+		"whileBlock", "block", "expression", "mul", "div", "add", "unaryadd", 
+		"unarysub", "sub", "comp", "constant"
 	};
 
 	private static readonly string[] _LiteralNames = {
 		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'for'", "'forend'", 
-		"'while'", "'whileend'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", 
-		"'!='", "'>'", "'<'", "'<='", "'>='", null, null, null, null, "'null'"
+		"'while'", "'whileend'", "'!'", "'*'", "'/'", "'%'", "'+'", "'++'", "'--'", 
+		"'-'", "'=='", "'!='", "'>'", "'<'", "'<='", "'>='", null, null, null, 
+		null, "'null'"
 	};
 	private static readonly string[] _SymbolicNames = {
 		null, null, null, null, null, null, null, null, null, null, null, null, 
 		null, null, null, null, null, null, null, null, null, null, null, null, 
-		"INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", "WS"
+		null, null, "INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", 
+		"COMMENT", "WS"
 	};
 	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);
 
@@ -142,20 +146,20 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 35;
+			State = 39;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__7) | (1L << T__9) | (1L << IDENTIFIER))) != 0)) {
 				{
 				{
-				State = 32; line();
+				State = 36; line();
 				}
 				}
-				State = 37;
+				State = 41;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 			}
-			State = 38; Match(Eof);
+			State = 42; Match(Eof);
 			}
 		}
 		catch (RecognitionException re) {
@@ -207,31 +211,31 @@
 		LineContext _localctx = new LineContext(_ctx, State);
 		EnterRule(_localctx, 2, RULE_line);
 		try {
-			State = 44;
+			State = 48;
 			_errHandler.Sync(this);
 			switch (_input.La(1)) {
 			case IDENTIFIER:
 				EnterOuterAlt(_localctx, 1);
 				{
-				State = 40; statement();
+				State = 44; statement();
 				}
 				break;
 			case T__5:
 				EnterOuterAlt(_localctx, 2);
 				{
-				State = 41; ifBlock();
+				State = 45; ifBlock();
 				}
 				break;
 			case T__7:
 				EnterOuterAlt(_localctx, 3);
 				{
-				State = 42; forBlock();
+				State = 46; forBlock();
 				}
 				break;
 			case T__9:
 				EnterOuterAlt(_localctx, 4);
 				{
-				State = 43; whileBlock();
+				State = 47; whileBlock();
 				}
 				break;
 			default:
@@ -283,22 +287,22 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 48;
+			State = 52;
 			_errHandler.Sync(this);
 			switch ( Interpreter.AdaptivePredict(_input,2,_ctx) ) {
 			case 1:
 				{
-				State = 46; assignment();
+				State = 50; assignment();
 				}
 				break;
 
 			case 2:
 				{
-				State = 47; funCall();
+				State = 51; funCall();
 				}
 				break;
 			}
-			State = 50; Match(T__0);
+			State = 54; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -344,9 +348,9 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 52; Match(IDENTIFIER);
-			State = 53; Match(T__1);
-			State = 54; expression(0);
+			State = 56; Match(IDENTIFIER);
+			State = 57; Match(T__1);
+			State = 58; expression(0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -396,32 +400,32 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 56; Match(IDENTIFIER);
-			State = 57; Match(T__2);
-			State = 66;
+			State = 60; Match(IDENTIFIER);
+			State = 61; Match(T__2);
+			State = 70;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__11) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {
 				{
-				State = 58; expression(0);
-				State = 63;
+				State = 62; expression(0);
+				State = 67;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 				while (_la==T__3) {
 					{
 					{
-					State = 59; Match(T__3);
-					State = 60; expression(0);
+					State = 63; Match(T__3);
+					State = 64; expression(0);
 					}
 					}
-					State = 65;
+					State = 69;
 					_errHandler.Sync(this);
 					_la = _input.La(1);
 				}
 				}
 			}
 
-			State = 68; Match(T__4);
+			State = 72; Match(T__4);
 			}
 		}
 		catch (RecognitionException re) {
@@ -469,13 +473,13 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 70; Match(T__5);
-			State = 71; Match(T__2);
-			State = 72; expression(0);
-			State = 73; Match(T__4);
-			State = 74; block();
-			State = 75; Match(T__6);
-			State = 76; Match(T__0);
+			State = 74; Match(T__5);
+			State = 75; Match(T__2);
+			State = 76; expression(0);
+			State = 77; Match(T__4);
+			State = 78; block();
+			State = 79; Match(T__6);
+			State = 80; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -529,17 +533,17 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 78; Match(T__7);
-			State = 79; Match(T__2);
-			State = 80; assignment();
-			State = 81; Match(T__0);
-			State = 82; expression(0);
-			State = 83; Match(T__0);
-			State = 84; expression(0);
-			State = 85; Match(T__4);
-			State = 86; block();
-			State = 87; Match(T__8);
-			State = 88; Match(T__0);
+			State = 82; Match(T__7);
+			State = 83; Match(T__2);
+			State = 84; assignment();
+			State = 85; Match(T__0);
+			State = 86; expression(0);
+			State = 87; Match(T__0);
+			State = 88; expression(0);
+			State = 89; Match(T__4);
+			State = 90; block();
+			State = 91; Match(T__8);
+			State = 92; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -587,11 +591,11 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 90; Match(T__9);
-			State = 91; expression(0);
-			State = 92; block();
-			State = 93; Match(T__10);
-			State = 94; Match(T__0);
+			State = 94; Match(T__9);
+			State = 95; expression(0);
+			State = 96; block();
+			State = 97; Match(T__10);
+			State = 98; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -640,16 +644,16 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 97;
+			State = 101;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			do {
 				{
 				{
-				State = 96; line();
+				State = 100; line();
 				}
 				}
-				State = 99;
+				State = 103;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__7) | (1L << T__9) | (1L << IDENTIFIER))) != 0) );
@@ -695,6 +699,12 @@
 		public SubContext sub() {
 			return GetRuleContext<SubContext>(0);
 		}
+		public UnaryaddContext unaryadd() {
+			return GetRuleContext<UnaryaddContext>(0);
+		}
+		public UnarysubContext unarysub() {
+			return GetRuleContext<UnarysubContext>(0);
+		}
 		public ExpressionContext(ParserRuleContext parent, int invokingState)
 			: base(parent, invokingState)
 		{
@@ -731,44 +741,44 @@
 			int _alt;
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 111;
+			State = 115;
 			_errHandler.Sync(this);
 			switch ( Interpreter.AdaptivePredict(_input,6,_ctx) ) {
 			case 1:
 				{
-				State = 102; constant();
+				State = 106; constant();
 				}
 				break;
 
 			case 2:
 				{
-				State = 103; Match(IDENTIFIER);
+				State = 107; Match(IDENTIFIER);
 				}
 				break;
 
 			case 3:
 				{
-				State = 104; funCall();
+				State = 108; funCall();
 				}
 				break;
 
 			case 4:
 				{
-				State = 105; Match(T__2);
-				State = 106; expression(0);
-				State = 107; Match(T__4);
+				State = 109; Match(T__2);
+				State = 110; expression(0);
+				State = 111; Match(T__4);
 				}
 				break;
 
 			case 5:
 				{
-				State = 109; Match(T__11);
-				State = 110; expression(6);
+				State = 113; Match(T__11);
+				State = 114; expression(8);
 				}
 				break;
 			}
 			_ctx.stop = _input.Lt(-1);
-			State = 135;
+			State = 143;
 			_errHandler.Sync(this);
 			_alt = Interpreter.AdaptivePredict(_input,8,_ctx);
 			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber ) {
@@ -776,67 +786,87 @@
 					if ( _parseListeners!=null ) TriggerExitRuleEvent();
 					_prevctx = _localctx;
 					{
-					State = 133;
+					State = 141;
 					_errHandler.Sync(this);
 					switch ( Interpreter.AdaptivePredict(_input,7,_ctx) ) {
 					case 1:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 113;
+						State = 117;
+						if (!(Precpred(_ctx, 7))) throw new FailedPredicateException(this, "Precpred(_ctx, 7)");
+						State = 118; comp();
+						State = 119; expression(8);
+						}
+						break;
+
+					case 2:
+						{
+						_localctx = new ExpressionContext(_parentctx, _parentState);
+						PushNewRecursionContext(_localctx, _startState, RULE_expression);
+						State = 121;
+						if (!(Precpred(_ctx, 6))) throw new FailedPredicateException(this, "Precpred(_ctx, 6)");
+						State = 122; mul();
+						State = 123; expression(7);
+						}
+						break;
+
+					case 3:
+						{
+						_localctx = new ExpressionContext(_parentctx, _parentState);
+						PushNewRecursionContext(_localctx, _startState, RULE_expression);
+						State = 125;
 						if (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, "Precpred(_ctx, 5)");
-						State = 114; comp();
-						State = 115; expression(6);
+						State = 126; div();
+						State = 127; expression(6);
 						}
 						break;
 
-					case 2:
+					case 4:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 117;
+						State = 129;
 						if (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, "Precpred(_ctx, 4)");
-						State = 118; mul();
-						State = 119; expression(5);
+						State = 130; add();
+						State = 131; expression(5);
 						}
 						break;
 
-					case 3:
+					case 5:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 121;
+						State = 133;
 						if (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, "Precpred(_ctx, 3)");
-						State = 122; div();
-						State = 123; expression(4);
+						State = 134; sub();
+						State = 135; expression(4);
 						}
 						break;
 
-					case 4:
+					case 6:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 125;
+						State = 137;
 						if (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, "Precpred(_ctx, 2)");
-						State = 126; add();
-						State = 127; expression(3);
+						State = 138; unaryadd();
 						}
 						break;
 
-					case 5:
+					case 7:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 129;
+						State = 139;
 						if (!(Precpred(_ctx, 1))) throw new FailedPredicateException(this, "Precpred(_ctx, 1)");
-						State = 130; sub();
-						State = 131; expression(2);
+						State = 140; unarysub();
 						}
 						break;
 					}
 					} 
 				}
-				State = 137;
+				State = 145;
 				_errHandler.Sync(this);
 				_alt = Interpreter.AdaptivePredict(_input,8,_ctx);
 			}
@@ -881,7 +911,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 138; Match(T__12);
+			State = 146; Match(T__12);
 			}
 		}
 		catch (RecognitionException re) {
@@ -924,7 +954,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 140;
+			State = 148;
 			_la = _input.La(1);
 			if ( !(_la==T__13 || _la==T__14) ) {
 			_errHandler.RecoverInline(this);
@@ -977,7 +1007,91 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 142; Match(T__15);
+			State = 150; Match(T__15);
+			}
+		}
+		catch (RecognitionException re) {
+			_localctx.exception = re;
+			_errHandler.ReportError(this, re);
+			_errHandler.Recover(this, re);
+		}
+		finally {
+			ExitRule();
+		}
+		return _localctx;
+	}
+
+	public partial class UnaryaddContext : ParserRuleContext {
+		public UnaryaddContext(ParserRuleContext parent, int invokingState)
+			: base(parent, invokingState)
+		{
+		}
+		public override int RuleIndex { get { return RULE_unaryadd; } }
+		public override void EnterRule(IParseTreeListener listener) {
+			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
+			if (typedListener != null) typedListener.EnterUnaryadd(this);
+		}
+		public override void ExitRule(IParseTreeListener listener) {
+			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
+			if (typedListener != null) typedListener.ExitUnaryadd(this);
+		}
+		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
+			Ic2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;
+			if (typedVisitor != null) return typedVisitor.VisitUnaryadd(this);
+			else return visitor.VisitChildren(this);
+		}
+	}
+
+	[RuleVersion(0)]
+	public UnaryaddContext unaryadd() {
+		UnaryaddContext _localctx = new UnaryaddContext(_ctx, State);
+		EnterRule(_localctx, 26, RULE_unaryadd);
+		try {
+			EnterOuterAlt(_localctx, 1);
+			{
+			State = 152; Match(T__16);
+			}
+		}
+		catch (RecognitionException re) {
+			_localctx.exception = re;
+			_errHandler.ReportError(this, re);
+			_errHandler.Recover(this, re);
+		}
+		finally {
+			ExitRule();
+		}
+		return _localctx;
+	}
+
+	public partial class UnarysubContext : ParserRuleContext {
+		public UnarysubContext(ParserRuleContext parent, int invokingState)
+			: base(parent, invokingState)
+		{
+		}
+		public override int RuleIndex { get { return RULE_unarysub; } }
+		public override void EnterRule(IParseTreeListener listener) {
+			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
+			if (typedListener != null) typedListener.EnterUnarysub(this);
+		}
+		public override void ExitRule(IParseTreeListener listener) {
+			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
+			if (typedListener != null) typedListener.ExitUnarysub(this);
+		}
+		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
+			Ic2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;
+			if (typedVisitor != null) return typedVisitor.VisitUnarysub(this);
+			else return visitor.VisitChildren(this);
+		}
+	}
+
+	[RuleVersion(0)]
+	public UnarysubContext unarysub() {
+		UnarysubContext _localctx = new UnarysubContext(_ctx, State);
+		EnterRule(_localctx, 28, RULE_unarysub);
+		try {
+			EnterOuterAlt(_localctx, 1);
+			{
+			State = 154; Match(T__17);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1015,11 +1129,11 @@
 	[RuleVersion(0)]
 	public SubContext sub() {
 		SubContext _localctx = new SubContext(_ctx, State);
-		EnterRule(_localctx, 26, RULE_sub);
+		EnterRule(_localctx, 30, RULE_sub);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 144; Match(T__16);
+			State = 156; Match(T__18);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1057,14 +1171,14 @@
 	[RuleVersion(0)]
 	public CompContext comp() {
 		CompContext _localctx = new CompContext(_ctx, State);
-		EnterRule(_localctx, 28, RULE_comp);
+		EnterRule(_localctx, 32, RULE_comp);
 		int _la;
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 146;
+			State = 158;
 			_la = _input.La(1);
-			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__17) | (1L << T__18) | (1L << T__19) | (1L << T__20) | (1L << T__21) | (1L << T__22))) != 0)) ) {
+			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__19) | (1L << T__20) | (1L << T__21) | (1L << T__22) | (1L << T__23) | (1L << T__24))) != 0)) ) {
 			_errHandler.RecoverInline(this);
 			} else {
 				if (_input.La(1) == TokenConstants.Eof) {
@@ -1116,12 +1230,12 @@
 	[RuleVersion(0)]
 	public ConstantContext constant() {
 		ConstantContext _localctx = new ConstantContext(_ctx, State);
-		EnterRule(_localctx, 30, RULE_constant);
+		EnterRule(_localctx, 34, RULE_constant);
 		int _la;
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 148;
+			State = 160;
 			_la = _input.La(1);
 			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL))) != 0)) ) {
 			_errHandler.RecoverInline(this);
@@ -1154,71 +1268,80 @@
 	}
 	private bool expression_sempred(ExpressionContext _localctx, int predIndex) {
 		switch (predIndex) {
-		case 0: return Precpred(_ctx, 5);
+		case 0: return Precpred(_ctx, 7);
+
+		case 1: return Precpred(_ctx, 6);
 
-		case 1: return Precpred(_ctx, 4);
+		case 2: return Precpred(_ctx, 5);
 
-		case 2: return Precpred(_ctx, 3);
+		case 3: return Precpred(_ctx, 4);
 
-		case 3: return Precpred(_ctx, 2);
+		case 4: return Precpred(_ctx, 3);
 
-		case 4: return Precpred(_ctx, 1);
+		case 5: return Precpred(_ctx, 2);
+
+		case 6: return Precpred(_ctx, 1);
 		}
 		return true;
 	}
 
 	public static readonly string _serializedATN =
-		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3 \x99\x4\x2\t\x2"+
+		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3#\xA5\x4\x2\t\x2"+
 		"\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t"+
 		"\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t"+
-		"\x10\x4\x11\t\x11\x3\x2\a\x2$\n\x2\f\x2\xE\x2\'\v\x2\x3\x2\x3\x2\x3\x3"+
-		"\x3\x3\x3\x3\x3\x3\x5\x3/\n\x3\x3\x4\x3\x4\x5\x4\x33\n\x4\x3\x4\x3\x4"+
-		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\a\x6@\n\x6\f\x6"+
-		"\xE\x6\x43\v\x6\x5\x6\x45\n\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
-		"\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
-		"\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x6\n\x64\n\n\r\n\xE\n\x65\x3\v\x3"+
-		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x5\vr\n\v\x3\v\x3\v\x3\v\x3"+
+		"\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x3\x2\a\x2(\n\x2\f\x2\xE\x2"+
+		"+\v\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x5\x3\x33\n\x3\x3\x4\x3\x4"+
+		"\x5\x4\x37\n\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6"+
+		"\x3\x6\x3\x6\a\x6\x44\n\x6\f\x6\xE\x6G\v\x6\x5\x6I\n\x6\x3\x6\x3\x6\x3"+
+		"\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
+		"\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x6\nh\n"+
+		"\n\r\n\xE\ni\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x5\vv\n"+
 		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3"+
-		"\v\x3\v\x3\v\a\v\x88\n\v\f\v\xE\v\x8B\v\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3"+
-		"\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x2\x2\x3\x14\x12\x2"+
-		"\x2\x4\x2\x6\x2\b\x2\n\x2\f\x2\xE\x2\x10\x2\x12\x2\x14\x2\x16\x2\x18\x2"+
-		"\x1A\x2\x1C\x2\x1E\x2 \x2\x2\x5\x3\x2\x10\x11\x3\x2\x14\x19\x3\x2\x1A"+
-		"\x1E\x99\x2%\x3\x2\x2\x2\x4.\x3\x2\x2\x2\x6\x32\x3\x2\x2\x2\b\x36\x3\x2"+
-		"\x2\x2\n:\x3\x2\x2\x2\fH\x3\x2\x2\x2\xEP\x3\x2\x2\x2\x10\\\x3\x2\x2\x2"+
-		"\x12\x63\x3\x2\x2\x2\x14q\x3\x2\x2\x2\x16\x8C\x3\x2\x2\x2\x18\x8E\x3\x2"+
-		"\x2\x2\x1A\x90\x3\x2\x2\x2\x1C\x92\x3\x2\x2\x2\x1E\x94\x3\x2\x2\x2 \x96"+
-		"\x3\x2\x2\x2\"$\x5\x4\x3\x2#\"\x3\x2\x2\x2$\'\x3\x2\x2\x2%#\x3\x2\x2\x2"+
-		"%&\x3\x2\x2\x2&(\x3\x2\x2\x2\'%\x3\x2\x2\x2()\a\x2\x2\x3)\x3\x3\x2\x2"+
-		"\x2*/\x5\x6\x4\x2+/\x5\f\a\x2,/\x5\xE\b\x2-/\x5\x10\t\x2.*\x3\x2\x2\x2"+
-		".+\x3\x2\x2\x2.,\x3\x2\x2\x2.-\x3\x2\x2\x2/\x5\x3\x2\x2\x2\x30\x33\x5"+
-		"\b\x5\x2\x31\x33\x5\n\x6\x2\x32\x30\x3\x2\x2\x2\x32\x31\x3\x2\x2\x2\x33"+
-		"\x34\x3\x2\x2\x2\x34\x35\a\x3\x2\x2\x35\a\x3\x2\x2\x2\x36\x37\a\x1F\x2"+
-		"\x2\x37\x38\a\x4\x2\x2\x38\x39\x5\x14\v\x2\x39\t\x3\x2\x2\x2:;\a\x1F\x2"+
-		"\x2;\x44\a\x5\x2\x2<\x41\x5\x14\v\x2=>\a\x6\x2\x2>@\x5\x14\v\x2?=\x3\x2"+
-		"\x2\x2@\x43\x3\x2\x2\x2\x41?\x3\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42\x45\x3"+
-		"\x2\x2\x2\x43\x41\x3\x2\x2\x2\x44<\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2\x45"+
-		"\x46\x3\x2\x2\x2\x46G\a\a\x2\x2G\v\x3\x2\x2\x2HI\a\b\x2\x2IJ\a\x5\x2\x2"+
-		"JK\x5\x14\v\x2KL\a\a\x2\x2LM\x5\x12\n\x2MN\a\t\x2\x2NO\a\x3\x2\x2O\r\x3"+
-		"\x2\x2\x2PQ\a\n\x2\x2QR\a\x5\x2\x2RS\x5\b\x5\x2ST\a\x3\x2\x2TU\x5\x14"+
-		"\v\x2UV\a\x3\x2\x2VW\x5\x14\v\x2WX\a\a\x2\x2XY\x5\x12\n\x2YZ\a\v\x2\x2"+
-		"Z[\a\x3\x2\x2[\xF\x3\x2\x2\x2\\]\a\f\x2\x2]^\x5\x14\v\x2^_\x5\x12\n\x2"+
-		"_`\a\r\x2\x2`\x61\a\x3\x2\x2\x61\x11\x3\x2\x2\x2\x62\x64\x5\x4\x3\x2\x63"+
-		"\x62\x3\x2\x2\x2\x64\x65\x3\x2\x2\x2\x65\x63\x3\x2\x2\x2\x65\x66\x3\x2"+
-		"\x2\x2\x66\x13\x3\x2\x2\x2gh\b\v\x1\x2hr\x5 \x11\x2ir\a\x1F\x2\x2jr\x5"+
-		"\n\x6\x2kl\a\x5\x2\x2lm\x5\x14\v\x2mn\a\a\x2\x2nr\x3\x2\x2\x2op\a\xE\x2"+
-		"\x2pr\x5\x14\v\bqg\x3\x2\x2\x2qi\x3\x2\x2\x2qj\x3\x2\x2\x2qk\x3\x2\x2"+
-		"\x2qo\x3\x2\x2\x2r\x89\x3\x2\x2\x2st\f\a\x2\x2tu\x5\x1E\x10\x2uv\x5\x14"+
-		"\v\bv\x88\x3\x2\x2\x2wx\f\x6\x2\x2xy\x5\x16\f\x2yz\x5\x14\v\az\x88\x3"+
-		"\x2\x2\x2{|\f\x5\x2\x2|}\x5\x18\r\x2}~\x5\x14\v\x6~\x88\x3\x2\x2\x2\x7F"+
-		"\x80\f\x4\x2\x2\x80\x81\x5\x1A\xE\x2\x81\x82\x5\x14\v\x5\x82\x88\x3\x2"+
-		"\x2\x2\x83\x84\f\x3\x2\x2\x84\x85\x5\x1C\xF\x2\x85\x86\x5\x14\v\x4\x86"+
-		"\x88\x3\x2\x2\x2\x87s\x3\x2\x2\x2\x87w\x3\x2\x2\x2\x87{\x3\x2\x2\x2\x87"+
-		"\x7F\x3\x2\x2\x2\x87\x83\x3\x2\x2\x2\x88\x8B\x3\x2\x2\x2\x89\x87\x3\x2"+
-		"\x2\x2\x89\x8A\x3\x2\x2\x2\x8A\x15\x3\x2\x2\x2\x8B\x89\x3\x2\x2\x2\x8C"+
-		"\x8D\a\xF\x2\x2\x8D\x17\x3\x2\x2\x2\x8E\x8F\t\x2\x2\x2\x8F\x19\x3\x2\x2"+
-		"\x2\x90\x91\a\x12\x2\x2\x91\x1B\x3\x2\x2\x2\x92\x93\a\x13\x2\x2\x93\x1D"+
-		"\x3\x2\x2\x2\x94\x95\t\x3\x2\x2\x95\x1F\x3\x2\x2\x2\x96\x97\t\x4\x2\x2"+
-		"\x97!\x3\x2\x2\x2\v%.\x32\x41\x44\x65q\x87\x89";
+		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\a\v\x90\n\v\f\v\xE"+
+		"\v\x93\v\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3"+
+		"\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x2\x2\x3\x14\x14\x2\x2"+
+		"\x4\x2\x6\x2\b\x2\n\x2\f\x2\xE\x2\x10\x2\x12\x2\x14\x2\x16\x2\x18\x2\x1A"+
+		"\x2\x1C\x2\x1E\x2 \x2\"\x2$\x2\x2\x5\x3\x2\x10\x11\x3\x2\x16\x1B\x3\x2"+
+		"\x1C \xA5\x2)\x3\x2\x2\x2\x4\x32\x3\x2\x2\x2\x6\x36\x3\x2\x2\x2\b:\x3"+
+		"\x2\x2\x2\n>\x3\x2\x2\x2\fL\x3\x2\x2\x2\xET\x3\x2\x2\x2\x10`\x3\x2\x2"+
+		"\x2\x12g\x3\x2\x2\x2\x14u\x3\x2\x2\x2\x16\x94\x3\x2\x2\x2\x18\x96\x3\x2"+
+		"\x2\x2\x1A\x98\x3\x2\x2\x2\x1C\x9A\x3\x2\x2\x2\x1E\x9C\x3\x2\x2\x2 \x9E"+
+		"\x3\x2\x2\x2\"\xA0\x3\x2\x2\x2$\xA2\x3\x2\x2\x2&(\x5\x4\x3\x2\'&\x3\x2"+
+		"\x2\x2(+\x3\x2\x2\x2)\'\x3\x2\x2\x2)*\x3\x2\x2\x2*,\x3\x2\x2\x2+)\x3\x2"+
+		"\x2\x2,-\a\x2\x2\x3-\x3\x3\x2\x2\x2.\x33\x5\x6\x4\x2/\x33\x5\f\a\x2\x30"+
+		"\x33\x5\xE\b\x2\x31\x33\x5\x10\t\x2\x32.\x3\x2\x2\x2\x32/\x3\x2\x2\x2"+
+		"\x32\x30\x3\x2\x2\x2\x32\x31\x3\x2\x2\x2\x33\x5\x3\x2\x2\x2\x34\x37\x5"+
+		"\b\x5\x2\x35\x37\x5\n\x6\x2\x36\x34\x3\x2\x2\x2\x36\x35\x3\x2\x2\x2\x37"+
+		"\x38\x3\x2\x2\x2\x38\x39\a\x3\x2\x2\x39\a\x3\x2\x2\x2:;\a!\x2\x2;<\a\x4"+
+		"\x2\x2<=\x5\x14\v\x2=\t\x3\x2\x2\x2>?\a!\x2\x2?H\a\x5\x2\x2@\x45\x5\x14"+
+		"\v\x2\x41\x42\a\x6\x2\x2\x42\x44\x5\x14\v\x2\x43\x41\x3\x2\x2\x2\x44G"+
+		"\x3\x2\x2\x2\x45\x43\x3\x2\x2\x2\x45\x46\x3\x2\x2\x2\x46I\x3\x2\x2\x2"+
+		"G\x45\x3\x2\x2\x2H@\x3\x2\x2\x2HI\x3\x2\x2\x2IJ\x3\x2\x2\x2JK\a\a\x2\x2"+
+		"K\v\x3\x2\x2\x2LM\a\b\x2\x2MN\a\x5\x2\x2NO\x5\x14\v\x2OP\a\a\x2\x2PQ\x5"+
+		"\x12\n\x2QR\a\t\x2\x2RS\a\x3\x2\x2S\r\x3\x2\x2\x2TU\a\n\x2\x2UV\a\x5\x2"+
+		"\x2VW\x5\b\x5\x2WX\a\x3\x2\x2XY\x5\x14\v\x2YZ\a\x3\x2\x2Z[\x5\x14\v\x2"+
+		"[\\\a\a\x2\x2\\]\x5\x12\n\x2]^\a\v\x2\x2^_\a\x3\x2\x2_\xF\x3\x2\x2\x2"+
+		"`\x61\a\f\x2\x2\x61\x62\x5\x14\v\x2\x62\x63\x5\x12\n\x2\x63\x64\a\r\x2"+
+		"\x2\x64\x65\a\x3\x2\x2\x65\x11\x3\x2\x2\x2\x66h\x5\x4\x3\x2g\x66\x3\x2"+
+		"\x2\x2hi\x3\x2\x2\x2ig\x3\x2\x2\x2ij\x3\x2\x2\x2j\x13\x3\x2\x2\x2kl\b"+
+		"\v\x1\x2lv\x5$\x13\x2mv\a!\x2\x2nv\x5\n\x6\x2op\a\x5\x2\x2pq\x5\x14\v"+
+		"\x2qr\a\a\x2\x2rv\x3\x2\x2\x2st\a\xE\x2\x2tv\x5\x14\v\nuk\x3\x2\x2\x2"+
+		"um\x3\x2\x2\x2un\x3\x2\x2\x2uo\x3\x2\x2\x2us\x3\x2\x2\x2v\x91\x3\x2\x2"+
+		"\x2wx\f\t\x2\x2xy\x5\"\x12\x2yz\x5\x14\v\nz\x90\x3\x2\x2\x2{|\f\b\x2\x2"+
+		"|}\x5\x16\f\x2}~\x5\x14\v\t~\x90\x3\x2\x2\x2\x7F\x80\f\a\x2\x2\x80\x81"+
+		"\x5\x18\r\x2\x81\x82\x5\x14\v\b\x82\x90\x3\x2\x2\x2\x83\x84\f\x6\x2\x2"+
+		"\x84\x85\x5\x1A\xE\x2\x85\x86\x5\x14\v\a\x86\x90\x3\x2\x2\x2\x87\x88\f"+
+		"\x5\x2\x2\x88\x89\x5 \x11\x2\x89\x8A\x5\x14\v\x6\x8A\x90\x3\x2\x2\x2\x8B"+
+		"\x8C\f\x4\x2\x2\x8C\x90\x5\x1C\xF\x2\x8D\x8E\f\x3\x2\x2\x8E\x90\x5\x1E"+
+		"\x10\x2\x8Fw\x3\x2\x2\x2\x8F{\x3\x2\x2\x2\x8F\x7F\x3\x2\x2\x2\x8F\x83"+
+		"\x3\x2\x2\x2\x8F\x87\x3\x2\x2\x2\x8F\x8B\x3\x2\x2\x2\x8F\x8D\x3\x2\x2"+
+		"\x2\x90\x93\x3\x2\x2\x2\x91\x8F\x3\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x15"+
+		"\x3\x2\x2\x2\x93\x91\x3\x2\x2\x2\x94\x95\a\xF\x2\x2\x95\x17\x3\x2\x2\x2"+
+		"\x96\x97\t\x2\x2\x2\x97\x19\x3\x2\x2\x2\x98\x99\a\x12\x2\x2\x99\x1B\x3"+
+		"\x2\x2\x2\x9A\x9B\a\x13\x2\x2\x9B\x1D\x3\x2\x2\x2\x9C\x9D\a\x14\x2\x2"+
+		"\x9D\x1F\x3\x2\x2\x2\x9E\x9F\a\x15\x2\x2\x9F!\x3\x2\x2\x2\xA0\xA1\t\x3"+
+		"\x2\x2\xA1#\x3\x2\x2\x2\xA2\xA3\t\x4\x2\x2\xA3%\x3\x2\x2\x2\v)\x32\x36"+
+		"\x45Hiu\x8F\x91";
 	public static readonly ATN _ATN =
 		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
 }
Index: .idea/.idea.Solution1/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile>ConsoleApp1/ConsoleApp1.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7a71278d-1cd7-486a-93e7-b09a716d6e25\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.AssemblyReference.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.AssemblyReference.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.FileListAbsolute.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.FileListAbsolute.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29PmUYAlJ7PmEiYQZpEIWlBgXjj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ConsoleApp1\" type=\"DotNetProject\" factoryName=\".NET Project\">\r\n      <option name=\"EXE_PATH\" value=\"\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/ConsoleApp1/ConsoleApp1.csproj\" />\r\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\r\n      <option name=\"PROJECT_TFM\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7a71278d-1cd7-486a-93e7-b09a716d6e25\" name=\"Changes\" comment=\"\" />\r\n      <created>1653023113611</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1653023113611</updated>\r\n      <workItem from=\"1653023118882\" duration=\"235000\" />\r\n      <workItem from=\"1653029894573\" duration=\"3566000\" />\r\n      <workItem from=\"1653033488614\" duration=\"1494000\" />\r\n      <workItem from=\"1653035006703\" duration=\"247000\" />\r\n      <workItem from=\"1653046092248\" duration=\"518000\" />\r\n      <workItem from=\"1653047072830\" duration=\"534000\" />\r\n      <workItem from=\"1653047736530\" duration=\"90000\" />\r\n      <workItem from=\"1653047844229\" duration=\"4058000\" />\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"new\">\r\n      <created>1653023147518</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1653023147518</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00002\" summary=\"simple g4\">\r\n      <created>1653023251588</created>\r\n      <option name=\"number\" value=\"LOCAL−00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00002\" />\r\n      <updated>1653023251588</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00003\" summary=\"start gramma\">\r\n      <created>1653031385198</created>\r\n      <option name=\"number\" value=\"LOCAL−00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00003\" />\r\n      <updated>1653031385198</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00004\" summary=\".\">\r\n      <created>1653033664149</created>\r\n      <option name=\"number\" value=\"LOCAL−00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00004\" />\r\n      <updated>1653033664149</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00005\" summary=\"new begining\">\r\n      <created>1653035202894</created>\r\n      <option name=\"number\" value=\"LOCAL−00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00005\" />\r\n      <updated>1653035202894</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"NUnit\" />\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n    <MESSAGE value=\"new\" />\r\n    <MESSAGE value=\"simple g4\" />\r\n    <MESSAGE value=\"start gramma\" />\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"new begining\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"new begining\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"DotNet Breakpoints\">\r\n          <url>file://$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs</url>\r\n          <line>15</line>\r\n          <properties documentPath=\"D:\\KTUOneDrive\\OneDrive - Kaunas University of Technology\\4pusmetis\\Programavimo kalbų teorija\\Compiler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\c2022v2Visitor.cs\" initialLine=\"15\" containingFunctionPresentation=\"method 'VisitAssignment'\" />\r\n          <option name=\"timeStamp\" value=\"5\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.Solution1/.idea/workspace.xml b/.idea/.idea.Solution1/.idea/workspace.xml
--- a/.idea/.idea.Solution1/.idea/workspace.xml	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/.idea/.idea.Solution1/.idea/workspace.xml	(date 1653056066004)
@@ -7,34 +7,23 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7a71278d-1cd7-486a-93e7-b09a716d6e25" name="Changes" comment="">
+    <list default="true" id="7a71278d-1cd7-486a-93e7-b09a716d6e25" name="Changes" comment=".">
       <change beforePath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.AssemblyReference.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.AssemblyReference.cache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.FileListAbsolute.txt" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.FileListAbsolute.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ref/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ref/ConsoleApp1.dll" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/refint/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/refint/ConsoleApp1.dll" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -42,6 +31,9 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="HighlightingSettingsPerFile">
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/fd9722470dec41f1a857a84e3978f5b534200/31/4fc8b6fe/AbstractParseTreeVisitor`1.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/fd9722470dec41f1a857a84e3978f5b534200/31/6d725661/ParserRuleContext.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/fd9722470dec41f1a857a84e3978f5b534200/f6/f644c0c8/TerminalNodeImpl.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs" root0="SKIP_HIGHLIGHTING" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -103,7 +95,7 @@
       <workItem from="1653046092248" duration="518000" />
       <workItem from="1653047072830" duration="534000" />
       <workItem from="1653047736530" duration="90000" />
-      <workItem from="1653047844229" duration="4058000" />
+      <workItem from="1653047844229" duration="6445000" />
     </task>
     <task id="LOCAL−00001" summary="new">
       <created>1653023147518</created>
@@ -135,7 +127,14 @@
       <option name="presentableId" value="LOCAL−00005" />
       <updated>1653035202894</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary=".">
+      <created>1653053186121</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1653053186121</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -143,14 +142,25 @@
   </component>
   <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
   <component name="UnityUnitTestConfiguration" currentTestLauncher="NUnit" />
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
   <component name="VcsManagerConfiguration">
     <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
     <MESSAGE value="new" />
     <MESSAGE value="simple g4" />
     <MESSAGE value="start gramma" />
-    <MESSAGE value="." />
     <MESSAGE value="new begining" />
-    <option name="LAST_COMMIT_MESSAGE" value="new begining" />
+    <MESSAGE value="." />
+    <option name="LAST_COMMIT_MESSAGE" value="." />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>T__0=1\r\nT__1=2\r\nT__2=3\r\nT__3=4\r\nT__4=5\r\nT__5=6\r\nT__6=7\r\nT__7=8\r\nT__8=9\r\nT__9=10\r\nT__10=11\r\nT__11=12\r\nT__12=13\r\nT__13=14\r\nT__14=15\r\nT__15=16\r\nT__16=17\r\nT__17=18\r\nT__18=19\r\nT__19=20\r\nT__20=21\r\nT__21=22\r\nT__22=23\r\nINTEGER=24\r\nDOUBLE=25\r\nCHAR=26\r\nBOOL=27\r\nNULL=28\r\nIDENTIFIER=29\r\nWS=30\r\n';'=1\r\n'='=2\r\n'('=3\r\n','=4\r\n')'=5\r\n'if'=6\r\n'ifend'=7\r\n'for'=8\r\n'forend'=9\r\n'while'=10\r\n'whileend'=11\r\n'!'=12\r\n'*'=13\r\n'/'=14\r\n'%'=15\r\n'+'=16\r\n'-'=17\r\n'=='=18\r\n'!='=19\r\n'>'=20\r\n'<'=21\r\n'<='=22\r\n'>='=23\r\n'null'=28\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens b/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens	(date 1653054169358)
@@ -21,13 +21,16 @@
 T__20=21
 T__21=22
 T__22=23
-INTEGER=24
-DOUBLE=25
-CHAR=26
-BOOL=27
-NULL=28
-IDENTIFIER=29
-WS=30
+T__23=24
+T__24=25
+INTEGER=26
+DOUBLE=27
+CHAR=28
+BOOL=29
+NULL=30
+IDENTIFIER=31
+COMMENT=32
+WS=33
 ';'=1
 '='=2
 '('=3
@@ -44,11 +47,13 @@
 '/'=14
 '%'=15
 '+'=16
-'-'=17
-'=='=18
-'!='=19
-'>'=20
-'<'=21
-'<='=22
-'>='=23
-'null'=28
+'++'=17
+'--'=18
+'-'=19
+'=='=20
+'!='=21
+'>'=22
+'<'=23
+'<='=24
+'>='=25
+'null'=30
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from C:\\Users\\modes\\OneDrive\\Stalinis kompiuteris\\Compuler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime.Misc;\r\nusing Antlr4.Runtime.Tree;\r\nusing IToken = Antlr4.Runtime.IToken;\r\n\r\n/// <summary>\r\n/// This interface defines a complete generic visitor for a parse tree produced\r\n/// by <see cref=\"c2022v2Parser\"/>.\r\n/// </summary>\r\n/// <typeparam name=\"Result\">The return type of the visit operation.</typeparam>\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic interface Ic2022v2Visitor<Result> : IParseTreeVisitor<Result> {\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.program\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitProgram([NotNull] c2022v2Parser.ProgramContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.line\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitLine([NotNull] c2022v2Parser.LineContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.statement\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitStatement([NotNull] c2022v2Parser.StatementContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.assignment\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitAssignment([NotNull] c2022v2Parser.AssignmentContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.funCall\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitFunCall([NotNull] c2022v2Parser.FunCallContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.ifBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitIfBlock([NotNull] c2022v2Parser.IfBlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.forBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitForBlock([NotNull] c2022v2Parser.ForBlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.whileBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitWhileBlock([NotNull] c2022v2Parser.WhileBlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.block\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitBlock([NotNull] c2022v2Parser.BlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.expression\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitExpression([NotNull] c2022v2Parser.ExpressionContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.mul\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitMul([NotNull] c2022v2Parser.MulContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.div\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitDiv([NotNull] c2022v2Parser.DivContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.add\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitAdd([NotNull] c2022v2Parser.AddContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.sub\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitSub([NotNull] c2022v2Parser.SubContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.comp\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitComp([NotNull] c2022v2Parser.CompContext context);\r\n\r\n\t/// <summary>\r\n\t/// Visit a parse tree produced by <see cref=\"c2022v2Parser.constant\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\t/// <return>The visitor result.</return>\r\n\tResult VisitConstant([NotNull] c2022v2Parser.ConstantContext context);\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs	(date 1653054169356)
@@ -123,6 +123,20 @@
 	/// <return>The visitor result.</return>
 	Result VisitAdd([NotNull] c2022v2Parser.AddContext context);
 
+	/// <summary>
+	/// Visit a parse tree produced by <see cref="c2022v2Parser.unaryadd"/>.
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	/// <return>The visitor result.</return>
+	Result VisitUnaryadd([NotNull] c2022v2Parser.UnaryaddContext context);
+
+	/// <summary>
+	/// Visit a parse tree produced by <see cref="c2022v2Parser.unarysub"/>.
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	/// <return>The visitor result.</return>
+	Result VisitUnarysub([NotNull] c2022v2Parser.UnarysubContext context);
+
 	/// <summary>
 	/// Visit a parse tree produced by <see cref="c2022v2Parser.sub"/>.
 	/// </summary>
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from C:\\Users\\modes\\OneDrive\\Stalinis kompiuteris\\Compuler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime.Misc;\r\nusing IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;\r\nusing IToken = Antlr4.Runtime.IToken;\r\n\r\n/// <summary>\r\n/// This interface defines a complete listener for a parse tree produced by\r\n/// <see cref=\"c2022v2Parser\"/>.\r\n/// </summary>\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic interface Ic2022v2Listener : IParseTreeListener {\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.program\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterProgram([NotNull] c2022v2Parser.ProgramContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.program\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitProgram([NotNull] c2022v2Parser.ProgramContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.line\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterLine([NotNull] c2022v2Parser.LineContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.line\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitLine([NotNull] c2022v2Parser.LineContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.statement\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterStatement([NotNull] c2022v2Parser.StatementContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.statement\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitStatement([NotNull] c2022v2Parser.StatementContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.assignment\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterAssignment([NotNull] c2022v2Parser.AssignmentContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.assignment\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitAssignment([NotNull] c2022v2Parser.AssignmentContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.funCall\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterFunCall([NotNull] c2022v2Parser.FunCallContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.funCall\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitFunCall([NotNull] c2022v2Parser.FunCallContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.ifBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterIfBlock([NotNull] c2022v2Parser.IfBlockContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.ifBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitIfBlock([NotNull] c2022v2Parser.IfBlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.forBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterForBlock([NotNull] c2022v2Parser.ForBlockContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.forBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitForBlock([NotNull] c2022v2Parser.ForBlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.whileBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterWhileBlock([NotNull] c2022v2Parser.WhileBlockContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.whileBlock\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitWhileBlock([NotNull] c2022v2Parser.WhileBlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.block\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterBlock([NotNull] c2022v2Parser.BlockContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.block\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitBlock([NotNull] c2022v2Parser.BlockContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.expression\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterExpression([NotNull] c2022v2Parser.ExpressionContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.expression\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitExpression([NotNull] c2022v2Parser.ExpressionContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.mul\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterMul([NotNull] c2022v2Parser.MulContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.mul\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitMul([NotNull] c2022v2Parser.MulContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.div\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterDiv([NotNull] c2022v2Parser.DivContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.div\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitDiv([NotNull] c2022v2Parser.DivContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.add\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterAdd([NotNull] c2022v2Parser.AddContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.add\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitAdd([NotNull] c2022v2Parser.AddContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.sub\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterSub([NotNull] c2022v2Parser.SubContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.sub\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitSub([NotNull] c2022v2Parser.SubContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.comp\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterComp([NotNull] c2022v2Parser.CompContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.comp\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitComp([NotNull] c2022v2Parser.CompContext context);\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.constant\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid EnterConstant([NotNull] c2022v2Parser.ConstantContext context);\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.constant\"/>.\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tvoid ExitConstant([NotNull] c2022v2Parser.ConstantContext context);\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs	(date 1653054169351)
@@ -174,6 +174,28 @@
 	/// <param name="context">The parse tree.</param>
 	void ExitAdd([NotNull] c2022v2Parser.AddContext context);
 
+	/// <summary>
+	/// Enter a parse tree produced by <see cref="c2022v2Parser.unaryadd"/>.
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	void EnterUnaryadd([NotNull] c2022v2Parser.UnaryaddContext context);
+	/// <summary>
+	/// Exit a parse tree produced by <see cref="c2022v2Parser.unaryadd"/>.
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	void ExitUnaryadd([NotNull] c2022v2Parser.UnaryaddContext context);
+
+	/// <summary>
+	/// Enter a parse tree produced by <see cref="c2022v2Parser.unarysub"/>.
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	void EnterUnarysub([NotNull] c2022v2Parser.UnarysubContext context);
+	/// <summary>
+	/// Exit a parse tree produced by <see cref="c2022v2Parser.unarysub"/>.
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	void ExitUnarysub([NotNull] c2022v2Parser.UnarysubContext context);
+
 	/// <summary>
 	/// Enter a parse tree produced by <see cref="c2022v2Parser.sub"/>.
 	/// </summary>
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>T__0=1\r\nT__1=2\r\nT__2=3\r\nT__3=4\r\nT__4=5\r\nT__5=6\r\nT__6=7\r\nT__7=8\r\nT__8=9\r\nT__9=10\r\nT__10=11\r\nT__11=12\r\nT__12=13\r\nT__13=14\r\nT__14=15\r\nT__15=16\r\nT__16=17\r\nT__17=18\r\nT__18=19\r\nT__19=20\r\nT__20=21\r\nT__21=22\r\nT__22=23\r\nINTEGER=24\r\nDOUBLE=25\r\nCHAR=26\r\nBOOL=27\r\nNULL=28\r\nIDENTIFIER=29\r\nWS=30\r\n';'=1\r\n'='=2\r\n'('=3\r\n','=4\r\n')'=5\r\n'if'=6\r\n'ifend'=7\r\n'for'=8\r\n'forend'=9\r\n'while'=10\r\n'whileend'=11\r\n'!'=12\r\n'*'=13\r\n'/'=14\r\n'%'=15\r\n'+'=16\r\n'-'=17\r\n'=='=18\r\n'!='=19\r\n'>'=20\r\n'<'=21\r\n'<='=22\r\n'>='=23\r\n'null'=28\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens	(date 1653054169191)
@@ -21,13 +21,16 @@
 T__20=21
 T__21=22
 T__22=23
-INTEGER=24
-DOUBLE=25
-CHAR=26
-BOOL=27
-NULL=28
-IDENTIFIER=29
-WS=30
+T__23=24
+T__24=25
+INTEGER=26
+DOUBLE=27
+CHAR=28
+BOOL=29
+NULL=30
+IDENTIFIER=31
+COMMENT=32
+WS=33
 ';'=1
 '='=2
 '('=3
@@ -44,11 +47,13 @@
 '/'=14
 '%'=15
 '+'=16
-'-'=17
-'=='=18
-'!='=19
-'>'=20
-'<'=21
-'<='=22
-'>='=23
-'null'=28
+'++'=17
+'--'=18
+'-'=19
+'=='=20
+'!='=21
+'>'=22
+'<'=23
+'<='=24
+'>='=25
+'null'=30
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from C:\\Users\\modes\\OneDrive\\Stalinis kompiuteris\\Compuler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime;\r\nusing Antlr4.Runtime.Atn;\r\nusing Antlr4.Runtime.Misc;\r\nusing DFA = Antlr4.Runtime.Dfa.DFA;\r\n\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2Lexer : Lexer {\r\n\tpublic const int\r\n\t\tT__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, \r\n\t\tT__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, \r\n\t\tT__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, INTEGER=24, \r\n\t\tDOUBLE=25, CHAR=26, BOOL=27, NULL=28, IDENTIFIER=29, WS=30;\r\n\tpublic static string[] modeNames = {\r\n\t\t\"DEFAULT_MODE\"\r\n\t};\r\n\r\n\tpublic static readonly string[] ruleNames = {\r\n\t\t\"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \"T__7\", \"T__8\", \r\n\t\t\"T__9\", \"T__10\", \"T__11\", \"T__12\", \"T__13\", \"T__14\", \"T__15\", \"T__16\", \r\n\t\t\"T__17\", \"T__18\", \"T__19\", \"T__20\", \"T__21\", \"T__22\", \"INTEGER\", \"DOUBLE\", \r\n\t\t\"CHAR\", \"BOOL\", \"NULL\", \"IDENTIFIER\", \"WS\"\r\n\t};\r\n\r\n\r\n\tpublic c2022v2Lexer(ICharStream input)\r\n\t\t: base(input)\r\n\t{\r\n\t\t_interp = new LexerATNSimulator(this,_ATN);\r\n\t}\r\n\r\n\tprivate static readonly string[] _LiteralNames = {\r\n\t\tnull, \"';'\", \"'='\", \"'('\", \"','\", \"')'\", \"'if'\", \"'ifend'\", \"'for'\", \"'forend'\", \r\n\t\t\"'while'\", \"'whileend'\", \"'!'\", \"'*'\", \"'/'\", \"'%'\", \"'+'\", \"'-'\", \"'=='\", \r\n\t\t\"'!='\", \"'>'\", \"'<'\", \"'<='\", \"'>='\", null, null, null, null, \"'null'\"\r\n\t};\r\n\tprivate static readonly string[] _SymbolicNames = {\r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\t\"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \"NULL\", \"IDENTIFIER\", \"WS\"\r\n\t};\r\n\tpublic static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);\r\n\r\n\t[System.Obsolete(\"Use Vocabulary instead.\")]\r\n\tpublic static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);\r\n\r\n\tprivate static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {\r\n\t\tstring[] tokenNames = new string[length];\r\n\t\tfor (int i = 0; i < tokenNames.Length; i++) {\r\n\t\t\ttokenNames[i] = vocabulary.GetLiteralName(i);\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = vocabulary.GetSymbolicName(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = \"<INVALID>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokenNames;\r\n\t}\r\n\r\n\t[System.Obsolete(\"Use IRecognizer.Vocabulary instead.\")]\r\n\tpublic override string[] TokenNames\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn tokenNames;\r\n\t\t}\r\n\t}\r\n\r\n\t[NotNull]\r\n\tpublic override IVocabulary Vocabulary\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn DefaultVocabulary;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override string GrammarFileName { get { return \"c2022v2.g4\"; } }\r\n\r\n\tpublic override string[] RuleNames { get { return ruleNames; } }\r\n\r\n\tpublic override string[] ModeNames { get { return modeNames; } }\r\n\r\n\tpublic override string SerializedAtn { get { return _serializedATN; } }\r\n\r\n\tpublic static readonly string _serializedATN =\r\n\t\t\"\\x3\\xAF6F\\x8320\\x479D\\xB75C\\x4880\\x1605\\x191C\\xAB37\\x2 \\xB8\\b\\x1\\x4\\x2\"+\r\n\t\t\"\\t\\x2\\x4\\x3\\t\\x3\\x4\\x4\\t\\x4\\x4\\x5\\t\\x5\\x4\\x6\\t\\x6\\x4\\a\\t\\a\\x4\\b\\t\\b\\x4\"+\r\n\t\t\"\\t\\t\\t\\x4\\n\\t\\n\\x4\\v\\t\\v\\x4\\f\\t\\f\\x4\\r\\t\\r\\x4\\xE\\t\\xE\\x4\\xF\\t\\xF\\x4\\x10\"+\r\n\t\t\"\\t\\x10\\x4\\x11\\t\\x11\\x4\\x12\\t\\x12\\x4\\x13\\t\\x13\\x4\\x14\\t\\x14\\x4\\x15\\t\\x15\"+\r\n\t\t\"\\x4\\x16\\t\\x16\\x4\\x17\\t\\x17\\x4\\x18\\t\\x18\\x4\\x19\\t\\x19\\x4\\x1A\\t\\x1A\\x4\\x1B\"+\r\n\t\t\"\\t\\x1B\\x4\\x1C\\t\\x1C\\x4\\x1D\\t\\x1D\\x4\\x1E\\t\\x1E\\x4\\x1F\\t\\x1F\\x3\\x2\\x3\\x2\"+\r\n\t\t\"\\x3\\x3\\x3\\x3\\x3\\x4\\x3\\x4\\x3\\x5\\x3\\x5\\x3\\x6\\x3\\x6\\x3\\a\\x3\\a\\x3\\a\\x3\\b\\x3\"+\r\n\t\t\"\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\"+\r\n\t\t\"\\n\\x3\\n\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\"+\r\n\t\t\"\\f\\x3\\f\\x3\\f\\x3\\r\\x3\\r\\x3\\xE\\x3\\xE\\x3\\xF\\x3\\xF\\x3\\x10\\x3\\x10\\x3\\x11\\x3\"+\r\n\t\t\"\\x11\\x3\\x12\\x3\\x12\\x3\\x13\\x3\\x13\\x3\\x13\\x3\\x14\\x3\\x14\\x3\\x14\\x3\\x15\\x3\"+\r\n\t\t\"\\x15\\x3\\x16\\x3\\x16\\x3\\x17\\x3\\x17\\x3\\x17\\x3\\x18\\x3\\x18\\x3\\x18\\x3\\x19\\x6\"+\r\n\t\t\"\\x19\\x8A\\n\\x19\\r\\x19\\xE\\x19\\x8B\\x3\\x1A\\x6\\x1A\\x8F\\n\\x1A\\r\\x1A\\xE\\x1A\\x90\"+\r\n\t\t\"\\x3\\x1A\\x3\\x1A\\x6\\x1A\\x95\\n\\x1A\\r\\x1A\\xE\\x1A\\x96\\x3\\x1B\\x3\\x1B\\x3\\x1C\"+\r\n\t\t\"\\x3\\x1C\\x3\\x1C\\x3\\x1C\\x3\\x1C\\x3\\x1C\\x3\\x1C\\x3\\x1C\\x3\\x1C\\x5\\x1C\\xA4\\n\"+\r\n\t\t\"\\x1C\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1E\\x3\\x1E\\a\\x1E\\xAD\\n\\x1E\"+\r\n\t\t\"\\f\\x1E\\xE\\x1E\\xB0\\v\\x1E\\x3\\x1F\\x6\\x1F\\xB3\\n\\x1F\\r\\x1F\\xE\\x1F\\xB4\\x3\\x1F\"+\r\n\t\t\"\\x3\\x1F\\x2\\x2\\x2 \\x3\\x2\\x3\\x5\\x2\\x4\\a\\x2\\x5\\t\\x2\\x6\\v\\x2\\a\\r\\x2\\b\\xF\\x2\"+\r\n\t\t\"\\t\\x11\\x2\\n\\x13\\x2\\v\\x15\\x2\\f\\x17\\x2\\r\\x19\\x2\\xE\\x1B\\x2\\xF\\x1D\\x2\\x10\"+\r\n\t\t\"\\x1F\\x2\\x11!\\x2\\x12#\\x2\\x13%\\x2\\x14\\'\\x2\\x15)\\x2\\x16+\\x2\\x17-\\x2\\x18/\"+\r\n\t\t\"\\x2\\x19\\x31\\x2\\x1A\\x33\\x2\\x1B\\x35\\x2\\x1C\\x37\\x2\\x1D\\x39\\x2\\x1E;\\x2\\x1F\"+\r\n\t\t\"=\\x2 \\x3\\x2\\a\\x3\\x2\\x32;\\x4\\x2\\x43\\\\\\x63|\\x5\\x2\\x43\\\\\\x61\\x61\\x63|\\x5\"+\r\n\t\t\"\\x2\\x32;\\x43\\\\\\x63|\\x4\\x2\\v\\f\\xF\\xF\\xBD\\x2\\x3\\x3\\x2\\x2\\x2\\x2\\x5\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x2\\a\\x3\\x2\\x2\\x2\\x2\\t\\x3\\x2\\x2\\x2\\x2\\v\\x3\\x2\\x2\\x2\\x2\\r\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x2\\xF\\x3\\x2\\x2\\x2\\x2\\x11\\x3\\x2\\x2\\x2\\x2\\x13\\x3\\x2\\x2\\x2\\x2\\x15\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x2\\x17\\x3\\x2\\x2\\x2\\x2\\x19\\x3\\x2\\x2\\x2\\x2\\x1B\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"\\x1D\\x3\\x2\\x2\\x2\\x2\\x1F\\x3\\x2\\x2\\x2\\x2!\\x3\\x2\\x2\\x2\\x2#\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"%\\x3\\x2\\x2\\x2\\x2\\'\\x3\\x2\\x2\\x2\\x2)\\x3\\x2\\x2\\x2\\x2+\\x3\\x2\\x2\\x2\\x2-\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x2/\\x3\\x2\\x2\\x2\\x2\\x31\\x3\\x2\\x2\\x2\\x2\\x33\\x3\\x2\\x2\\x2\\x2\\x35\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x2\\x37\\x3\\x2\\x2\\x2\\x2\\x39\\x3\\x2\\x2\\x2\\x2;\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"=\\x3\\x2\\x2\\x2\\x3?\\x3\\x2\\x2\\x2\\x5\\x41\\x3\\x2\\x2\\x2\\a\\x43\\x3\\x2\\x2\\x2\\t\\x45\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\vG\\x3\\x2\\x2\\x2\\rI\\x3\\x2\\x2\\x2\\xFL\\x3\\x2\\x2\\x2\\x11R\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x13V\\x3\\x2\\x2\\x2\\x15]\\x3\\x2\\x2\\x2\\x17\\x63\\x3\\x2\\x2\\x2\\x19l\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x1Bn\\x3\\x2\\x2\\x2\\x1Dp\\x3\\x2\\x2\\x2\\x1Fr\\x3\\x2\\x2\\x2!t\\x3\\x2\\x2\\x2\"+\r\n\t\t\"#v\\x3\\x2\\x2\\x2%x\\x3\\x2\\x2\\x2\\'{\\x3\\x2\\x2\\x2)~\\x3\\x2\\x2\\x2+\\x80\\x3\\x2\\x2\"+\r\n\t\t\"\\x2-\\x82\\x3\\x2\\x2\\x2/\\x85\\x3\\x2\\x2\\x2\\x31\\x89\\x3\\x2\\x2\\x2\\x33\\x8E\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x35\\x98\\x3\\x2\\x2\\x2\\x37\\xA3\\x3\\x2\\x2\\x2\\x39\\xA5\\x3\\x2\\x2\\x2;\\xAA\"+\r\n\t\t\"\\x3\\x2\\x2\\x2=\\xB2\\x3\\x2\\x2\\x2?@\\a=\\x2\\x2@\\x4\\x3\\x2\\x2\\x2\\x41\\x42\\a?\\x2\"+\r\n\t\t\"\\x2\\x42\\x6\\x3\\x2\\x2\\x2\\x43\\x44\\a*\\x2\\x2\\x44\\b\\x3\\x2\\x2\\x2\\x45\\x46\\a.\\x2\"+\r\n\t\t\"\\x2\\x46\\n\\x3\\x2\\x2\\x2GH\\a+\\x2\\x2H\\f\\x3\\x2\\x2\\x2IJ\\ak\\x2\\x2JK\\ah\\x2\\x2\"+\r\n\t\t\"K\\xE\\x3\\x2\\x2\\x2LM\\ak\\x2\\x2MN\\ah\\x2\\x2NO\\ag\\x2\\x2OP\\ap\\x2\\x2PQ\\a\\x66\\x2\"+\r\n\t\t\"\\x2Q\\x10\\x3\\x2\\x2\\x2RS\\ah\\x2\\x2ST\\aq\\x2\\x2TU\\at\\x2\\x2U\\x12\\x3\\x2\\x2\\x2\"+\r\n\t\t\"VW\\ah\\x2\\x2WX\\aq\\x2\\x2XY\\at\\x2\\x2YZ\\ag\\x2\\x2Z[\\ap\\x2\\x2[\\\\\\a\\x66\\x2\\x2\"+\r\n\t\t\"\\\\\\x14\\x3\\x2\\x2\\x2]^\\ay\\x2\\x2^_\\aj\\x2\\x2_`\\ak\\x2\\x2`\\x61\\an\\x2\\x2\\x61\"+\r\n\t\t\"\\x62\\ag\\x2\\x2\\x62\\x16\\x3\\x2\\x2\\x2\\x63\\x64\\ay\\x2\\x2\\x64\\x65\\aj\\x2\\x2\\x65\"+\r\n\t\t\"\\x66\\ak\\x2\\x2\\x66g\\an\\x2\\x2gh\\ag\\x2\\x2hi\\ag\\x2\\x2ij\\ap\\x2\\x2jk\\a\\x66\\x2\"+\r\n\t\t\"\\x2k\\x18\\x3\\x2\\x2\\x2lm\\a#\\x2\\x2m\\x1A\\x3\\x2\\x2\\x2no\\a,\\x2\\x2o\\x1C\\x3\\x2\"+\r\n\t\t\"\\x2\\x2pq\\a\\x31\\x2\\x2q\\x1E\\x3\\x2\\x2\\x2rs\\a\\'\\x2\\x2s \\x3\\x2\\x2\\x2tu\\a-\\x2\"+\r\n\t\t\"\\x2u\\\"\\x3\\x2\\x2\\x2vw\\a/\\x2\\x2w$\\x3\\x2\\x2\\x2xy\\a?\\x2\\x2yz\\a?\\x2\\x2z&\\x3\"+\r\n\t\t\"\\x2\\x2\\x2{|\\a#\\x2\\x2|}\\a?\\x2\\x2}(\\x3\\x2\\x2\\x2~\\x7F\\a@\\x2\\x2\\x7F*\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x80\\x81\\a>\\x2\\x2\\x81,\\x3\\x2\\x2\\x2\\x82\\x83\\a>\\x2\\x2\\x83\\x84\\a?\\x2\"+\r\n\t\t\"\\x2\\x84.\\x3\\x2\\x2\\x2\\x85\\x86\\a@\\x2\\x2\\x86\\x87\\a?\\x2\\x2\\x87\\x30\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x88\\x8A\\t\\x2\\x2\\x2\\x89\\x88\\x3\\x2\\x2\\x2\\x8A\\x8B\\x3\\x2\\x2\\x2\\x8B\\x89\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x8B\\x8C\\x3\\x2\\x2\\x2\\x8C\\x32\\x3\\x2\\x2\\x2\\x8D\\x8F\\t\\x2\\x2\\x2\"+\r\n\t\t\"\\x8E\\x8D\\x3\\x2\\x2\\x2\\x8F\\x90\\x3\\x2\\x2\\x2\\x90\\x8E\\x3\\x2\\x2\\x2\\x90\\x91\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x91\\x92\\x3\\x2\\x2\\x2\\x92\\x94\\a\\x30\\x2\\x2\\x93\\x95\\t\\x2\\x2\\x2\\x94\"+\r\n\t\t\"\\x93\\x3\\x2\\x2\\x2\\x95\\x96\\x3\\x2\\x2\\x2\\x96\\x94\\x3\\x2\\x2\\x2\\x96\\x97\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x97\\x34\\x3\\x2\\x2\\x2\\x98\\x99\\t\\x3\\x2\\x2\\x99\\x36\\x3\\x2\\x2\\x2\\x9A\"+\r\n\t\t\"\\x9B\\av\\x2\\x2\\x9B\\x9C\\at\\x2\\x2\\x9C\\x9D\\aw\\x2\\x2\\x9D\\xA4\\ag\\x2\\x2\\x9E\\x9F\"+\r\n\t\t\"\\ah\\x2\\x2\\x9F\\xA0\\a\\x63\\x2\\x2\\xA0\\xA1\\an\\x2\\x2\\xA1\\xA2\\au\\x2\\x2\\xA2\\xA4\"+\r\n\t\t\"\\ag\\x2\\x2\\xA3\\x9A\\x3\\x2\\x2\\x2\\xA3\\x9E\\x3\\x2\\x2\\x2\\xA4\\x38\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\xA5\\xA6\\ap\\x2\\x2\\xA6\\xA7\\aw\\x2\\x2\\xA7\\xA8\\an\\x2\\x2\\xA8\\xA9\\an\\x2\\x2\\xA9\"+\r\n\t\t\":\\x3\\x2\\x2\\x2\\xAA\\xAE\\t\\x4\\x2\\x2\\xAB\\xAD\\t\\x5\\x2\\x2\\xAC\\xAB\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\xAD\\xB0\\x3\\x2\\x2\\x2\\xAE\\xAC\\x3\\x2\\x2\\x2\\xAE\\xAF\\x3\\x2\\x2\\x2\\xAF<\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB0\\xAE\\x3\\x2\\x2\\x2\\xB1\\xB3\\t\\x6\\x2\\x2\\xB2\\xB1\\x3\\x2\\x2\\x2\\xB3\"+\r\n\t\t\"\\xB4\\x3\\x2\\x2\\x2\\xB4\\xB2\\x3\\x2\\x2\\x2\\xB4\\xB5\\x3\\x2\\x2\\x2\\xB5\\xB6\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB6\\xB7\\b\\x1F\\x2\\x2\\xB7>\\x3\\x2\\x2\\x2\\t\\x2\\x8B\\x90\\x96\\xA3\\xAE\\xB4\"+\r\n\t\t\"\\x3\\b\\x2\\x2\";\r\n\tpublic static readonly ATN _ATN =\r\n\t\tnew ATNDeserializer().Deserialize(_serializedATN.ToCharArray());\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs	(date 1653054169189)
@@ -31,8 +31,9 @@
 	public const int
 		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
 		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
-		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, INTEGER=24, 
-		DOUBLE=25, CHAR=26, BOOL=27, NULL=28, IDENTIFIER=29, WS=30;
+		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
+		T__24=25, INTEGER=26, DOUBLE=27, CHAR=28, BOOL=29, NULL=30, IDENTIFIER=31, 
+		COMMENT=32, WS=33;
 	public static string[] modeNames = {
 		"DEFAULT_MODE"
 	};
@@ -40,8 +41,9 @@
 	public static readonly string[] ruleNames = {
 		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
 		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
-		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "INTEGER", "DOUBLE", 
-		"CHAR", "BOOL", "NULL", "IDENTIFIER", "WS"
+		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
+		"INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", "COMMENT", 
+		"WS"
 	};
 
 
@@ -53,13 +55,15 @@
 
 	private static readonly string[] _LiteralNames = {
 		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'for'", "'forend'", 
-		"'while'", "'whileend'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", 
-		"'!='", "'>'", "'<'", "'<='", "'>='", null, null, null, null, "'null'"
+		"'while'", "'whileend'", "'!'", "'*'", "'/'", "'%'", "'+'", "'++'", "'--'", 
+		"'-'", "'=='", "'!='", "'>'", "'<'", "'<='", "'>='", null, null, null, 
+		null, "'null'"
 	};
 	private static readonly string[] _SymbolicNames = {
 		null, null, null, null, null, null, null, null, null, null, null, null, 
 		null, null, null, null, null, null, null, null, null, null, null, null, 
-		"INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", "WS"
+		null, null, "INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", 
+		"COMMENT", "WS"
 	};
 	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);
 
@@ -109,74 +113,88 @@
 	public override string SerializedAtn { get { return _serializedATN; } }
 
 	public static readonly string _serializedATN =
-		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2 \xB8\b\x1\x4\x2"+
+		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2#\xDE\b\x1\x4\x2"+
 		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
 		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
 		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
 		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
-		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x3\x2\x3\x2"+
-		"\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3"+
-		"\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
-		"\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3"+
-		"\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3"+
-		"\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3"+
-		"\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x6"+
-		"\x19\x8A\n\x19\r\x19\xE\x19\x8B\x3\x1A\x6\x1A\x8F\n\x1A\r\x1A\xE\x1A\x90"+
-		"\x3\x1A\x3\x1A\x6\x1A\x95\n\x1A\r\x1A\xE\x1A\x96\x3\x1B\x3\x1B\x3\x1C"+
-		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x5\x1C\xA4\n"+
-		"\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\a\x1E\xAD\n\x1E"+
-		"\f\x1E\xE\x1E\xB0\v\x1E\x3\x1F\x6\x1F\xB3\n\x1F\r\x1F\xE\x1F\xB4\x3\x1F"+
-		"\x3\x1F\x2\x2\x2 \x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
-		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
-		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
-		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
-		"=\x2 \x3\x2\a\x3\x2\x32;\x4\x2\x43\\\x63|\x5\x2\x43\\\x61\x61\x63|\x5"+
-		"\x2\x32;\x43\\\x63|\x4\x2\v\f\xF\xF\xBD\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
-		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
-		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
-		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
-		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
-		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
-		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
-		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2"+
-		"=\x3\x2\x2\x2\x3?\x3\x2\x2\x2\x5\x41\x3\x2\x2\x2\a\x43\x3\x2\x2\x2\t\x45"+
-		"\x3\x2\x2\x2\vG\x3\x2\x2\x2\rI\x3\x2\x2\x2\xFL\x3\x2\x2\x2\x11R\x3\x2"+
-		"\x2\x2\x13V\x3\x2\x2\x2\x15]\x3\x2\x2\x2\x17\x63\x3\x2\x2\x2\x19l\x3\x2"+
-		"\x2\x2\x1Bn\x3\x2\x2\x2\x1Dp\x3\x2\x2\x2\x1Fr\x3\x2\x2\x2!t\x3\x2\x2\x2"+
-		"#v\x3\x2\x2\x2%x\x3\x2\x2\x2\'{\x3\x2\x2\x2)~\x3\x2\x2\x2+\x80\x3\x2\x2"+
-		"\x2-\x82\x3\x2\x2\x2/\x85\x3\x2\x2\x2\x31\x89\x3\x2\x2\x2\x33\x8E\x3\x2"+
-		"\x2\x2\x35\x98\x3\x2\x2\x2\x37\xA3\x3\x2\x2\x2\x39\xA5\x3\x2\x2\x2;\xAA"+
-		"\x3\x2\x2\x2=\xB2\x3\x2\x2\x2?@\a=\x2\x2@\x4\x3\x2\x2\x2\x41\x42\a?\x2"+
-		"\x2\x42\x6\x3\x2\x2\x2\x43\x44\a*\x2\x2\x44\b\x3\x2\x2\x2\x45\x46\a.\x2"+
-		"\x2\x46\n\x3\x2\x2\x2GH\a+\x2\x2H\f\x3\x2\x2\x2IJ\ak\x2\x2JK\ah\x2\x2"+
-		"K\xE\x3\x2\x2\x2LM\ak\x2\x2MN\ah\x2\x2NO\ag\x2\x2OP\ap\x2\x2PQ\a\x66\x2"+
-		"\x2Q\x10\x3\x2\x2\x2RS\ah\x2\x2ST\aq\x2\x2TU\at\x2\x2U\x12\x3\x2\x2\x2"+
-		"VW\ah\x2\x2WX\aq\x2\x2XY\at\x2\x2YZ\ag\x2\x2Z[\ap\x2\x2[\\\a\x66\x2\x2"+
-		"\\\x14\x3\x2\x2\x2]^\ay\x2\x2^_\aj\x2\x2_`\ak\x2\x2`\x61\an\x2\x2\x61"+
-		"\x62\ag\x2\x2\x62\x16\x3\x2\x2\x2\x63\x64\ay\x2\x2\x64\x65\aj\x2\x2\x65"+
-		"\x66\ak\x2\x2\x66g\an\x2\x2gh\ag\x2\x2hi\ag\x2\x2ij\ap\x2\x2jk\a\x66\x2"+
-		"\x2k\x18\x3\x2\x2\x2lm\a#\x2\x2m\x1A\x3\x2\x2\x2no\a,\x2\x2o\x1C\x3\x2"+
-		"\x2\x2pq\a\x31\x2\x2q\x1E\x3\x2\x2\x2rs\a\'\x2\x2s \x3\x2\x2\x2tu\a-\x2"+
-		"\x2u\"\x3\x2\x2\x2vw\a/\x2\x2w$\x3\x2\x2\x2xy\a?\x2\x2yz\a?\x2\x2z&\x3"+
-		"\x2\x2\x2{|\a#\x2\x2|}\a?\x2\x2}(\x3\x2\x2\x2~\x7F\a@\x2\x2\x7F*\x3\x2"+
-		"\x2\x2\x80\x81\a>\x2\x2\x81,\x3\x2\x2\x2\x82\x83\a>\x2\x2\x83\x84\a?\x2"+
-		"\x2\x84.\x3\x2\x2\x2\x85\x86\a@\x2\x2\x86\x87\a?\x2\x2\x87\x30\x3\x2\x2"+
-		"\x2\x88\x8A\t\x2\x2\x2\x89\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x89"+
-		"\x3\x2\x2\x2\x8B\x8C\x3\x2\x2\x2\x8C\x32\x3\x2\x2\x2\x8D\x8F\t\x2\x2\x2"+
-		"\x8E\x8D\x3\x2\x2\x2\x8F\x90\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x90\x91\x3"+
-		"\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x94\a\x30\x2\x2\x93\x95\t\x2\x2\x2\x94"+
-		"\x93\x3\x2\x2\x2\x95\x96\x3\x2\x2\x2\x96\x94\x3\x2\x2\x2\x96\x97\x3\x2"+
-		"\x2\x2\x97\x34\x3\x2\x2\x2\x98\x99\t\x3\x2\x2\x99\x36\x3\x2\x2\x2\x9A"+
-		"\x9B\av\x2\x2\x9B\x9C\at\x2\x2\x9C\x9D\aw\x2\x2\x9D\xA4\ag\x2\x2\x9E\x9F"+
-		"\ah\x2\x2\x9F\xA0\a\x63\x2\x2\xA0\xA1\an\x2\x2\xA1\xA2\au\x2\x2\xA2\xA4"+
-		"\ag\x2\x2\xA3\x9A\x3\x2\x2\x2\xA3\x9E\x3\x2\x2\x2\xA4\x38\x3\x2\x2\x2"+
-		"\xA5\xA6\ap\x2\x2\xA6\xA7\aw\x2\x2\xA7\xA8\an\x2\x2\xA8\xA9\an\x2\x2\xA9"+
-		":\x3\x2\x2\x2\xAA\xAE\t\x4\x2\x2\xAB\xAD\t\x5\x2\x2\xAC\xAB\x3\x2\x2\x2"+
-		"\xAD\xB0\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF<\x3\x2"+
-		"\x2\x2\xB0\xAE\x3\x2\x2\x2\xB1\xB3\t\x6\x2\x2\xB2\xB1\x3\x2\x2\x2\xB3"+
-		"\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5\xB6\x3\x2"+
-		"\x2\x2\xB6\xB7\b\x1F\x2\x2\xB7>\x3\x2\x2\x2\t\x2\x8B\x90\x96\xA3\xAE\xB4"+
-		"\x3\b\x2\x2";
+		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
+		"\t!\x4\"\t\"\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3"+
+		"\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3"+
+		"\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3"+
+		"\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF"+
+		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13"+
+		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17"+
+		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x6\x1B"+
+		"\x96\n\x1B\r\x1B\xE\x1B\x97\x3\x1C\x6\x1C\x9B\n\x1C\r\x1C\xE\x1C\x9C\x3"+
+		"\x1C\x3\x1C\x6\x1C\xA1\n\x1C\r\x1C\xE\x1C\xA2\x3\x1D\x3\x1D\x3\x1D\x3"+
+		"\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x5"+
+		"\x1E\xB2\n\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \a \xBB\n \f"+
+		" \xE \xBE\v \x3!\x3!\x3!\x3!\a!\xC4\n!\f!\xE!\xC7\v!\x3!\x3!\x3!\x3!\a"+
+		"!\xCD\n!\f!\xE!\xD0\v!\x3!\x3!\x5!\xD4\n!\x3!\x3!\x3\"\x6\"\xD9\n\"\r"+
+		"\"\xE\"\xDA\x3\"\x3\"\x3\xCE\x2\x2#\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6"+
+		"\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B"+
+		"\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16"+
+		"+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39"+
+		"\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x3\x2\b\x3\x2\x32;\x4\x2\x43"+
+		"\\\x63|\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x4\x2\f"+
+		"\f\xF\xF\x5\x2\v\f\xF\xF\"\"\xE6\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
+		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
+		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
+		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
+		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
+		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
+		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
+		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
+		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x3\x45\x3\x2\x2"+
+		"\x2\x5G\x3\x2\x2\x2\aI\x3\x2\x2\x2\tK\x3\x2\x2\x2\vM\x3\x2\x2\x2\rO\x3"+
+		"\x2\x2\x2\xFR\x3\x2\x2\x2\x11X\x3\x2\x2\x2\x13\\\x3\x2\x2\x2\x15\x63\x3"+
+		"\x2\x2\x2\x17i\x3\x2\x2\x2\x19r\x3\x2\x2\x2\x1Bt\x3\x2\x2\x2\x1Dv\x3\x2"+
+		"\x2\x2\x1Fx\x3\x2\x2\x2!z\x3\x2\x2\x2#|\x3\x2\x2\x2%\x7F\x3\x2\x2\x2\'"+
+		"\x82\x3\x2\x2\x2)\x84\x3\x2\x2\x2+\x87\x3\x2\x2\x2-\x8A\x3\x2\x2\x2/\x8C"+
+		"\x3\x2\x2\x2\x31\x8E\x3\x2\x2\x2\x33\x91\x3\x2\x2\x2\x35\x95\x3\x2\x2"+
+		"\x2\x37\x9A\x3\x2\x2\x2\x39\xA4\x3\x2\x2\x2;\xB1\x3\x2\x2\x2=\xB3\x3\x2"+
+		"\x2\x2?\xB8\x3\x2\x2\x2\x41\xD3\x3\x2\x2\x2\x43\xD8\x3\x2\x2\x2\x45\x46"+
+		"\a=\x2\x2\x46\x4\x3\x2\x2\x2GH\a?\x2\x2H\x6\x3\x2\x2\x2IJ\a*\x2\x2J\b"+
+		"\x3\x2\x2\x2KL\a.\x2\x2L\n\x3\x2\x2\x2MN\a+\x2\x2N\f\x3\x2\x2\x2OP\ak"+
+		"\x2\x2PQ\ah\x2\x2Q\xE\x3\x2\x2\x2RS\ak\x2\x2ST\ah\x2\x2TU\ag\x2\x2UV\a"+
+		"p\x2\x2VW\a\x66\x2\x2W\x10\x3\x2\x2\x2XY\ah\x2\x2YZ\aq\x2\x2Z[\at\x2\x2"+
+		"[\x12\x3\x2\x2\x2\\]\ah\x2\x2]^\aq\x2\x2^_\at\x2\x2_`\ag\x2\x2`\x61\a"+
+		"p\x2\x2\x61\x62\a\x66\x2\x2\x62\x14\x3\x2\x2\x2\x63\x64\ay\x2\x2\x64\x65"+
+		"\aj\x2\x2\x65\x66\ak\x2\x2\x66g\an\x2\x2gh\ag\x2\x2h\x16\x3\x2\x2\x2i"+
+		"j\ay\x2\x2jk\aj\x2\x2kl\ak\x2\x2lm\an\x2\x2mn\ag\x2\x2no\ag\x2\x2op\a"+
+		"p\x2\x2pq\a\x66\x2\x2q\x18\x3\x2\x2\x2rs\a#\x2\x2s\x1A\x3\x2\x2\x2tu\a"+
+		",\x2\x2u\x1C\x3\x2\x2\x2vw\a\x31\x2\x2w\x1E\x3\x2\x2\x2xy\a\'\x2\x2y "+
+		"\x3\x2\x2\x2z{\a-\x2\x2{\"\x3\x2\x2\x2|}\a-\x2\x2}~\a-\x2\x2~$\x3\x2\x2"+
+		"\x2\x7F\x80\a/\x2\x2\x80\x81\a/\x2\x2\x81&\x3\x2\x2\x2\x82\x83\a/\x2\x2"+
+		"\x83(\x3\x2\x2\x2\x84\x85\a?\x2\x2\x85\x86\a?\x2\x2\x86*\x3\x2\x2\x2\x87"+
+		"\x88\a#\x2\x2\x88\x89\a?\x2\x2\x89,\x3\x2\x2\x2\x8A\x8B\a@\x2\x2\x8B."+
+		"\x3\x2\x2\x2\x8C\x8D\a>\x2\x2\x8D\x30\x3\x2\x2\x2\x8E\x8F\a>\x2\x2\x8F"+
+		"\x90\a?\x2\x2\x90\x32\x3\x2\x2\x2\x91\x92\a@\x2\x2\x92\x93\a?\x2\x2\x93"+
+		"\x34\x3\x2\x2\x2\x94\x96\t\x2\x2\x2\x95\x94\x3\x2\x2\x2\x96\x97\x3\x2"+
+		"\x2\x2\x97\x95\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x36\x3\x2\x2\x2\x99"+
+		"\x9B\t\x2\x2\x2\x9A\x99\x3\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x9A\x3\x2"+
+		"\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D\x9E\x3\x2\x2\x2\x9E\xA0\a\x30\x2\x2\x9F"+
+		"\xA1\t\x2\x2\x2\xA0\x9F\x3\x2\x2\x2\xA1\xA2\x3\x2\x2\x2\xA2\xA0\x3\x2"+
+		"\x2\x2\xA2\xA3\x3\x2\x2\x2\xA3\x38\x3\x2\x2\x2\xA4\xA5\a)\x2\x2\xA5\xA6"+
+		"\t\x3\x2\x2\xA6\xA7\a)\x2\x2\xA7:\x3\x2\x2\x2\xA8\xA9\av\x2\x2\xA9\xAA"+
+		"\at\x2\x2\xAA\xAB\aw\x2\x2\xAB\xB2\ag\x2\x2\xAC\xAD\ah\x2\x2\xAD\xAE\a"+
+		"\x63\x2\x2\xAE\xAF\an\x2\x2\xAF\xB0\au\x2\x2\xB0\xB2\ag\x2\x2\xB1\xA8"+
+		"\x3\x2\x2\x2\xB1\xAC\x3\x2\x2\x2\xB2<\x3\x2\x2\x2\xB3\xB4\ap\x2\x2\xB4"+
+		"\xB5\aw\x2\x2\xB5\xB6\an\x2\x2\xB6\xB7\an\x2\x2\xB7>\x3\x2\x2\x2\xB8\xBC"+
+		"\t\x4\x2\x2\xB9\xBB\t\x5\x2\x2\xBA\xB9\x3\x2\x2\x2\xBB\xBE\x3\x2\x2\x2"+
+		"\xBC\xBA\x3\x2\x2\x2\xBC\xBD\x3\x2\x2\x2\xBD@\x3\x2\x2\x2\xBE\xBC\x3\x2"+
+		"\x2\x2\xBF\xC0\a\x31\x2\x2\xC0\xC1\a\x31\x2\x2\xC1\xC5\x3\x2\x2\x2\xC2"+
+		"\xC4\n\x6\x2\x2\xC3\xC2\x3\x2\x2\x2\xC4\xC7\x3\x2\x2\x2\xC5\xC3\x3\x2"+
+		"\x2\x2\xC5\xC6\x3\x2\x2\x2\xC6\xD4\x3\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC8"+
+		"\xC9\a\x31\x2\x2\xC9\xCA\a,\x2\x2\xCA\xCE\x3\x2\x2\x2\xCB\xCD\v\x2\x2"+
+		"\x2\xCC\xCB\x3\x2\x2\x2\xCD\xD0\x3\x2\x2\x2\xCE\xCF\x3\x2\x2\x2\xCE\xCC"+
+		"\x3\x2\x2\x2\xCF\xD1\x3\x2\x2\x2\xD0\xCE\x3\x2\x2\x2\xD1\xD2\a,\x2\x2"+
+		"\xD2\xD4\a\x31\x2\x2\xD3\xBF\x3\x2\x2\x2\xD3\xC8\x3\x2\x2\x2\xD4\xD5\x3"+
+		"\x2\x2\x2\xD5\xD6\b!\x2\x2\xD6\x42\x3\x2\x2\x2\xD7\xD9\t\a\x2\x2\xD8\xD7"+
+		"\x3\x2\x2\x2\xD9\xDA\x3\x2\x2\x2\xDA\xD8\x3\x2\x2\x2\xDA\xDB\x3\x2\x2"+
+		"\x2\xDB\xDC\x3\x2\x2\x2\xDC\xDD\b\"\x2\x2\xDD\x44\x3\x2\x2\x2\f\x2\x97"+
+		"\x9C\xA2\xB1\xBC\xC5\xCE\xD3\xDA\x3\b\x2\x2";
 	public static readonly ATN _ATN =
 		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
 }
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from C:\\Users\\modes\\OneDrive\\Stalinis kompiuteris\\Compuler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\n\r\nusing Antlr4.Runtime.Misc;\r\nusing IErrorNode = Antlr4.Runtime.Tree.IErrorNode;\r\nusing ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;\r\nusing IToken = Antlr4.Runtime.IToken;\r\nusing ParserRuleContext = Antlr4.Runtime.ParserRuleContext;\r\n\r\n/// <summary>\r\n/// This class provides an empty implementation of <see cref=\"Ic2022v2Listener\"/>,\r\n/// which can be extended to create a listener which only needs to handle a subset\r\n/// of the available methods.\r\n/// </summary>\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2BaseListener : Ic2022v2Listener {\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.program\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterProgram([NotNull] c2022v2Parser.ProgramContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.program\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitProgram([NotNull] c2022v2Parser.ProgramContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.line\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterLine([NotNull] c2022v2Parser.LineContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.line\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitLine([NotNull] c2022v2Parser.LineContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.statement\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterStatement([NotNull] c2022v2Parser.StatementContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.statement\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitStatement([NotNull] c2022v2Parser.StatementContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.assignment\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterAssignment([NotNull] c2022v2Parser.AssignmentContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.assignment\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitAssignment([NotNull] c2022v2Parser.AssignmentContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.funCall\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterFunCall([NotNull] c2022v2Parser.FunCallContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.funCall\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitFunCall([NotNull] c2022v2Parser.FunCallContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.ifBlock\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterIfBlock([NotNull] c2022v2Parser.IfBlockContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.ifBlock\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitIfBlock([NotNull] c2022v2Parser.IfBlockContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.forBlock\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterForBlock([NotNull] c2022v2Parser.ForBlockContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.forBlock\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitForBlock([NotNull] c2022v2Parser.ForBlockContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.whileBlock\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterWhileBlock([NotNull] c2022v2Parser.WhileBlockContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.whileBlock\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitWhileBlock([NotNull] c2022v2Parser.WhileBlockContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.block\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterBlock([NotNull] c2022v2Parser.BlockContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.block\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitBlock([NotNull] c2022v2Parser.BlockContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.expression\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterExpression([NotNull] c2022v2Parser.ExpressionContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.expression\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitExpression([NotNull] c2022v2Parser.ExpressionContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.mul\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterMul([NotNull] c2022v2Parser.MulContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.mul\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitMul([NotNull] c2022v2Parser.MulContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.div\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterDiv([NotNull] c2022v2Parser.DivContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.div\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitDiv([NotNull] c2022v2Parser.DivContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.add\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterAdd([NotNull] c2022v2Parser.AddContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.add\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitAdd([NotNull] c2022v2Parser.AddContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.sub\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterSub([NotNull] c2022v2Parser.SubContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.sub\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitSub([NotNull] c2022v2Parser.SubContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.comp\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterComp([NotNull] c2022v2Parser.CompContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.comp\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitComp([NotNull] c2022v2Parser.CompContext context) { }\r\n\r\n\t/// <summary>\r\n\t/// Enter a parse tree produced by <see cref=\"c2022v2Parser.constant\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void EnterConstant([NotNull] c2022v2Parser.ConstantContext context) { }\r\n\t/// <summary>\r\n\t/// Exit a parse tree produced by <see cref=\"c2022v2Parser.constant\"/>.\r\n\t/// <para>The default implementation does nothing.</para>\r\n\t/// </summary>\r\n\t/// <param name=\"context\">The parse tree.</param>\r\n\tpublic virtual void ExitConstant([NotNull] c2022v2Parser.ConstantContext context) { }\r\n\r\n\t/// <inheritdoc/>\r\n\t/// <remarks>The default implementation does nothing.</remarks>\r\n\tpublic virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }\r\n\t/// <inheritdoc/>\r\n\t/// <remarks>The default implementation does nothing.</remarks>\r\n\tpublic virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }\r\n\t/// <inheritdoc/>\r\n\t/// <remarks>The default implementation does nothing.</remarks>\r\n\tpublic virtual void VisitTerminal([NotNull] ITerminalNode node) { }\r\n\t/// <inheritdoc/>\r\n\t/// <remarks>The default implementation does nothing.</remarks>\r\n\tpublic virtual void VisitErrorNode([NotNull] IErrorNode node) { }\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs	(revision 57448a85ba281ec43bf4f92057b63260c436a0c9)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs	(date 1653054169353)
@@ -204,6 +204,32 @@
 	/// <param name="context">The parse tree.</param>
 	public virtual void ExitAdd([NotNull] c2022v2Parser.AddContext context) { }
 
+	/// <summary>
+	/// Enter a parse tree produced by <see cref="c2022v2Parser.unaryadd"/>.
+	/// <para>The default implementation does nothing.</para>
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	public virtual void EnterUnaryadd([NotNull] c2022v2Parser.UnaryaddContext context) { }
+	/// <summary>
+	/// Exit a parse tree produced by <see cref="c2022v2Parser.unaryadd"/>.
+	/// <para>The default implementation does nothing.</para>
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	public virtual void ExitUnaryadd([NotNull] c2022v2Parser.UnaryaddContext context) { }
+
+	/// <summary>
+	/// Enter a parse tree produced by <see cref="c2022v2Parser.unarysub"/>.
+	/// <para>The default implementation does nothing.</para>
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	public virtual void EnterUnarysub([NotNull] c2022v2Parser.UnarysubContext context) { }
+	/// <summary>
+	/// Exit a parse tree produced by <see cref="c2022v2Parser.unarysub"/>.
+	/// <para>The default implementation does nothing.</para>
+	/// </summary>
+	/// <param name="context">The parse tree.</param>
+	public virtual void ExitUnarysub([NotNull] c2022v2Parser.UnarysubContext context) { }
+
 	/// <summary>
 	/// Enter a parse tree produced by <see cref="c2022v2Parser.sub"/>.
 	/// <para>The default implementation does nothing.</para>
