Index: .idea/.idea.Solution1/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile>ConsoleApp1/ConsoleApp1.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7a71278d-1cd7-486a-93e7-b09a716d6e25\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/b6a71b9fb8cb8fcf342bff16be4e6da2de533ad363bb5cc78b2dca9bd59e83/Char.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/f3b9684f72bc2cc435eb694f7cc86eca8c240d2d1cefa1e8697a61f1f2f27f/SafeFileHandle.Windows.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29PmUYAlJ7PmEiYQZpEIWlBgXjj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ConsoleApp1\" type=\"DotNetProject\" factoryName=\".NET Project\">\r\n      <option name=\"EXE_PATH\" value=\"\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/ConsoleApp1/ConsoleApp1.csproj\" />\r\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\r\n      <option name=\"PROJECT_TFM\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7a71278d-1cd7-486a-93e7-b09a716d6e25\" name=\"Changes\" comment=\"\" />\r\n      <created>1653023113611</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1653023113611</updated>\r\n      <workItem from=\"1653023118882\" duration=\"235000\" />\r\n      <workItem from=\"1653029894573\" duration=\"3566000\" />\r\n      <workItem from=\"1653033488614\" duration=\"1494000\" />\r\n      <workItem from=\"1653035006703\" duration=\"247000\" />\r\n      <workItem from=\"1653046092248\" duration=\"518000\" />\r\n      <workItem from=\"1653047072830\" duration=\"534000\" />\r\n      <workItem from=\"1653047736530\" duration=\"90000\" />\r\n      <workItem from=\"1653047844229\" duration=\"4058000\" />\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"new\">\r\n      <created>1653023147518</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1653023147518</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00002\" summary=\"simple g4\">\r\n      <created>1653023251588</created>\r\n      <option name=\"number\" value=\"LOCAL−00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00002\" />\r\n      <updated>1653023251588</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00003\" summary=\"start gramma\">\r\n      <created>1653031385198</created>\r\n      <option name=\"number\" value=\"LOCAL−00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00003\" />\r\n      <updated>1653031385198</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00004\" summary=\".\">\r\n      <created>1653033664149</created>\r\n      <option name=\"number\" value=\"LOCAL−00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00004\" />\r\n      <updated>1653033664149</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00005\" summary=\"new begining\">\r\n      <created>1653035202894</created>\r\n      <option name=\"number\" value=\"LOCAL−00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00005\" />\r\n      <updated>1653035202894</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00006\" summary=\".\">\r\n      <created>1653056047720</created>\r\n      <option name=\"number\" value=\"LOCAL−00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00006\" />\r\n      <updated>1653056047720</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00007\" summary=\".\">\r\n      <created>1653058587358</created>\r\n      <option name=\"number\" value=\"LOCAL−00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00007\" />\r\n      <updated>1653058587358</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"NUnit\" />\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n    <MESSAGE value=\"new\" />\r\n    <MESSAGE value=\"simple g4\" />\r\n    <MESSAGE value=\"start gramma\" />\r\n    <MESSAGE value=\"new begining\" />\r\n    <MESSAGE value=\".\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\".\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.Solution1/.idea/workspace.xml b/.idea/.idea.Solution1/.idea/workspace.xml
--- a/.idea/.idea.Solution1/.idea/workspace.xml	(revision f6b2e0c4435adf65f67294cb2ac93d0704ad0733)
+++ b/.idea/.idea.Solution1/.idea/workspace.xml	(date 1653109977272)
@@ -9,14 +9,6 @@
   <component name="ChangeListManager">
     <list default="true" id="7a71278d-1cd7-486a-93e7-b09a716d6e25" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -131,7 +123,13 @@
       <option name="presentableId" value="LOCAL−00007" />
       <updated>1653058587358</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL−00008" summary=".">
+      <created>1653060141818</created>
+      <option name="number" value="LOCAL−00008" />
+      <option name="presentableId" value="LOCAL−00008" />
+      <updated>1653060141818</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from D:\\KTUOneDrive\\OneDrive - Kaunas University of Technology\\4pusmetis\\Programavimo kalbų teorija\\Compiler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime;\r\nusing Antlr4.Runtime.Atn;\r\nusing Antlr4.Runtime.Misc;\r\nusing Antlr4.Runtime.Tree;\r\nusing System.Collections.Generic;\r\nusing DFA = Antlr4.Runtime.Dfa.DFA;\r\n\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2Parser : Parser {\r\n\tpublic const int\r\n\t\tT__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, \r\n\t\tT__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, \r\n\t\tT__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, \r\n\t\tT__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, \r\n\t\tBOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;\r\n\tpublic const int\r\n\t\tRULE_program = 0, RULE_line = 1, RULE_statement = 2, RULE_assignment = 3, \r\n\t\tRULE_funCall = 4, RULE_printCall = 5, RULE_ifBlock = 6, RULE_elseifBlock = 7, \r\n\t\tRULE_elseBlock = 8, RULE_forBlock = 9, RULE_whileBlock = 10, RULE_block = 11, \r\n\t\tRULE_expression = 12, RULE_mul = 13, RULE_div = 14, RULE_add = 15, RULE_unaryadd = 16, \r\n\t\tRULE_unarysub = 17, RULE_sub = 18, RULE_comp = 19, RULE_constant = 20;\r\n\tpublic static readonly string[] ruleNames = {\r\n\t\t\"program\", \"line\", \"statement\", \"assignment\", \"funCall\", \"printCall\", \r\n\t\t\"ifBlock\", \"elseifBlock\", \"elseBlock\", \"forBlock\", \"whileBlock\", \"block\", \r\n\t\t\"expression\", \"mul\", \"div\", \"add\", \"unaryadd\", \"unarysub\", \"sub\", \"comp\", \r\n\t\t\"constant\"\r\n\t};\r\n\r\n\tprivate static readonly string[] _LiteralNames = {\r\n\t\tnull, \"';'\", \"'='\", \"'('\", \"','\", \"')'\", \"'if'\", \"'ifend'\", \"'elseif'\", \r\n\t\t\"'else'\", \"'for'\", \"'forend'\", \"'while'\", \"'whileend'\", \"'!'\", \"'*'\", \r\n\t\t\"'/'\", \"'%'\", \"'+'\", \"'++'\", \"'--'\", \"'-'\", \"'=='\", \"'!='\", \"'>'\", \"'<'\", \r\n\t\t\"'<='\", \"'>='\", \"'print'\", null, null, null, null, \"'null'\"\r\n\t};\r\n\tprivate static readonly string[] _SymbolicNames = {\r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, \"PRINT\", \"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \r\n\t\t\"NULL\", \"IDENTIFIER\", \"COMMENT\", \"WS\"\r\n\t};\r\n\tpublic static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);\r\n\r\n\t[System.Obsolete(\"Use Vocabulary instead.\")]\r\n\tpublic static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);\r\n\r\n\tprivate static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {\r\n\t\tstring[] tokenNames = new string[length];\r\n\t\tfor (int i = 0; i < tokenNames.Length; i++) {\r\n\t\t\ttokenNames[i] = vocabulary.GetLiteralName(i);\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = vocabulary.GetSymbolicName(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = \"<INVALID>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokenNames;\r\n\t}\r\n\r\n\t[System.Obsolete(\"Use IRecognizer.Vocabulary instead.\")]\r\n\tpublic override string[] TokenNames\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn tokenNames;\r\n\t\t}\r\n\t}\r\n\r\n\t[NotNull]\r\n\tpublic override IVocabulary Vocabulary\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn DefaultVocabulary;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override string GrammarFileName { get { return \"c2022v2.g4\"; } }\r\n\r\n\tpublic override string[] RuleNames { get { return ruleNames; } }\r\n\r\n\tpublic override string SerializedAtn { get { return _serializedATN; } }\r\n\r\n\tpublic c2022v2Parser(ITokenStream input)\r\n\t\t: base(input)\r\n\t{\r\n\t\t_interp = new ParserATNSimulator(this,_ATN);\r\n\t}\r\n\tpublic partial class ProgramContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode Eof() { return GetToken(c2022v2Parser.Eof, 0); }\r\n\t\tpublic LineContext[] line() {\r\n\t\t\treturn GetRuleContexts<LineContext>();\r\n\t\t}\r\n\t\tpublic LineContext line(int i) {\r\n\t\t\treturn GetRuleContext<LineContext>(i);\r\n\t\t}\r\n\t\tpublic ProgramContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_program; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterProgram(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitProgram(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitProgram(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ProgramContext program() {\r\n\t\tProgramContext _localctx = new ProgramContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 0, RULE_program);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 45;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\twhile ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0)) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 42; line();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 47;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t}\r\n\t\t\tState = 48; Match(Eof);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class LineContext : ParserRuleContext {\r\n\t\tpublic StatementContext statement() {\r\n\t\t\treturn GetRuleContext<StatementContext>(0);\r\n\t\t}\r\n\t\tpublic IfBlockContext ifBlock() {\r\n\t\t\treturn GetRuleContext<IfBlockContext>(0);\r\n\t\t}\r\n\t\tpublic ForBlockContext forBlock() {\r\n\t\t\treturn GetRuleContext<ForBlockContext>(0);\r\n\t\t}\r\n\t\tpublic WhileBlockContext whileBlock() {\r\n\t\t\treturn GetRuleContext<WhileBlockContext>(0);\r\n\t\t}\r\n\t\tpublic LineContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_line; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterLine(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitLine(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitLine(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic LineContext line() {\r\n\t\tLineContext _localctx = new LineContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 2, RULE_line);\r\n\t\ttry {\r\n\t\t\tState = 54;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch (_input.La(1)) {\r\n\t\t\tcase PRINT:\r\n\t\t\tcase IDENTIFIER:\r\n\t\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tState = 50; statement();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__5:\r\n\t\t\t\tEnterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tState = 51; ifBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__9:\r\n\t\t\t\tEnterOuterAlt(_localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tState = 52; forBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__11:\r\n\t\t\t\tEnterOuterAlt(_localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tState = 53; whileBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class StatementContext : ParserRuleContext {\r\n\t\tpublic AssignmentContext assignment() {\r\n\t\t\treturn GetRuleContext<AssignmentContext>(0);\r\n\t\t}\r\n\t\tpublic FunCallContext funCall() {\r\n\t\t\treturn GetRuleContext<FunCallContext>(0);\r\n\t\t}\r\n\t\tpublic PrintCallContext printCall() {\r\n\t\t\treturn GetRuleContext<PrintCallContext>(0);\r\n\t\t}\r\n\t\tpublic StatementContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_statement; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterStatement(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitStatement(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitStatement(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic StatementContext statement() {\r\n\t\tStatementContext _localctx = new StatementContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 4, RULE_statement);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 59;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch ( Interpreter.AdaptivePredict(_input,2,_ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tState = 56; assignment();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tState = 57; funCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\t{\r\n\t\t\t\tState = 58; printCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tState = 61; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class AssignmentContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic AssignmentContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_assignment; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterAssignment(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitAssignment(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitAssignment(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic AssignmentContext assignment() {\r\n\t\tAssignmentContext _localctx = new AssignmentContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 6, RULE_assignment);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 63; Match(IDENTIFIER);\r\n\t\t\tState = 64; Match(T__1);\r\n\t\t\tState = 65; expression(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class FunCallContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic FunCallContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_funCall; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterFunCall(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitFunCall(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitFunCall(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic FunCallContext funCall() {\r\n\t\tFunCallContext _localctx = new FunCallContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 8, RULE_funCall);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 67; Match(IDENTIFIER);\r\n\t\t\tState = 68; Match(T__2);\r\n\t\t\tState = 77;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__13) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {\r\n\t\t\t\t{\r\n\t\t\t\tState = 69; expression(0);\r\n\t\t\t\tState = 74;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t\twhile (_la==T__3) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tState = 70; Match(T__3);\r\n\t\t\t\t\tState = 71; expression(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tState = 76;\r\n\t\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t\t_la = _input.La(1);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tState = 79; Match(T__4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class PrintCallContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode PRINT() { return GetToken(c2022v2Parser.PRINT, 0); }\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic PrintCallContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_printCall; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterPrintCall(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitPrintCall(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitPrintCall(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic PrintCallContext printCall() {\r\n\t\tPrintCallContext _localctx = new PrintCallContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 10, RULE_printCall);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 81; Match(PRINT);\r\n\t\t\tState = 82; Match(T__2);\r\n\t\t\tState = 83; expression(0);\r\n\t\t\tState = 84; Match(T__4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class IfBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ElseifBlockContext[] elseifBlock() {\r\n\t\t\treturn GetRuleContexts<ElseifBlockContext>();\r\n\t\t}\r\n\t\tpublic ElseifBlockContext elseifBlock(int i) {\r\n\t\t\treturn GetRuleContext<ElseifBlockContext>(i);\r\n\t\t}\r\n\t\tpublic ElseBlockContext elseBlock() {\r\n\t\t\treturn GetRuleContext<ElseBlockContext>(0);\r\n\t\t}\r\n\t\tpublic IfBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_ifBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterIfBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitIfBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitIfBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic IfBlockContext ifBlock() {\r\n\t\tIfBlockContext _localctx = new IfBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 12, RULE_ifBlock);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 86; Match(T__5);\r\n\t\t\tState = 87; Match(T__2);\r\n\t\t\tState = 88; expression(0);\r\n\t\t\tState = 89; Match(T__4);\r\n\t\t\tState = 90; block();\r\n\t\t\tState = 94;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\twhile (_la==T__7) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 91; elseifBlock();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 96;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t}\r\n\t\t\tState = 98;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif (_la==T__8) {\r\n\t\t\t\t{\r\n\t\t\t\tState = 97; elseBlock();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tState = 100; Match(T__6);\r\n\t\t\tState = 101; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ElseifBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ElseifBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_elseifBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterElseifBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitElseifBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitElseifBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ElseifBlockContext elseifBlock() {\r\n\t\tElseifBlockContext _localctx = new ElseifBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 14, RULE_elseifBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 103; Match(T__7);\r\n\t\t\tState = 104; Match(T__2);\r\n\t\t\tState = 105; expression(0);\r\n\t\t\tState = 106; Match(T__4);\r\n\t\t\tState = 107; block();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ElseBlockContext : ParserRuleContext {\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ElseBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_elseBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterElseBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitElseBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitElseBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ElseBlockContext elseBlock() {\r\n\t\tElseBlockContext _localctx = new ElseBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 16, RULE_elseBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 109; Match(T__8);\r\n\t\t\tState = 110; block();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ForBlockContext : ParserRuleContext {\r\n\t\tpublic AssignmentContext assignment() {\r\n\t\t\treturn GetRuleContext<AssignmentContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ForBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_forBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterForBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitForBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitForBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ForBlockContext forBlock() {\r\n\t\tForBlockContext _localctx = new ForBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 18, RULE_forBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 112; Match(T__9);\r\n\t\t\tState = 113; Match(T__2);\r\n\t\t\tState = 114; assignment();\r\n\t\t\tState = 115; Match(T__0);\r\n\t\t\tState = 116; expression(0);\r\n\t\t\tState = 117; Match(T__0);\r\n\t\t\tState = 118; expression(0);\r\n\t\t\tState = 119; Match(T__4);\r\n\t\t\tState = 120; block();\r\n\t\t\tState = 121; Match(T__10);\r\n\t\t\tState = 122; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class WhileBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic WhileBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_whileBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterWhileBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitWhileBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitWhileBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic WhileBlockContext whileBlock() {\r\n\t\tWhileBlockContext _localctx = new WhileBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 20, RULE_whileBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 124; Match(T__11);\r\n\t\t\tState = 125; expression(0);\r\n\t\t\tState = 126; block();\r\n\t\t\tState = 127; Match(T__12);\r\n\t\t\tState = 128; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class BlockContext : ParserRuleContext {\r\n\t\tpublic LineContext[] line() {\r\n\t\t\treturn GetRuleContexts<LineContext>();\r\n\t\t}\r\n\t\tpublic LineContext line(int i) {\r\n\t\t\treturn GetRuleContext<LineContext>(i);\r\n\t\t}\r\n\t\tpublic BlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_block; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic BlockContext block() {\r\n\t\tBlockContext _localctx = new BlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 22, RULE_block);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 131;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tdo {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 130; line();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 133;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0) );\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ExpressionContext : ParserRuleContext {\r\n\t\tpublic ConstantContext constant() {\r\n\t\t\treturn GetRuleContext<ConstantContext>(0);\r\n\t\t}\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic FunCallContext funCall() {\r\n\t\t\treturn GetRuleContext<FunCallContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic CompContext comp() {\r\n\t\t\treturn GetRuleContext<CompContext>(0);\r\n\t\t}\r\n\t\tpublic MulContext mul() {\r\n\t\t\treturn GetRuleContext<MulContext>(0);\r\n\t\t}\r\n\t\tpublic DivContext div() {\r\n\t\t\treturn GetRuleContext<DivContext>(0);\r\n\t\t}\r\n\t\tpublic AddContext add() {\r\n\t\t\treturn GetRuleContext<AddContext>(0);\r\n\t\t}\r\n\t\tpublic SubContext sub() {\r\n\t\t\treturn GetRuleContext<SubContext>(0);\r\n\t\t}\r\n\t\tpublic UnaryaddContext unaryadd() {\r\n\t\t\treturn GetRuleContext<UnaryaddContext>(0);\r\n\t\t}\r\n\t\tpublic UnarysubContext unarysub() {\r\n\t\t\treturn GetRuleContext<UnarysubContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_expression; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterExpression(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitExpression(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitExpression(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ExpressionContext expression() {\r\n\t\treturn expression(0);\r\n\t}\r\n\r\n\tprivate ExpressionContext expression(int _p) {\r\n\t\tParserRuleContext _parentctx = _ctx;\r\n\t\tint _parentState = State;\r\n\t\tExpressionContext _localctx = new ExpressionContext(_ctx, _parentState);\r\n\t\tExpressionContext _prevctx = _localctx;\r\n\t\tint _startState = 24;\r\n\t\tEnterRecursionRule(_localctx, 24, RULE_expression, _p);\r\n\t\ttry {\r\n\t\t\tint _alt;\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 145;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch ( Interpreter.AdaptivePredict(_input,8,_ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tState = 136; constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tState = 137; Match(IDENTIFIER);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\t{\r\n\t\t\t\tState = 138; funCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\t{\r\n\t\t\t\tState = 139; Match(T__2);\r\n\t\t\t\tState = 140; expression(0);\r\n\t\t\t\tState = 141; Match(T__4);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\t{\r\n\t\t\t\tState = 143; Match(T__13);\r\n\t\t\t\tState = 144; expression(8);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t_ctx.stop = _input.Lt(-1);\r\n\t\t\tState = 173;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_alt = Interpreter.AdaptivePredict(_input,10,_ctx);\r\n\t\t\twhile ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber ) {\r\n\t\t\t\tif ( _alt==1 ) {\r\n\t\t\t\t\tif ( _parseListeners!=null ) TriggerExitRuleEvent();\r\n\t\t\t\t\t_prevctx = _localctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\tState = 171;\r\n\t\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t\tswitch ( Interpreter.AdaptivePredict(_input,9,_ctx) ) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 147;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 7))) throw new FailedPredicateException(this, \"Precpred(_ctx, 7)\");\r\n\t\t\t\t\t\tState = 148; comp();\r\n\t\t\t\t\t\tState = 149; expression(8);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 151;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 6))) throw new FailedPredicateException(this, \"Precpred(_ctx, 6)\");\r\n\t\t\t\t\t\tState = 152; mul();\r\n\t\t\t\t\t\tState = 153; expression(7);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 155;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, \"Precpred(_ctx, 5)\");\r\n\t\t\t\t\t\tState = 156; div();\r\n\t\t\t\t\t\tState = 157; expression(6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 159;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, \"Precpred(_ctx, 4)\");\r\n\t\t\t\t\t\tState = 160; add();\r\n\t\t\t\t\t\tState = 161; expression(5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 163;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, \"Precpred(_ctx, 3)\");\r\n\t\t\t\t\t\tState = 164; sub();\r\n\t\t\t\t\t\tState = 165; expression(4);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 167;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, \"Precpred(_ctx, 2)\");\r\n\t\t\t\t\t\tState = 168; unaryadd();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 169;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 1))) throw new FailedPredicateException(this, \"Precpred(_ctx, 1)\");\r\n\t\t\t\t\t\tState = 170; unarysub();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tState = 175;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_alt = Interpreter.AdaptivePredict(_input,10,_ctx);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tUnrollRecursionContexts(_parentctx);\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class MulContext : ParserRuleContext {\r\n\t\tpublic MulContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_mul; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterMul(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitMul(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitMul(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic MulContext mul() {\r\n\t\tMulContext _localctx = new MulContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 26, RULE_mul);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 176; Match(T__14);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class DivContext : ParserRuleContext {\r\n\t\tpublic DivContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_div; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterDiv(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitDiv(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitDiv(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic DivContext div() {\r\n\t\tDivContext _localctx = new DivContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 28, RULE_div);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 178;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !(_la==T__15 || _la==T__16) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class AddContext : ParserRuleContext {\r\n\t\tpublic AddContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_add; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterAdd(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitAdd(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitAdd(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic AddContext add() {\r\n\t\tAddContext _localctx = new AddContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 30, RULE_add);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 180; Match(T__17);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class UnaryaddContext : ParserRuleContext {\r\n\t\tpublic UnaryaddContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_unaryadd; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterUnaryadd(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitUnaryadd(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitUnaryadd(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic UnaryaddContext unaryadd() {\r\n\t\tUnaryaddContext _localctx = new UnaryaddContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 32, RULE_unaryadd);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 182; Match(T__18);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class UnarysubContext : ParserRuleContext {\r\n\t\tpublic UnarysubContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_unarysub; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterUnarysub(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitUnarysub(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitUnarysub(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic UnarysubContext unarysub() {\r\n\t\tUnarysubContext _localctx = new UnarysubContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 34, RULE_unarysub);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 184; Match(T__19);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class SubContext : ParserRuleContext {\r\n\t\tpublic SubContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_sub; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterSub(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitSub(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitSub(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic SubContext sub() {\r\n\t\tSubContext _localctx = new SubContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 36, RULE_sub);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 186; Match(T__20);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class CompContext : ParserRuleContext {\r\n\t\tpublic CompContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_comp; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterComp(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitComp(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitComp(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic CompContext comp() {\r\n\t\tCompContext _localctx = new CompContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 38, RULE_comp);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 188;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__21) | (1L << T__22) | (1L << T__23) | (1L << T__24) | (1L << T__25) | (1L << T__26))) != 0)) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ConstantContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode INTEGER() { return GetToken(c2022v2Parser.INTEGER, 0); }\r\n\t\tpublic ITerminalNode DOUBLE() { return GetToken(c2022v2Parser.DOUBLE, 0); }\r\n\t\tpublic ITerminalNode CHAR() { return GetToken(c2022v2Parser.CHAR, 0); }\r\n\t\tpublic ITerminalNode BOOL() { return GetToken(c2022v2Parser.BOOL, 0); }\r\n\t\tpublic ITerminalNode NULL() { return GetToken(c2022v2Parser.NULL, 0); }\r\n\t\tpublic ConstantContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_constant; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterConstant(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitConstant(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitConstant(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ConstantContext constant() {\r\n\t\tConstantContext _localctx = new ConstantContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 40, RULE_constant);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 190;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL))) != 0)) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {\r\n\t\tswitch (ruleIndex) {\r\n\t\tcase 12: return expression_sempred((ExpressionContext)_localctx, predIndex);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate bool expression_sempred(ExpressionContext _localctx, int predIndex) {\r\n\t\tswitch (predIndex) {\r\n\t\tcase 0: return Precpred(_ctx, 7);\r\n\r\n\t\tcase 1: return Precpred(_ctx, 6);\r\n\r\n\t\tcase 2: return Precpred(_ctx, 5);\r\n\r\n\t\tcase 3: return Precpred(_ctx, 4);\r\n\r\n\t\tcase 4: return Precpred(_ctx, 3);\r\n\r\n\t\tcase 5: return Precpred(_ctx, 2);\r\n\r\n\t\tcase 6: return Precpred(_ctx, 1);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static readonly string _serializedATN =\r\n\t\t\"\\x3\\xAF6F\\x8320\\x479D\\xB75C\\x4880\\x1605\\x191C\\xAB37\\x3&\\xC3\\x4\\x2\\t\\x2\"+\r\n\t\t\"\\x4\\x3\\t\\x3\\x4\\x4\\t\\x4\\x4\\x5\\t\\x5\\x4\\x6\\t\\x6\\x4\\a\\t\\a\\x4\\b\\t\\b\\x4\\t\\t\"+\r\n\t\t\"\\t\\x4\\n\\t\\n\\x4\\v\\t\\v\\x4\\f\\t\\f\\x4\\r\\t\\r\\x4\\xE\\t\\xE\\x4\\xF\\t\\xF\\x4\\x10\\t\"+\r\n\t\t\"\\x10\\x4\\x11\\t\\x11\\x4\\x12\\t\\x12\\x4\\x13\\t\\x13\\x4\\x14\\t\\x14\\x4\\x15\\t\\x15\"+\r\n\t\t\"\\x4\\x16\\t\\x16\\x3\\x2\\a\\x2.\\n\\x2\\f\\x2\\xE\\x2\\x31\\v\\x2\\x3\\x2\\x3\\x2\\x3\\x3\\x3\"+\r\n\t\t\"\\x3\\x3\\x3\\x3\\x3\\x5\\x3\\x39\\n\\x3\\x3\\x4\\x3\\x4\\x3\\x4\\x5\\x4>\\n\\x4\\x3\\x4\\x3\"+\r\n\t\t\"\\x4\\x3\\x5\\x3\\x5\\x3\\x5\\x3\\x5\\x3\\x6\\x3\\x6\\x3\\x6\\x3\\x6\\x3\\x6\\a\\x6K\\n\\x6\\f\"+\r\n\t\t\"\\x6\\xE\\x6N\\v\\x6\\x5\\x6P\\n\\x6\\x3\\x6\\x3\\x6\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\x3\\b\"+\r\n\t\t\"\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\a\\b_\\n\\b\\f\\b\\xE\\b\\x62\\v\\b\\x3\\b\\x5\\b\\x65\\n\\b\"+\r\n\t\t\"\\x3\\b\\x3\\b\\x3\\b\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\n\\x3\\n\\x3\\n\\x3\\v\\x3\\v\"+\r\n\t\t\"\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\f\\x3\\f\\x3\\f\\x3\\f\"+\r\n\t\t\"\\x3\\f\\x3\\f\\x3\\r\\x6\\r\\x86\\n\\r\\r\\r\\xE\\r\\x87\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\"+\r\n\t\t\"\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x5\\xE\\x94\\n\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\"+\r\n\t\t\"\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\"+\r\n\t\t\"\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\a\\xE\\xAE\\n\\xE\\f\\xE\"+\r\n\t\t\"\\xE\\xE\\xB1\\v\\xE\\x3\\xF\\x3\\xF\\x3\\x10\\x3\\x10\\x3\\x11\\x3\\x11\\x3\\x12\\x3\\x12\"+\r\n\t\t\"\\x3\\x13\\x3\\x13\\x3\\x14\\x3\\x14\\x3\\x15\\x3\\x15\\x3\\x16\\x3\\x16\\x3\\x16\\x2\\x2\"+\r\n\t\t\"\\x3\\x1A\\x17\\x2\\x2\\x4\\x2\\x6\\x2\\b\\x2\\n\\x2\\f\\x2\\xE\\x2\\x10\\x2\\x12\\x2\\x14\\x2\"+\r\n\t\t\"\\x16\\x2\\x18\\x2\\x1A\\x2\\x1C\\x2\\x1E\\x2 \\x2\\\"\\x2$\\x2&\\x2(\\x2*\\x2\\x2\\x5\\x3\"+\r\n\t\t\"\\x2\\x12\\x13\\x3\\x2\\x18\\x1D\\x3\\x2\\x1F#\\xC3\\x2/\\x3\\x2\\x2\\x2\\x4\\x38\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x6=\\x3\\x2\\x2\\x2\\b\\x41\\x3\\x2\\x2\\x2\\n\\x45\\x3\\x2\\x2\\x2\\fS\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\xEX\\x3\\x2\\x2\\x2\\x10i\\x3\\x2\\x2\\x2\\x12o\\x3\\x2\\x2\\x2\\x14r\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x16~\\x3\\x2\\x2\\x2\\x18\\x85\\x3\\x2\\x2\\x2\\x1A\\x93\\x3\\x2\\x2\\x2\\x1C\\xB2\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x1E\\xB4\\x3\\x2\\x2\\x2 \\xB6\\x3\\x2\\x2\\x2\\\"\\xB8\\x3\\x2\\x2\\x2$\\xBA\\x3\"+\r\n\t\t\"\\x2\\x2\\x2&\\xBC\\x3\\x2\\x2\\x2(\\xBE\\x3\\x2\\x2\\x2*\\xC0\\x3\\x2\\x2\\x2,.\\x5\\x4\\x3\"+\r\n\t\t\"\\x2-,\\x3\\x2\\x2\\x2.\\x31\\x3\\x2\\x2\\x2/-\\x3\\x2\\x2\\x2/\\x30\\x3\\x2\\x2\\x2\\x30\"+\r\n\t\t\"\\x32\\x3\\x2\\x2\\x2\\x31/\\x3\\x2\\x2\\x2\\x32\\x33\\a\\x2\\x2\\x3\\x33\\x3\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x34\\x39\\x5\\x6\\x4\\x2\\x35\\x39\\x5\\xE\\b\\x2\\x36\\x39\\x5\\x14\\v\\x2\\x37\\x39\\x5\"+\r\n\t\t\"\\x16\\f\\x2\\x38\\x34\\x3\\x2\\x2\\x2\\x38\\x35\\x3\\x2\\x2\\x2\\x38\\x36\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x38\\x37\\x3\\x2\\x2\\x2\\x39\\x5\\x3\\x2\\x2\\x2:>\\x5\\b\\x5\\x2;>\\x5\\n\\x6\\x2<>\\x5\"+\r\n\t\t\"\\f\\a\\x2=:\\x3\\x2\\x2\\x2=;\\x3\\x2\\x2\\x2=<\\x3\\x2\\x2\\x2>?\\x3\\x2\\x2\\x2?@\\a\\x3\"+\r\n\t\t\"\\x2\\x2@\\a\\x3\\x2\\x2\\x2\\x41\\x42\\a$\\x2\\x2\\x42\\x43\\a\\x4\\x2\\x2\\x43\\x44\\x5\\x1A\"+\r\n\t\t\"\\xE\\x2\\x44\\t\\x3\\x2\\x2\\x2\\x45\\x46\\a$\\x2\\x2\\x46O\\a\\x5\\x2\\x2GL\\x5\\x1A\\xE\"+\r\n\t\t\"\\x2HI\\a\\x6\\x2\\x2IK\\x5\\x1A\\xE\\x2JH\\x3\\x2\\x2\\x2KN\\x3\\x2\\x2\\x2LJ\\x3\\x2\\x2\"+\r\n\t\t\"\\x2LM\\x3\\x2\\x2\\x2MP\\x3\\x2\\x2\\x2NL\\x3\\x2\\x2\\x2OG\\x3\\x2\\x2\\x2OP\\x3\\x2\\x2\"+\r\n\t\t\"\\x2PQ\\x3\\x2\\x2\\x2QR\\a\\a\\x2\\x2R\\v\\x3\\x2\\x2\\x2ST\\a\\x1E\\x2\\x2TU\\a\\x5\\x2\\x2\"+\r\n\t\t\"UV\\x5\\x1A\\xE\\x2VW\\a\\a\\x2\\x2W\\r\\x3\\x2\\x2\\x2XY\\a\\b\\x2\\x2YZ\\a\\x5\\x2\\x2Z[\"+\r\n\t\t\"\\x5\\x1A\\xE\\x2[\\\\\\a\\a\\x2\\x2\\\\`\\x5\\x18\\r\\x2]_\\x5\\x10\\t\\x2^]\\x3\\x2\\x2\\x2\"+\r\n\t\t\"_\\x62\\x3\\x2\\x2\\x2`^\\x3\\x2\\x2\\x2`\\x61\\x3\\x2\\x2\\x2\\x61\\x64\\x3\\x2\\x2\\x2\\x62\"+\r\n\t\t\"`\\x3\\x2\\x2\\x2\\x63\\x65\\x5\\x12\\n\\x2\\x64\\x63\\x3\\x2\\x2\\x2\\x64\\x65\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x65\\x66\\x3\\x2\\x2\\x2\\x66g\\a\\t\\x2\\x2gh\\a\\x3\\x2\\x2h\\xF\\x3\\x2\\x2\\x2ij\"+\r\n\t\t\"\\a\\n\\x2\\x2jk\\a\\x5\\x2\\x2kl\\x5\\x1A\\xE\\x2lm\\a\\a\\x2\\x2mn\\x5\\x18\\r\\x2n\\x11\"+\r\n\t\t\"\\x3\\x2\\x2\\x2op\\a\\v\\x2\\x2pq\\x5\\x18\\r\\x2q\\x13\\x3\\x2\\x2\\x2rs\\a\\f\\x2\\x2st\"+\r\n\t\t\"\\a\\x5\\x2\\x2tu\\x5\\b\\x5\\x2uv\\a\\x3\\x2\\x2vw\\x5\\x1A\\xE\\x2wx\\a\\x3\\x2\\x2xy\\x5\"+\r\n\t\t\"\\x1A\\xE\\x2yz\\a\\a\\x2\\x2z{\\x5\\x18\\r\\x2{|\\a\\r\\x2\\x2|}\\a\\x3\\x2\\x2}\\x15\\x3\"+\r\n\t\t\"\\x2\\x2\\x2~\\x7F\\a\\xE\\x2\\x2\\x7F\\x80\\x5\\x1A\\xE\\x2\\x80\\x81\\x5\\x18\\r\\x2\\x81\"+\r\n\t\t\"\\x82\\a\\xF\\x2\\x2\\x82\\x83\\a\\x3\\x2\\x2\\x83\\x17\\x3\\x2\\x2\\x2\\x84\\x86\\x5\\x4\\x3\"+\r\n\t\t\"\\x2\\x85\\x84\\x3\\x2\\x2\\x2\\x86\\x87\\x3\\x2\\x2\\x2\\x87\\x85\\x3\\x2\\x2\\x2\\x87\\x88\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x88\\x19\\x3\\x2\\x2\\x2\\x89\\x8A\\b\\xE\\x1\\x2\\x8A\\x94\\x5*\\x16\\x2\"+\r\n\t\t\"\\x8B\\x94\\a$\\x2\\x2\\x8C\\x94\\x5\\n\\x6\\x2\\x8D\\x8E\\a\\x5\\x2\\x2\\x8E\\x8F\\x5\\x1A\"+\r\n\t\t\"\\xE\\x2\\x8F\\x90\\a\\a\\x2\\x2\\x90\\x94\\x3\\x2\\x2\\x2\\x91\\x92\\a\\x10\\x2\\x2\\x92\\x94\"+\r\n\t\t\"\\x5\\x1A\\xE\\n\\x93\\x89\\x3\\x2\\x2\\x2\\x93\\x8B\\x3\\x2\\x2\\x2\\x93\\x8C\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x93\\x8D\\x3\\x2\\x2\\x2\\x93\\x91\\x3\\x2\\x2\\x2\\x94\\xAF\\x3\\x2\\x2\\x2\\x95\\x96\"+\r\n\t\t\"\\f\\t\\x2\\x2\\x96\\x97\\x5(\\x15\\x2\\x97\\x98\\x5\\x1A\\xE\\n\\x98\\xAE\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x99\\x9A\\f\\b\\x2\\x2\\x9A\\x9B\\x5\\x1C\\xF\\x2\\x9B\\x9C\\x5\\x1A\\xE\\t\\x9C\\xAE\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x9D\\x9E\\f\\a\\x2\\x2\\x9E\\x9F\\x5\\x1E\\x10\\x2\\x9F\\xA0\\x5\\x1A\\xE\\b\"+\r\n\t\t\"\\xA0\\xAE\\x3\\x2\\x2\\x2\\xA1\\xA2\\f\\x6\\x2\\x2\\xA2\\xA3\\x5 \\x11\\x2\\xA3\\xA4\\x5\"+\r\n\t\t\"\\x1A\\xE\\a\\xA4\\xAE\\x3\\x2\\x2\\x2\\xA5\\xA6\\f\\x5\\x2\\x2\\xA6\\xA7\\x5&\\x14\\x2\\xA7\"+\r\n\t\t\"\\xA8\\x5\\x1A\\xE\\x6\\xA8\\xAE\\x3\\x2\\x2\\x2\\xA9\\xAA\\f\\x4\\x2\\x2\\xAA\\xAE\\x5\\\"\"+\r\n\t\t\"\\x12\\x2\\xAB\\xAC\\f\\x3\\x2\\x2\\xAC\\xAE\\x5$\\x13\\x2\\xAD\\x95\\x3\\x2\\x2\\x2\\xAD\"+\r\n\t\t\"\\x99\\x3\\x2\\x2\\x2\\xAD\\x9D\\x3\\x2\\x2\\x2\\xAD\\xA1\\x3\\x2\\x2\\x2\\xAD\\xA5\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xAD\\xA9\\x3\\x2\\x2\\x2\\xAD\\xAB\\x3\\x2\\x2\\x2\\xAE\\xB1\\x3\\x2\\x2\\x2\\xAF\"+\r\n\t\t\"\\xAD\\x3\\x2\\x2\\x2\\xAF\\xB0\\x3\\x2\\x2\\x2\\xB0\\x1B\\x3\\x2\\x2\\x2\\xB1\\xAF\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB2\\xB3\\a\\x11\\x2\\x2\\xB3\\x1D\\x3\\x2\\x2\\x2\\xB4\\xB5\\t\\x2\\x2\\x2\\xB5\"+\r\n\t\t\"\\x1F\\x3\\x2\\x2\\x2\\xB6\\xB7\\a\\x14\\x2\\x2\\xB7!\\x3\\x2\\x2\\x2\\xB8\\xB9\\a\\x15\\x2\"+\r\n\t\t\"\\x2\\xB9#\\x3\\x2\\x2\\x2\\xBA\\xBB\\a\\x16\\x2\\x2\\xBB%\\x3\\x2\\x2\\x2\\xBC\\xBD\\a\\x17\"+\r\n\t\t\"\\x2\\x2\\xBD\\'\\x3\\x2\\x2\\x2\\xBE\\xBF\\t\\x3\\x2\\x2\\xBF)\\x3\\x2\\x2\\x2\\xC0\\xC1\\t\"+\r\n\t\t\"\\x4\\x2\\x2\\xC1+\\x3\\x2\\x2\\x2\\r/\\x38=LO`\\x64\\x87\\x93\\xAD\\xAF\";\r\n\tpublic static readonly ATN _ATN =\r\n\t\tnew ATNDeserializer().Deserialize(_serializedATN.ToCharArray());\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs	(revision f6b2e0c4435adf65f67294cb2ac93d0704ad0733)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs	(date 1653109975794)
@@ -34,8 +34,8 @@
 		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
 		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
 		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
-		T__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, 
-		BOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;
+		T__24=25, T__25=26, T__26=27, PRINT=28, TYPE=29, INTEGER=30, DOUBLE=31, 
+		CHAR=32, BOOL=33, NULL=34, IDENTIFIER=35, COMMENT=36, WS=37;
 	public const int
 		RULE_program = 0, RULE_line = 1, RULE_statement = 2, RULE_assignment = 3, 
 		RULE_funCall = 4, RULE_printCall = 5, RULE_ifBlock = 6, RULE_elseifBlock = 7, 
@@ -53,13 +53,13 @@
 		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'elseif'", 
 		"'else'", "'for'", "'forend'", "'while'", "'whileend'", "'!'", "'*'", 
 		"'/'", "'%'", "'+'", "'++'", "'--'", "'-'", "'=='", "'!='", "'>'", "'<'", 
-		"'<='", "'>='", "'print'", null, null, null, null, "'null'"
+		"'<='", "'>='", "'print'", null, null, null, null, null, "'null'"
 	};
 	private static readonly string[] _SymbolicNames = {
 		null, null, null, null, null, null, null, null, null, null, null, null, 
 		null, null, null, null, null, null, null, null, null, null, null, null, 
-		null, null, null, null, "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", 
-		"NULL", "IDENTIFIER", "COMMENT", "WS"
+		null, null, null, null, "PRINT", "TYPE", "INTEGER", "DOUBLE", "CHAR", 
+		"BOOL", "NULL", "IDENTIFIER", "COMMENT", "WS"
 	};
 	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);
 
@@ -150,7 +150,7 @@
 			State = 45;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
-			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0)) {
+			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << TYPE))) != 0)) {
 				{
 				{
 				State = 42; line();
@@ -216,7 +216,7 @@
 			_errHandler.Sync(this);
 			switch (_input.La(1)) {
 			case PRINT:
-			case IDENTIFIER:
+			case TYPE:
 				EnterOuterAlt(_localctx, 1);
 				{
 				State = 50; statement();
@@ -328,6 +328,7 @@
 	}
 
 	public partial class AssignmentContext : ParserRuleContext {
+		public ITerminalNode TYPE() { return GetToken(c2022v2Parser.TYPE, 0); }
 		public ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }
 		public ExpressionContext expression() {
 			return GetRuleContext<ExpressionContext>(0);
@@ -359,9 +360,10 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 63; Match(IDENTIFIER);
-			State = 64; Match(T__1);
-			State = 65; expression(0);
+			State = 63; Match(TYPE);
+			State = 64; Match(IDENTIFIER);
+			State = 65; Match(T__1);
+			State = 66; expression(0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -376,6 +378,7 @@
 	}
 
 	public partial class FunCallContext : ParserRuleContext {
+		public ITerminalNode TYPE() { return GetToken(c2022v2Parser.TYPE, 0); }
 		public ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }
 		public ExpressionContext[] expression() {
 			return GetRuleContexts<ExpressionContext>();
@@ -411,32 +414,33 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 67; Match(IDENTIFIER);
-			State = 68; Match(T__2);
-			State = 77;
+			State = 68; Match(TYPE);
+			State = 69; Match(IDENTIFIER);
+			State = 70; Match(T__2);
+			State = 79;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
-			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__13) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {
+			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__13) | (1L << TYPE) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {
 				{
-				State = 69; expression(0);
-				State = 74;
+				State = 71; expression(0);
+				State = 76;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 				while (_la==T__3) {
 					{
 					{
-					State = 70; Match(T__3);
-					State = 71; expression(0);
+					State = 72; Match(T__3);
+					State = 73; expression(0);
 					}
 					}
-					State = 76;
+					State = 78;
 					_errHandler.Sync(this);
 					_la = _input.La(1);
 				}
 				}
 			}
 
-			State = 79; Match(T__4);
+			State = 81; Match(T__4);
 			}
 		}
 		catch (RecognitionException re) {
@@ -482,10 +486,10 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 81; Match(PRINT);
-			State = 82; Match(T__2);
-			State = 83; expression(0);
-			State = 84; Match(T__4);
+			State = 83; Match(PRINT);
+			State = 84; Match(T__2);
+			State = 85; expression(0);
+			State = 86; Match(T__4);
 			}
 		}
 		catch (RecognitionException re) {
@@ -543,35 +547,35 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 86; Match(T__5);
-			State = 87; Match(T__2);
-			State = 88; expression(0);
-			State = 89; Match(T__4);
-			State = 90; block();
-			State = 94;
+			State = 88; Match(T__5);
+			State = 89; Match(T__2);
+			State = 90; expression(0);
+			State = 91; Match(T__4);
+			State = 92; block();
+			State = 96;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			while (_la==T__7) {
 				{
 				{
-				State = 91; elseifBlock();
+				State = 93; elseifBlock();
 				}
 				}
-				State = 96;
+				State = 98;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 			}
-			State = 98;
+			State = 100;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			if (_la==T__8) {
 				{
-				State = 97; elseBlock();
+				State = 99; elseBlock();
 				}
 			}
 
-			State = 100; Match(T__6);
-			State = 101; Match(T__0);
+			State = 102; Match(T__6);
+			State = 103; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -619,11 +623,11 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 103; Match(T__7);
-			State = 104; Match(T__2);
-			State = 105; expression(0);
-			State = 106; Match(T__4);
-			State = 107; block();
+			State = 105; Match(T__7);
+			State = 106; Match(T__2);
+			State = 107; expression(0);
+			State = 108; Match(T__4);
+			State = 109; block();
 			}
 		}
 		catch (RecognitionException re) {
@@ -668,8 +672,8 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 109; Match(T__8);
-			State = 110; block();
+			State = 111; Match(T__8);
+			State = 112; block();
 			}
 		}
 		catch (RecognitionException re) {
@@ -723,17 +727,17 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 112; Match(T__9);
-			State = 113; Match(T__2);
-			State = 114; assignment();
-			State = 115; Match(T__0);
-			State = 116; expression(0);
+			State = 114; Match(T__9);
+			State = 115; Match(T__2);
+			State = 116; assignment();
 			State = 117; Match(T__0);
 			State = 118; expression(0);
-			State = 119; Match(T__4);
-			State = 120; block();
-			State = 121; Match(T__10);
-			State = 122; Match(T__0);
+			State = 119; Match(T__0);
+			State = 120; expression(0);
+			State = 121; Match(T__4);
+			State = 122; block();
+			State = 123; Match(T__10);
+			State = 124; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -781,11 +785,11 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 124; Match(T__11);
-			State = 125; expression(0);
-			State = 126; block();
-			State = 127; Match(T__12);
-			State = 128; Match(T__0);
+			State = 126; Match(T__11);
+			State = 127; expression(0);
+			State = 128; block();
+			State = 129; Match(T__12);
+			State = 130; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -834,19 +838,19 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 131;
+			State = 133;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			do {
 				{
 				{
-				State = 130; line();
+				State = 132; line();
 				}
 				}
-				State = 133;
+				State = 135;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
-			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0) );
+			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << TYPE))) != 0) );
 			}
 		}
 		catch (RecognitionException re) {
@@ -931,44 +935,46 @@
 			int _alt;
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 145;
+			State = 147;
 			_errHandler.Sync(this);
-			switch ( Interpreter.AdaptivePredict(_input,8,_ctx) ) {
-			case 1:
+			switch (_input.La(1)) {
+			case INTEGER:
+			case DOUBLE:
+			case CHAR:
+			case BOOL:
+			case NULL:
 				{
-				State = 136; constant();
+				State = 138; constant();
 				}
 				break;
-
-			case 2:
+			case IDENTIFIER:
 				{
-				State = 137; Match(IDENTIFIER);
+				State = 139; Match(IDENTIFIER);
 				}
 				break;
-
-			case 3:
+			case TYPE:
 				{
-				State = 138; funCall();
+				State = 140; funCall();
 				}
 				break;
-
-			case 4:
+			case T__2:
 				{
-				State = 139; Match(T__2);
-				State = 140; expression(0);
-				State = 141; Match(T__4);
+				State = 141; Match(T__2);
+				State = 142; expression(0);
+				State = 143; Match(T__4);
 				}
 				break;
-
-			case 5:
+			case T__13:
 				{
-				State = 143; Match(T__13);
-				State = 144; expression(8);
+				State = 145; Match(T__13);
+				State = 146; expression(8);
 				}
 				break;
+			default:
+				throw new NoViableAltException(this);
 			}
 			_ctx.stop = _input.Lt(-1);
-			State = 173;
+			State = 175;
 			_errHandler.Sync(this);
 			_alt = Interpreter.AdaptivePredict(_input,10,_ctx);
 			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber ) {
@@ -976,17 +982,17 @@
 					if ( _parseListeners!=null ) TriggerExitRuleEvent();
 					_prevctx = _localctx;
 					{
-					State = 171;
+					State = 173;
 					_errHandler.Sync(this);
 					switch ( Interpreter.AdaptivePredict(_input,9,_ctx) ) {
 					case 1:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 147;
+						State = 149;
 						if (!(Precpred(_ctx, 7))) throw new FailedPredicateException(this, "Precpred(_ctx, 7)");
-						State = 148; comp();
-						State = 149; expression(8);
+						State = 150; comp();
+						State = 151; expression(8);
 						}
 						break;
 
@@ -994,10 +1000,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 151;
+						State = 153;
 						if (!(Precpred(_ctx, 6))) throw new FailedPredicateException(this, "Precpred(_ctx, 6)");
-						State = 152; mul();
-						State = 153; expression(7);
+						State = 154; mul();
+						State = 155; expression(7);
 						}
 						break;
 
@@ -1005,10 +1011,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 155;
+						State = 157;
 						if (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, "Precpred(_ctx, 5)");
-						State = 156; div();
-						State = 157; expression(6);
+						State = 158; div();
+						State = 159; expression(6);
 						}
 						break;
 
@@ -1016,10 +1022,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 159;
+						State = 161;
 						if (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, "Precpred(_ctx, 4)");
-						State = 160; add();
-						State = 161; expression(5);
+						State = 162; add();
+						State = 163; expression(5);
 						}
 						break;
 
@@ -1027,10 +1033,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 163;
+						State = 165;
 						if (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, "Precpred(_ctx, 3)");
-						State = 164; sub();
-						State = 165; expression(4);
+						State = 166; sub();
+						State = 167; expression(4);
 						}
 						break;
 
@@ -1038,9 +1044,9 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 167;
+						State = 169;
 						if (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, "Precpred(_ctx, 2)");
-						State = 168; unaryadd();
+						State = 170; unaryadd();
 						}
 						break;
 
@@ -1048,15 +1054,15 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 169;
+						State = 171;
 						if (!(Precpred(_ctx, 1))) throw new FailedPredicateException(this, "Precpred(_ctx, 1)");
-						State = 170; unarysub();
+						State = 172; unarysub();
 						}
 						break;
 					}
 					} 
 				}
-				State = 175;
+				State = 177;
 				_errHandler.Sync(this);
 				_alt = Interpreter.AdaptivePredict(_input,10,_ctx);
 			}
@@ -1101,7 +1107,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 176; Match(T__14);
+			State = 178; Match(T__14);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1144,7 +1150,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 178;
+			State = 180;
 			_la = _input.La(1);
 			if ( !(_la==T__15 || _la==T__16) ) {
 			_errHandler.RecoverInline(this);
@@ -1197,7 +1203,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 180; Match(T__17);
+			State = 182; Match(T__17);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1239,7 +1245,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 182; Match(T__18);
+			State = 184; Match(T__18);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1281,7 +1287,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 184; Match(T__19);
+			State = 186; Match(T__19);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1323,7 +1329,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 186; Match(T__20);
+			State = 188; Match(T__20);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1366,7 +1372,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 188;
+			State = 190;
 			_la = _input.La(1);
 			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__21) | (1L << T__22) | (1L << T__23) | (1L << T__24) | (1L << T__25) | (1L << T__26))) != 0)) ) {
 			_errHandler.RecoverInline(this);
@@ -1425,7 +1431,7 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 190;
+			State = 192;
 			_la = _input.La(1);
 			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL))) != 0)) ) {
 			_errHandler.RecoverInline(this);
@@ -1476,74 +1482,75 @@
 	}
 
 	public static readonly string _serializedATN =
-		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3&\xC3\x4\x2\t\x2"+
+		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3\'\xC5\x4\x2\t\x2"+
 		"\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t"+
 		"\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t"+
 		"\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
 		"\x4\x16\t\x16\x3\x2\a\x2.\n\x2\f\x2\xE\x2\x31\v\x2\x3\x2\x3\x2\x3\x3\x3"+
 		"\x3\x3\x3\x3\x3\x5\x3\x39\n\x3\x3\x4\x3\x4\x3\x4\x5\x4>\n\x4\x3\x4\x3"+
-		"\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\a\x6K\n\x6\f"+
-		"\x6\xE\x6N\v\x6\x5\x6P\n\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b"+
-		"\x3\b\x3\b\x3\b\x3\b\x3\b\a\b_\n\b\f\b\xE\b\x62\v\b\x3\b\x5\b\x65\n\b"+
-		"\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\v\x3\v"+
-		"\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f"+
-		"\x3\f\x3\f\x3\r\x6\r\x86\n\r\r\r\xE\r\x87\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
-		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x5\xE\x94\n\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
+		"\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
+		"\a\x6M\n\x6\f\x6\xE\x6P\v\x6\x5\x6R\n\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3"+
+		"\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\a\b\x61\n\b\f\b\xE\b\x64\v\b\x3"+
+		"\b\x5\bg\n\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3"+
+		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3"+
+		"\f\x3\f\x3\f\x3\f\x3\f\x3\r\x6\r\x88\n\r\r\r\xE\r\x89\x3\xE\x3\xE\x3\xE"+
+		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x5\xE\x96\n\xE\x3\xE\x3\xE"+
 		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3"+
-		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\a\xE\xAE\n\xE\f\xE"+
-		"\xE\xE\xB1\v\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12"+
-		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x2\x2"+
-		"\x3\x1A\x17\x2\x2\x4\x2\x6\x2\b\x2\n\x2\f\x2\xE\x2\x10\x2\x12\x2\x14\x2"+
-		"\x16\x2\x18\x2\x1A\x2\x1C\x2\x1E\x2 \x2\"\x2$\x2&\x2(\x2*\x2\x2\x5\x3"+
-		"\x2\x12\x13\x3\x2\x18\x1D\x3\x2\x1F#\xC3\x2/\x3\x2\x2\x2\x4\x38\x3\x2"+
-		"\x2\x2\x6=\x3\x2\x2\x2\b\x41\x3\x2\x2\x2\n\x45\x3\x2\x2\x2\fS\x3\x2\x2"+
-		"\x2\xEX\x3\x2\x2\x2\x10i\x3\x2\x2\x2\x12o\x3\x2\x2\x2\x14r\x3\x2\x2\x2"+
-		"\x16~\x3\x2\x2\x2\x18\x85\x3\x2\x2\x2\x1A\x93\x3\x2\x2\x2\x1C\xB2\x3\x2"+
-		"\x2\x2\x1E\xB4\x3\x2\x2\x2 \xB6\x3\x2\x2\x2\"\xB8\x3\x2\x2\x2$\xBA\x3"+
-		"\x2\x2\x2&\xBC\x3\x2\x2\x2(\xBE\x3\x2\x2\x2*\xC0\x3\x2\x2\x2,.\x5\x4\x3"+
-		"\x2-,\x3\x2\x2\x2.\x31\x3\x2\x2\x2/-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30"+
+		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\a\xE\xB0"+
+		"\n\xE\f\xE\xE\xE\xB3\v\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12"+
+		"\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16"+
+		"\x2\x2\x3\x1A\x17\x2\x2\x4\x2\x6\x2\b\x2\n\x2\f\x2\xE\x2\x10\x2\x12\x2"+
+		"\x14\x2\x16\x2\x18\x2\x1A\x2\x1C\x2\x1E\x2 \x2\"\x2$\x2&\x2(\x2*\x2\x2"+
+		"\x5\x3\x2\x12\x13\x3\x2\x18\x1D\x3\x2 $\xC5\x2/\x3\x2\x2\x2\x4\x38\x3"+
+		"\x2\x2\x2\x6=\x3\x2\x2\x2\b\x41\x3\x2\x2\x2\n\x46\x3\x2\x2\x2\fU\x3\x2"+
+		"\x2\x2\xEZ\x3\x2\x2\x2\x10k\x3\x2\x2\x2\x12q\x3\x2\x2\x2\x14t\x3\x2\x2"+
+		"\x2\x16\x80\x3\x2\x2\x2\x18\x87\x3\x2\x2\x2\x1A\x95\x3\x2\x2\x2\x1C\xB4"+
+		"\x3\x2\x2\x2\x1E\xB6\x3\x2\x2\x2 \xB8\x3\x2\x2\x2\"\xBA\x3\x2\x2\x2$\xBC"+
+		"\x3\x2\x2\x2&\xBE\x3\x2\x2\x2(\xC0\x3\x2\x2\x2*\xC2\x3\x2\x2\x2,.\x5\x4"+
+		"\x3\x2-,\x3\x2\x2\x2.\x31\x3\x2\x2\x2/-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30"+
 		"\x32\x3\x2\x2\x2\x31/\x3\x2\x2\x2\x32\x33\a\x2\x2\x3\x33\x3\x3\x2\x2\x2"+
 		"\x34\x39\x5\x6\x4\x2\x35\x39\x5\xE\b\x2\x36\x39\x5\x14\v\x2\x37\x39\x5"+
 		"\x16\f\x2\x38\x34\x3\x2\x2\x2\x38\x35\x3\x2\x2\x2\x38\x36\x3\x2\x2\x2"+
 		"\x38\x37\x3\x2\x2\x2\x39\x5\x3\x2\x2\x2:>\x5\b\x5\x2;>\x5\n\x6\x2<>\x5"+
 		"\f\a\x2=:\x3\x2\x2\x2=;\x3\x2\x2\x2=<\x3\x2\x2\x2>?\x3\x2\x2\x2?@\a\x3"+
-		"\x2\x2@\a\x3\x2\x2\x2\x41\x42\a$\x2\x2\x42\x43\a\x4\x2\x2\x43\x44\x5\x1A"+
-		"\xE\x2\x44\t\x3\x2\x2\x2\x45\x46\a$\x2\x2\x46O\a\x5\x2\x2GL\x5\x1A\xE"+
-		"\x2HI\a\x6\x2\x2IK\x5\x1A\xE\x2JH\x3\x2\x2\x2KN\x3\x2\x2\x2LJ\x3\x2\x2"+
-		"\x2LM\x3\x2\x2\x2MP\x3\x2\x2\x2NL\x3\x2\x2\x2OG\x3\x2\x2\x2OP\x3\x2\x2"+
-		"\x2PQ\x3\x2\x2\x2QR\a\a\x2\x2R\v\x3\x2\x2\x2ST\a\x1E\x2\x2TU\a\x5\x2\x2"+
-		"UV\x5\x1A\xE\x2VW\a\a\x2\x2W\r\x3\x2\x2\x2XY\a\b\x2\x2YZ\a\x5\x2\x2Z["+
-		"\x5\x1A\xE\x2[\\\a\a\x2\x2\\`\x5\x18\r\x2]_\x5\x10\t\x2^]\x3\x2\x2\x2"+
-		"_\x62\x3\x2\x2\x2`^\x3\x2\x2\x2`\x61\x3\x2\x2\x2\x61\x64\x3\x2\x2\x2\x62"+
-		"`\x3\x2\x2\x2\x63\x65\x5\x12\n\x2\x64\x63\x3\x2\x2\x2\x64\x65\x3\x2\x2"+
-		"\x2\x65\x66\x3\x2\x2\x2\x66g\a\t\x2\x2gh\a\x3\x2\x2h\xF\x3\x2\x2\x2ij"+
-		"\a\n\x2\x2jk\a\x5\x2\x2kl\x5\x1A\xE\x2lm\a\a\x2\x2mn\x5\x18\r\x2n\x11"+
-		"\x3\x2\x2\x2op\a\v\x2\x2pq\x5\x18\r\x2q\x13\x3\x2\x2\x2rs\a\f\x2\x2st"+
-		"\a\x5\x2\x2tu\x5\b\x5\x2uv\a\x3\x2\x2vw\x5\x1A\xE\x2wx\a\x3\x2\x2xy\x5"+
-		"\x1A\xE\x2yz\a\a\x2\x2z{\x5\x18\r\x2{|\a\r\x2\x2|}\a\x3\x2\x2}\x15\x3"+
-		"\x2\x2\x2~\x7F\a\xE\x2\x2\x7F\x80\x5\x1A\xE\x2\x80\x81\x5\x18\r\x2\x81"+
-		"\x82\a\xF\x2\x2\x82\x83\a\x3\x2\x2\x83\x17\x3\x2\x2\x2\x84\x86\x5\x4\x3"+
-		"\x2\x85\x84\x3\x2\x2\x2\x86\x87\x3\x2\x2\x2\x87\x85\x3\x2\x2\x2\x87\x88"+
-		"\x3\x2\x2\x2\x88\x19\x3\x2\x2\x2\x89\x8A\b\xE\x1\x2\x8A\x94\x5*\x16\x2"+
-		"\x8B\x94\a$\x2\x2\x8C\x94\x5\n\x6\x2\x8D\x8E\a\x5\x2\x2\x8E\x8F\x5\x1A"+
-		"\xE\x2\x8F\x90\a\a\x2\x2\x90\x94\x3\x2\x2\x2\x91\x92\a\x10\x2\x2\x92\x94"+
-		"\x5\x1A\xE\n\x93\x89\x3\x2\x2\x2\x93\x8B\x3\x2\x2\x2\x93\x8C\x3\x2\x2"+
-		"\x2\x93\x8D\x3\x2\x2\x2\x93\x91\x3\x2\x2\x2\x94\xAF\x3\x2\x2\x2\x95\x96"+
-		"\f\t\x2\x2\x96\x97\x5(\x15\x2\x97\x98\x5\x1A\xE\n\x98\xAE\x3\x2\x2\x2"+
-		"\x99\x9A\f\b\x2\x2\x9A\x9B\x5\x1C\xF\x2\x9B\x9C\x5\x1A\xE\t\x9C\xAE\x3"+
-		"\x2\x2\x2\x9D\x9E\f\a\x2\x2\x9E\x9F\x5\x1E\x10\x2\x9F\xA0\x5\x1A\xE\b"+
-		"\xA0\xAE\x3\x2\x2\x2\xA1\xA2\f\x6\x2\x2\xA2\xA3\x5 \x11\x2\xA3\xA4\x5"+
-		"\x1A\xE\a\xA4\xAE\x3\x2\x2\x2\xA5\xA6\f\x5\x2\x2\xA6\xA7\x5&\x14\x2\xA7"+
-		"\xA8\x5\x1A\xE\x6\xA8\xAE\x3\x2\x2\x2\xA9\xAA\f\x4\x2\x2\xAA\xAE\x5\""+
-		"\x12\x2\xAB\xAC\f\x3\x2\x2\xAC\xAE\x5$\x13\x2\xAD\x95\x3\x2\x2\x2\xAD"+
-		"\x99\x3\x2\x2\x2\xAD\x9D\x3\x2\x2\x2\xAD\xA1\x3\x2\x2\x2\xAD\xA5\x3\x2"+
-		"\x2\x2\xAD\xA9\x3\x2\x2\x2\xAD\xAB\x3\x2\x2\x2\xAE\xB1\x3\x2\x2\x2\xAF"+
-		"\xAD\x3\x2\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\x1B\x3\x2\x2\x2\xB1\xAF\x3\x2"+
-		"\x2\x2\xB2\xB3\a\x11\x2\x2\xB3\x1D\x3\x2\x2\x2\xB4\xB5\t\x2\x2\x2\xB5"+
-		"\x1F\x3\x2\x2\x2\xB6\xB7\a\x14\x2\x2\xB7!\x3\x2\x2\x2\xB8\xB9\a\x15\x2"+
-		"\x2\xB9#\x3\x2\x2\x2\xBA\xBB\a\x16\x2\x2\xBB%\x3\x2\x2\x2\xBC\xBD\a\x17"+
-		"\x2\x2\xBD\'\x3\x2\x2\x2\xBE\xBF\t\x3\x2\x2\xBF)\x3\x2\x2\x2\xC0\xC1\t"+
-		"\x4\x2\x2\xC1+\x3\x2\x2\x2\r/\x38=LO`\x64\x87\x93\xAD\xAF";
+		"\x2\x2@\a\x3\x2\x2\x2\x41\x42\a\x1F\x2\x2\x42\x43\a%\x2\x2\x43\x44\a\x4"+
+		"\x2\x2\x44\x45\x5\x1A\xE\x2\x45\t\x3\x2\x2\x2\x46G\a\x1F\x2\x2GH\a%\x2"+
+		"\x2HQ\a\x5\x2\x2IN\x5\x1A\xE\x2JK\a\x6\x2\x2KM\x5\x1A\xE\x2LJ\x3\x2\x2"+
+		"\x2MP\x3\x2\x2\x2NL\x3\x2\x2\x2NO\x3\x2\x2\x2OR\x3\x2\x2\x2PN\x3\x2\x2"+
+		"\x2QI\x3\x2\x2\x2QR\x3\x2\x2\x2RS\x3\x2\x2\x2ST\a\a\x2\x2T\v\x3\x2\x2"+
+		"\x2UV\a\x1E\x2\x2VW\a\x5\x2\x2WX\x5\x1A\xE\x2XY\a\a\x2\x2Y\r\x3\x2\x2"+
+		"\x2Z[\a\b\x2\x2[\\\a\x5\x2\x2\\]\x5\x1A\xE\x2]^\a\a\x2\x2^\x62\x5\x18"+
+		"\r\x2_\x61\x5\x10\t\x2`_\x3\x2\x2\x2\x61\x64\x3\x2\x2\x2\x62`\x3\x2\x2"+
+		"\x2\x62\x63\x3\x2\x2\x2\x63\x66\x3\x2\x2\x2\x64\x62\x3\x2\x2\x2\x65g\x5"+
+		"\x12\n\x2\x66\x65\x3\x2\x2\x2\x66g\x3\x2\x2\x2gh\x3\x2\x2\x2hi\a\t\x2"+
+		"\x2ij\a\x3\x2\x2j\xF\x3\x2\x2\x2kl\a\n\x2\x2lm\a\x5\x2\x2mn\x5\x1A\xE"+
+		"\x2no\a\a\x2\x2op\x5\x18\r\x2p\x11\x3\x2\x2\x2qr\a\v\x2\x2rs\x5\x18\r"+
+		"\x2s\x13\x3\x2\x2\x2tu\a\f\x2\x2uv\a\x5\x2\x2vw\x5\b\x5\x2wx\a\x3\x2\x2"+
+		"xy\x5\x1A\xE\x2yz\a\x3\x2\x2z{\x5\x1A\xE\x2{|\a\a\x2\x2|}\x5\x18\r\x2"+
+		"}~\a\r\x2\x2~\x7F\a\x3\x2\x2\x7F\x15\x3\x2\x2\x2\x80\x81\a\xE\x2\x2\x81"+
+		"\x82\x5\x1A\xE\x2\x82\x83\x5\x18\r\x2\x83\x84\a\xF\x2\x2\x84\x85\a\x3"+
+		"\x2\x2\x85\x17\x3\x2\x2\x2\x86\x88\x5\x4\x3\x2\x87\x86\x3\x2\x2\x2\x88"+
+		"\x89\x3\x2\x2\x2\x89\x87\x3\x2\x2\x2\x89\x8A\x3\x2\x2\x2\x8A\x19\x3\x2"+
+		"\x2\x2\x8B\x8C\b\xE\x1\x2\x8C\x96\x5*\x16\x2\x8D\x96\a%\x2\x2\x8E\x96"+
+		"\x5\n\x6\x2\x8F\x90\a\x5\x2\x2\x90\x91\x5\x1A\xE\x2\x91\x92\a\a\x2\x2"+
+		"\x92\x96\x3\x2\x2\x2\x93\x94\a\x10\x2\x2\x94\x96\x5\x1A\xE\n\x95\x8B\x3"+
+		"\x2\x2\x2\x95\x8D\x3\x2\x2\x2\x95\x8E\x3\x2\x2\x2\x95\x8F\x3\x2\x2\x2"+
+		"\x95\x93\x3\x2\x2\x2\x96\xB1\x3\x2\x2\x2\x97\x98\f\t\x2\x2\x98\x99\x5"+
+		"(\x15\x2\x99\x9A\x5\x1A\xE\n\x9A\xB0\x3\x2\x2\x2\x9B\x9C\f\b\x2\x2\x9C"+
+		"\x9D\x5\x1C\xF\x2\x9D\x9E\x5\x1A\xE\t\x9E\xB0\x3\x2\x2\x2\x9F\xA0\f\a"+
+		"\x2\x2\xA0\xA1\x5\x1E\x10\x2\xA1\xA2\x5\x1A\xE\b\xA2\xB0\x3\x2\x2\x2\xA3"+
+		"\xA4\f\x6\x2\x2\xA4\xA5\x5 \x11\x2\xA5\xA6\x5\x1A\xE\a\xA6\xB0\x3\x2\x2"+
+		"\x2\xA7\xA8\f\x5\x2\x2\xA8\xA9\x5&\x14\x2\xA9\xAA\x5\x1A\xE\x6\xAA\xB0"+
+		"\x3\x2\x2\x2\xAB\xAC\f\x4\x2\x2\xAC\xB0\x5\"\x12\x2\xAD\xAE\f\x3\x2\x2"+
+		"\xAE\xB0\x5$\x13\x2\xAF\x97\x3\x2\x2\x2\xAF\x9B\x3\x2\x2\x2\xAF\x9F\x3"+
+		"\x2\x2\x2\xAF\xA3\x3\x2\x2\x2\xAF\xA7\x3\x2\x2\x2\xAF\xAB\x3\x2\x2\x2"+
+		"\xAF\xAD\x3\x2\x2\x2\xB0\xB3\x3\x2\x2\x2\xB1\xAF\x3\x2\x2\x2\xB1\xB2\x3"+
+		"\x2\x2\x2\xB2\x1B\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB4\xB5\a\x11\x2\x2"+
+		"\xB5\x1D\x3\x2\x2\x2\xB6\xB7\t\x2\x2\x2\xB7\x1F\x3\x2\x2\x2\xB8\xB9\a"+
+		"\x14\x2\x2\xB9!\x3\x2\x2\x2\xBA\xBB\a\x15\x2\x2\xBB#\x3\x2\x2\x2\xBC\xBD"+
+		"\a\x16\x2\x2\xBD%\x3\x2\x2\x2\xBE\xBF\a\x17\x2\x2\xBF\'\x3\x2\x2\x2\xC0"+
+		"\xC1\t\x3\x2\x2\xC1)\x3\x2\x2\x2\xC2\xC3\t\x4\x2\x2\xC3+\x3\x2\x2\x2\r"+
+		"/\x38=NQ\x62\x66\x89\x95\xAF\xB1";
 	public static readonly ATN _ATN =
 		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
 }
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>T__0=1\r\nT__1=2\r\nT__2=3\r\nT__3=4\r\nT__4=5\r\nT__5=6\r\nT__6=7\r\nT__7=8\r\nT__8=9\r\nT__9=10\r\nT__10=11\r\nT__11=12\r\nT__12=13\r\nT__13=14\r\nT__14=15\r\nT__15=16\r\nT__16=17\r\nT__17=18\r\nT__18=19\r\nT__19=20\r\nT__20=21\r\nT__21=22\r\nT__22=23\r\nT__23=24\r\nT__24=25\r\nT__25=26\r\nT__26=27\r\nPRINT=28\r\nINTEGER=29\r\nDOUBLE=30\r\nCHAR=31\r\nBOOL=32\r\nNULL=33\r\nIDENTIFIER=34\r\nCOMMENT=35\r\nWS=36\r\n';'=1\r\n'='=2\r\n'('=3\r\n','=4\r\n')'=5\r\n'if'=6\r\n'ifend'=7\r\n'elseif'=8\r\n'else'=9\r\n'for'=10\r\n'forend'=11\r\n'while'=12\r\n'whileend'=13\r\n'!'=14\r\n'*'=15\r\n'/'=16\r\n'%'=17\r\n'+'=18\r\n'++'=19\r\n'--'=20\r\n'-'=21\r\n'=='=22\r\n'!='=23\r\n'>'=24\r\n'<'=25\r\n'<='=26\r\n'>='=27\r\n'print'=28\r\n'null'=33\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens b/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens	(revision f6b2e0c4435adf65f67294cb2ac93d0704ad0733)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens	(date 1653109975814)
@@ -26,14 +26,15 @@
 T__25=26
 T__26=27
 PRINT=28
-INTEGER=29
-DOUBLE=30
-CHAR=31
-BOOL=32
-NULL=33
-IDENTIFIER=34
-COMMENT=35
-WS=36
+TYPE=29
+INTEGER=30
+DOUBLE=31
+CHAR=32
+BOOL=33
+NULL=34
+IDENTIFIER=35
+COMMENT=36
+WS=37
 ';'=1
 '='=2
 '('=3
@@ -62,4 +63,4 @@
 '<='=26
 '>='=27
 'print'=28
-'null'=33
+'null'=34
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>T__0=1\r\nT__1=2\r\nT__2=3\r\nT__3=4\r\nT__4=5\r\nT__5=6\r\nT__6=7\r\nT__7=8\r\nT__8=9\r\nT__9=10\r\nT__10=11\r\nT__11=12\r\nT__12=13\r\nT__13=14\r\nT__14=15\r\nT__15=16\r\nT__16=17\r\nT__17=18\r\nT__18=19\r\nT__19=20\r\nT__20=21\r\nT__21=22\r\nT__22=23\r\nT__23=24\r\nT__24=25\r\nT__25=26\r\nT__26=27\r\nPRINT=28\r\nINTEGER=29\r\nDOUBLE=30\r\nCHAR=31\r\nBOOL=32\r\nNULL=33\r\nIDENTIFIER=34\r\nCOMMENT=35\r\nWS=36\r\n';'=1\r\n'='=2\r\n'('=3\r\n','=4\r\n')'=5\r\n'if'=6\r\n'ifend'=7\r\n'elseif'=8\r\n'else'=9\r\n'for'=10\r\n'forend'=11\r\n'while'=12\r\n'whileend'=13\r\n'!'=14\r\n'*'=15\r\n'/'=16\r\n'%'=17\r\n'+'=18\r\n'++'=19\r\n'--'=20\r\n'-'=21\r\n'=='=22\r\n'!='=23\r\n'>'=24\r\n'<'=25\r\n'<='=26\r\n'>='=27\r\n'print'=28\r\n'null'=33\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens	(revision f6b2e0c4435adf65f67294cb2ac93d0704ad0733)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens	(date 1653109975579)
@@ -26,14 +26,15 @@
 T__25=26
 T__26=27
 PRINT=28
-INTEGER=29
-DOUBLE=30
-CHAR=31
-BOOL=32
-NULL=33
-IDENTIFIER=34
-COMMENT=35
-WS=36
+TYPE=29
+INTEGER=30
+DOUBLE=31
+CHAR=32
+BOOL=33
+NULL=34
+IDENTIFIER=35
+COMMENT=36
+WS=37
 ';'=1
 '='=2
 '('=3
@@ -62,4 +63,4 @@
 '<='=26
 '>='=27
 'print'=28
-'null'=33
+'null'=34
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from D:\\KTUOneDrive\\OneDrive - Kaunas University of Technology\\4pusmetis\\Programavimo kalbų teorija\\Compiler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime;\r\nusing Antlr4.Runtime.Atn;\r\nusing Antlr4.Runtime.Misc;\r\nusing DFA = Antlr4.Runtime.Dfa.DFA;\r\n\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2Lexer : Lexer {\r\n\tpublic const int\r\n\t\tT__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, \r\n\t\tT__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, \r\n\t\tT__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, \r\n\t\tT__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, \r\n\t\tBOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;\r\n\tpublic static string[] modeNames = {\r\n\t\t\"DEFAULT_MODE\"\r\n\t};\r\n\r\n\tpublic static readonly string[] ruleNames = {\r\n\t\t\"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \"T__7\", \"T__8\", \r\n\t\t\"T__9\", \"T__10\", \"T__11\", \"T__12\", \"T__13\", \"T__14\", \"T__15\", \"T__16\", \r\n\t\t\"T__17\", \"T__18\", \"T__19\", \"T__20\", \"T__21\", \"T__22\", \"T__23\", \"T__24\", \r\n\t\t\"T__25\", \"T__26\", \"PRINT\", \"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \"NULL\", \r\n\t\t\"IDENTIFIER\", \"COMMENT\", \"WS\"\r\n\t};\r\n\r\n\r\n\tpublic c2022v2Lexer(ICharStream input)\r\n\t\t: base(input)\r\n\t{\r\n\t\t_interp = new LexerATNSimulator(this,_ATN);\r\n\t}\r\n\r\n\tprivate static readonly string[] _LiteralNames = {\r\n\t\tnull, \"';'\", \"'='\", \"'('\", \"','\", \"')'\", \"'if'\", \"'ifend'\", \"'elseif'\", \r\n\t\t\"'else'\", \"'for'\", \"'forend'\", \"'while'\", \"'whileend'\", \"'!'\", \"'*'\", \r\n\t\t\"'/'\", \"'%'\", \"'+'\", \"'++'\", \"'--'\", \"'-'\", \"'=='\", \"'!='\", \"'>'\", \"'<'\", \r\n\t\t\"'<='\", \"'>='\", \"'print'\", null, null, null, null, \"'null'\"\r\n\t};\r\n\tprivate static readonly string[] _SymbolicNames = {\r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, \"PRINT\", \"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \r\n\t\t\"NULL\", \"IDENTIFIER\", \"COMMENT\", \"WS\"\r\n\t};\r\n\tpublic static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);\r\n\r\n\t[System.Obsolete(\"Use Vocabulary instead.\")]\r\n\tpublic static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);\r\n\r\n\tprivate static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {\r\n\t\tstring[] tokenNames = new string[length];\r\n\t\tfor (int i = 0; i < tokenNames.Length; i++) {\r\n\t\t\ttokenNames[i] = vocabulary.GetLiteralName(i);\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = vocabulary.GetSymbolicName(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = \"<INVALID>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokenNames;\r\n\t}\r\n\r\n\t[System.Obsolete(\"Use IRecognizer.Vocabulary instead.\")]\r\n\tpublic override string[] TokenNames\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn tokenNames;\r\n\t\t}\r\n\t}\r\n\r\n\t[NotNull]\r\n\tpublic override IVocabulary Vocabulary\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn DefaultVocabulary;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override string GrammarFileName { get { return \"c2022v2.g4\"; } }\r\n\r\n\tpublic override string[] RuleNames { get { return ruleNames; } }\r\n\r\n\tpublic override string[] ModeNames { get { return modeNames; } }\r\n\r\n\tpublic override string SerializedAtn { get { return _serializedATN; } }\r\n\r\n\tpublic static readonly string _serializedATN =\r\n\t\t\"\\x3\\xAF6F\\x8320\\x479D\\xB75C\\x4880\\x1605\\x191C\\xAB37\\x2&\\xF6\\b\\x1\\x4\\x2\"+\r\n\t\t\"\\t\\x2\\x4\\x3\\t\\x3\\x4\\x4\\t\\x4\\x4\\x5\\t\\x5\\x4\\x6\\t\\x6\\x4\\a\\t\\a\\x4\\b\\t\\b\\x4\"+\r\n\t\t\"\\t\\t\\t\\x4\\n\\t\\n\\x4\\v\\t\\v\\x4\\f\\t\\f\\x4\\r\\t\\r\\x4\\xE\\t\\xE\\x4\\xF\\t\\xF\\x4\\x10\"+\r\n\t\t\"\\t\\x10\\x4\\x11\\t\\x11\\x4\\x12\\t\\x12\\x4\\x13\\t\\x13\\x4\\x14\\t\\x14\\x4\\x15\\t\\x15\"+\r\n\t\t\"\\x4\\x16\\t\\x16\\x4\\x17\\t\\x17\\x4\\x18\\t\\x18\\x4\\x19\\t\\x19\\x4\\x1A\\t\\x1A\\x4\\x1B\"+\r\n\t\t\"\\t\\x1B\\x4\\x1C\\t\\x1C\\x4\\x1D\\t\\x1D\\x4\\x1E\\t\\x1E\\x4\\x1F\\t\\x1F\\x4 \\t \\x4!\"+\r\n\t\t\"\\t!\\x4\\\"\\t\\\"\\x4#\\t#\\x4$\\t$\\x4%\\t%\\x3\\x2\\x3\\x2\\x3\\x3\\x3\\x3\\x3\\x4\\x3\\x4\"+\r\n\t\t\"\\x3\\x5\\x3\\x5\\x3\\x6\\x3\\x6\\x3\\a\\x3\\a\\x3\\a\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\"+\r\n\t\t\"\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\v\\x3\\v\"+\r\n\t\t\"\\x3\\v\\x3\\v\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\"+\r\n\t\t\"\\x3\\r\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xF\\x3\\xF\"+\r\n\t\t\"\\x3\\x10\\x3\\x10\\x3\\x11\\x3\\x11\\x3\\x12\\x3\\x12\\x3\\x13\\x3\\x13\\x3\\x14\\x3\\x14\"+\r\n\t\t\"\\x3\\x14\\x3\\x15\\x3\\x15\\x3\\x15\\x3\\x16\\x3\\x16\\x3\\x17\\x3\\x17\\x3\\x17\\x3\\x18\"+\r\n\t\t\"\\x3\\x18\\x3\\x18\\x3\\x19\\x3\\x19\\x3\\x1A\\x3\\x1A\\x3\\x1B\\x3\\x1B\\x3\\x1B\\x3\\x1C\"+\r\n\t\t\"\\x3\\x1C\\x3\\x1C\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1E\\x6\\x1E\"+\r\n\t\t\"\\xAE\\n\\x1E\\r\\x1E\\xE\\x1E\\xAF\\x3\\x1F\\x6\\x1F\\xB3\\n\\x1F\\r\\x1F\\xE\\x1F\\xB4\\x3\"+\r\n\t\t\"\\x1F\\x3\\x1F\\x6\\x1F\\xB9\\n\\x1F\\r\\x1F\\xE\\x1F\\xBA\\x3 \\x3 \\x3 \\x3 \\x3!\\x3!\"+\r\n\t\t\"\\x3!\\x3!\\x3!\\x3!\\x3!\\x3!\\x3!\\x5!\\xCA\\n!\\x3\\\"\\x3\\\"\\x3\\\"\\x3\\\"\\x3\\\"\\x3#\\x3\"+\r\n\t\t\"#\\a#\\xD3\\n#\\f#\\xE#\\xD6\\v#\\x3$\\x3$\\x3$\\x3$\\a$\\xDC\\n$\\f$\\xE$\\xDF\\v$\\x3$\"+\r\n\t\t\"\\x3$\\x3$\\x3$\\a$\\xE5\\n$\\f$\\xE$\\xE8\\v$\\x3$\\x3$\\x5$\\xEC\\n$\\x3$\\x3$\\x3%\\x6\"+\r\n\t\t\"%\\xF1\\n%\\r%\\xE%\\xF2\\x3%\\x3%\\x3\\xE6\\x2\\x2&\\x3\\x2\\x3\\x5\\x2\\x4\\a\\x2\\x5\\t\"+\r\n\t\t\"\\x2\\x6\\v\\x2\\a\\r\\x2\\b\\xF\\x2\\t\\x11\\x2\\n\\x13\\x2\\v\\x15\\x2\\f\\x17\\x2\\r\\x19\\x2\"+\r\n\t\t\"\\xE\\x1B\\x2\\xF\\x1D\\x2\\x10\\x1F\\x2\\x11!\\x2\\x12#\\x2\\x13%\\x2\\x14\\'\\x2\\x15)\"+\r\n\t\t\"\\x2\\x16+\\x2\\x17-\\x2\\x18/\\x2\\x19\\x31\\x2\\x1A\\x33\\x2\\x1B\\x35\\x2\\x1C\\x37\\x2\"+\r\n\t\t\"\\x1D\\x39\\x2\\x1E;\\x2\\x1F=\\x2 ?\\x2!\\x41\\x2\\\"\\x43\\x2#\\x45\\x2$G\\x2%I\\x2&\\x3\"+\r\n\t\t\"\\x2\\b\\x3\\x2\\x32;\\x4\\x2\\x43\\\\\\x63|\\x5\\x2\\x43\\\\\\x61\\x61\\x63|\\x6\\x2\\x32;\"+\r\n\t\t\"\\x43\\\\\\x61\\x61\\x63|\\x4\\x2\\f\\f\\xF\\xF\\x5\\x2\\v\\f\\xF\\xF\\\"\\\"\\xFE\\x2\\x3\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x2\\x5\\x3\\x2\\x2\\x2\\x2\\a\\x3\\x2\\x2\\x2\\x2\\t\\x3\\x2\\x2\\x2\\x2\\v\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x2\\r\\x3\\x2\\x2\\x2\\x2\\xF\\x3\\x2\\x2\\x2\\x2\\x11\\x3\\x2\\x2\\x2\\x2\\x13\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x2\\x15\\x3\\x2\\x2\\x2\\x2\\x17\\x3\\x2\\x2\\x2\\x2\\x19\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"\\x1B\\x3\\x2\\x2\\x2\\x2\\x1D\\x3\\x2\\x2\\x2\\x2\\x1F\\x3\\x2\\x2\\x2\\x2!\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x2#\\x3\\x2\\x2\\x2\\x2%\\x3\\x2\\x2\\x2\\x2\\'\\x3\\x2\\x2\\x2\\x2)\\x3\\x2\\x2\\x2\\x2+\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x2-\\x3\\x2\\x2\\x2\\x2/\\x3\\x2\\x2\\x2\\x2\\x31\\x3\\x2\\x2\\x2\\x2\\x33\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x2\\x35\\x3\\x2\\x2\\x2\\x2\\x37\\x3\\x2\\x2\\x2\\x2\\x39\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x2;\\x3\\x2\\x2\\x2\\x2=\\x3\\x2\\x2\\x2\\x2?\\x3\\x2\\x2\\x2\\x2\\x41\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"\\x43\\x3\\x2\\x2\\x2\\x2\\x45\\x3\\x2\\x2\\x2\\x2G\\x3\\x2\\x2\\x2\\x2I\\x3\\x2\\x2\\x2\\x3\"+\r\n\t\t\"K\\x3\\x2\\x2\\x2\\x5M\\x3\\x2\\x2\\x2\\aO\\x3\\x2\\x2\\x2\\tQ\\x3\\x2\\x2\\x2\\vS\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\rU\\x3\\x2\\x2\\x2\\xFX\\x3\\x2\\x2\\x2\\x11^\\x3\\x2\\x2\\x2\\x13\\x65\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x15j\\x3\\x2\\x2\\x2\\x17n\\x3\\x2\\x2\\x2\\x19u\\x3\\x2\\x2\\x2\\x1B{\\x3\\x2\\x2\\x2\\x1D\"+\r\n\t\t\"\\x84\\x3\\x2\\x2\\x2\\x1F\\x86\\x3\\x2\\x2\\x2!\\x88\\x3\\x2\\x2\\x2#\\x8A\\x3\\x2\\x2\\x2\"+\r\n\t\t\"%\\x8C\\x3\\x2\\x2\\x2\\'\\x8E\\x3\\x2\\x2\\x2)\\x91\\x3\\x2\\x2\\x2+\\x94\\x3\\x2\\x2\\x2\"+\r\n\t\t\"-\\x96\\x3\\x2\\x2\\x2/\\x99\\x3\\x2\\x2\\x2\\x31\\x9C\\x3\\x2\\x2\\x2\\x33\\x9E\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x35\\xA0\\x3\\x2\\x2\\x2\\x37\\xA3\\x3\\x2\\x2\\x2\\x39\\xA6\\x3\\x2\\x2\\x2;\\xAD\\x3\"+\r\n\t\t\"\\x2\\x2\\x2=\\xB2\\x3\\x2\\x2\\x2?\\xBC\\x3\\x2\\x2\\x2\\x41\\xC9\\x3\\x2\\x2\\x2\\x43\\xCB\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x45\\xD0\\x3\\x2\\x2\\x2G\\xEB\\x3\\x2\\x2\\x2I\\xF0\\x3\\x2\\x2\\x2KL\\a\"+\r\n\t\t\"=\\x2\\x2L\\x4\\x3\\x2\\x2\\x2MN\\a?\\x2\\x2N\\x6\\x3\\x2\\x2\\x2OP\\a*\\x2\\x2P\\b\\x3\\x2\"+\r\n\t\t\"\\x2\\x2QR\\a.\\x2\\x2R\\n\\x3\\x2\\x2\\x2ST\\a+\\x2\\x2T\\f\\x3\\x2\\x2\\x2UV\\ak\\x2\\x2\"+\r\n\t\t\"VW\\ah\\x2\\x2W\\xE\\x3\\x2\\x2\\x2XY\\ak\\x2\\x2YZ\\ah\\x2\\x2Z[\\ag\\x2\\x2[\\\\\\ap\\x2\"+\r\n\t\t\"\\x2\\\\]\\a\\x66\\x2\\x2]\\x10\\x3\\x2\\x2\\x2^_\\ag\\x2\\x2_`\\an\\x2\\x2`\\x61\\au\\x2\\x2\"+\r\n\t\t\"\\x61\\x62\\ag\\x2\\x2\\x62\\x63\\ak\\x2\\x2\\x63\\x64\\ah\\x2\\x2\\x64\\x12\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x65\\x66\\ag\\x2\\x2\\x66g\\an\\x2\\x2gh\\au\\x2\\x2hi\\ag\\x2\\x2i\\x14\\x3\\x2\\x2\\x2\"+\r\n\t\t\"jk\\ah\\x2\\x2kl\\aq\\x2\\x2lm\\at\\x2\\x2m\\x16\\x3\\x2\\x2\\x2no\\ah\\x2\\x2op\\aq\\x2\"+\r\n\t\t\"\\x2pq\\at\\x2\\x2qr\\ag\\x2\\x2rs\\ap\\x2\\x2st\\a\\x66\\x2\\x2t\\x18\\x3\\x2\\x2\\x2uv\"+\r\n\t\t\"\\ay\\x2\\x2vw\\aj\\x2\\x2wx\\ak\\x2\\x2xy\\an\\x2\\x2yz\\ag\\x2\\x2z\\x1A\\x3\\x2\\x2\\x2\"+\r\n\t\t\"{|\\ay\\x2\\x2|}\\aj\\x2\\x2}~\\ak\\x2\\x2~\\x7F\\an\\x2\\x2\\x7F\\x80\\ag\\x2\\x2\\x80\\x81\"+\r\n\t\t\"\\ag\\x2\\x2\\x81\\x82\\ap\\x2\\x2\\x82\\x83\\a\\x66\\x2\\x2\\x83\\x1C\\x3\\x2\\x2\\x2\\x84\"+\r\n\t\t\"\\x85\\a#\\x2\\x2\\x85\\x1E\\x3\\x2\\x2\\x2\\x86\\x87\\a,\\x2\\x2\\x87 \\x3\\x2\\x2\\x2\\x88\"+\r\n\t\t\"\\x89\\a\\x31\\x2\\x2\\x89\\\"\\x3\\x2\\x2\\x2\\x8A\\x8B\\a\\'\\x2\\x2\\x8B$\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x8C\\x8D\\a-\\x2\\x2\\x8D&\\x3\\x2\\x2\\x2\\x8E\\x8F\\a-\\x2\\x2\\x8F\\x90\\a-\\x2\\x2\\x90\"+\r\n\t\t\"(\\x3\\x2\\x2\\x2\\x91\\x92\\a/\\x2\\x2\\x92\\x93\\a/\\x2\\x2\\x93*\\x3\\x2\\x2\\x2\\x94\\x95\"+\r\n\t\t\"\\a/\\x2\\x2\\x95,\\x3\\x2\\x2\\x2\\x96\\x97\\a?\\x2\\x2\\x97\\x98\\a?\\x2\\x2\\x98.\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x99\\x9A\\a#\\x2\\x2\\x9A\\x9B\\a?\\x2\\x2\\x9B\\x30\\x3\\x2\\x2\\x2\\x9C\\x9D\\a\"+\r\n\t\t\"@\\x2\\x2\\x9D\\x32\\x3\\x2\\x2\\x2\\x9E\\x9F\\a>\\x2\\x2\\x9F\\x34\\x3\\x2\\x2\\x2\\xA0\\xA1\"+\r\n\t\t\"\\a>\\x2\\x2\\xA1\\xA2\\a?\\x2\\x2\\xA2\\x36\\x3\\x2\\x2\\x2\\xA3\\xA4\\a@\\x2\\x2\\xA4\\xA5\"+\r\n\t\t\"\\a?\\x2\\x2\\xA5\\x38\\x3\\x2\\x2\\x2\\xA6\\xA7\\ar\\x2\\x2\\xA7\\xA8\\at\\x2\\x2\\xA8\\xA9\"+\r\n\t\t\"\\ak\\x2\\x2\\xA9\\xAA\\ap\\x2\\x2\\xAA\\xAB\\av\\x2\\x2\\xAB:\\x3\\x2\\x2\\x2\\xAC\\xAE\\t\"+\r\n\t\t\"\\x2\\x2\\x2\\xAD\\xAC\\x3\\x2\\x2\\x2\\xAE\\xAF\\x3\\x2\\x2\\x2\\xAF\\xAD\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\xAF\\xB0\\x3\\x2\\x2\\x2\\xB0<\\x3\\x2\\x2\\x2\\xB1\\xB3\\t\\x2\\x2\\x2\\xB2\\xB1\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB3\\xB4\\x3\\x2\\x2\\x2\\xB4\\xB2\\x3\\x2\\x2\\x2\\xB4\\xB5\\x3\\x2\\x2\\x2\\xB5\"+\r\n\t\t\"\\xB6\\x3\\x2\\x2\\x2\\xB6\\xB8\\a\\x30\\x2\\x2\\xB7\\xB9\\t\\x2\\x2\\x2\\xB8\\xB7\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB9\\xBA\\x3\\x2\\x2\\x2\\xBA\\xB8\\x3\\x2\\x2\\x2\\xBA\\xBB\\x3\\x2\\x2\\x2\\xBB\"+\r\n\t\t\">\\x3\\x2\\x2\\x2\\xBC\\xBD\\a)\\x2\\x2\\xBD\\xBE\\t\\x3\\x2\\x2\\xBE\\xBF\\a)\\x2\\x2\\xBF\"+\r\n\t\t\"@\\x3\\x2\\x2\\x2\\xC0\\xC1\\av\\x2\\x2\\xC1\\xC2\\at\\x2\\x2\\xC2\\xC3\\aw\\x2\\x2\\xC3\\xCA\"+\r\n\t\t\"\\ag\\x2\\x2\\xC4\\xC5\\ah\\x2\\x2\\xC5\\xC6\\a\\x63\\x2\\x2\\xC6\\xC7\\an\\x2\\x2\\xC7\\xC8\"+\r\n\t\t\"\\au\\x2\\x2\\xC8\\xCA\\ag\\x2\\x2\\xC9\\xC0\\x3\\x2\\x2\\x2\\xC9\\xC4\\x3\\x2\\x2\\x2\\xCA\"+\r\n\t\t\"\\x42\\x3\\x2\\x2\\x2\\xCB\\xCC\\ap\\x2\\x2\\xCC\\xCD\\aw\\x2\\x2\\xCD\\xCE\\an\\x2\\x2\\xCE\"+\r\n\t\t\"\\xCF\\an\\x2\\x2\\xCF\\x44\\x3\\x2\\x2\\x2\\xD0\\xD4\\t\\x4\\x2\\x2\\xD1\\xD3\\t\\x5\\x2\\x2\"+\r\n\t\t\"\\xD2\\xD1\\x3\\x2\\x2\\x2\\xD3\\xD6\\x3\\x2\\x2\\x2\\xD4\\xD2\\x3\\x2\\x2\\x2\\xD4\\xD5\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\xD5\\x46\\x3\\x2\\x2\\x2\\xD6\\xD4\\x3\\x2\\x2\\x2\\xD7\\xD8\\a\\x31\\x2\\x2\"+\r\n\t\t\"\\xD8\\xD9\\a\\x31\\x2\\x2\\xD9\\xDD\\x3\\x2\\x2\\x2\\xDA\\xDC\\n\\x6\\x2\\x2\\xDB\\xDA\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\xDC\\xDF\\x3\\x2\\x2\\x2\\xDD\\xDB\\x3\\x2\\x2\\x2\\xDD\\xDE\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\xDE\\xEC\\x3\\x2\\x2\\x2\\xDF\\xDD\\x3\\x2\\x2\\x2\\xE0\\xE1\\a\\x31\\x2\\x2\\xE1\\xE2\\a\"+\r\n\t\t\",\\x2\\x2\\xE2\\xE6\\x3\\x2\\x2\\x2\\xE3\\xE5\\v\\x2\\x2\\x2\\xE4\\xE3\\x3\\x2\\x2\\x2\\xE5\"+\r\n\t\t\"\\xE8\\x3\\x2\\x2\\x2\\xE6\\xE7\\x3\\x2\\x2\\x2\\xE6\\xE4\\x3\\x2\\x2\\x2\\xE7\\xE9\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xE8\\xE6\\x3\\x2\\x2\\x2\\xE9\\xEA\\a,\\x2\\x2\\xEA\\xEC\\a\\x31\\x2\\x2\\xEB\\xD7\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\xEB\\xE0\\x3\\x2\\x2\\x2\\xEC\\xED\\x3\\x2\\x2\\x2\\xED\\xEE\\b$\\x2\\x2\"+\r\n\t\t\"\\xEEH\\x3\\x2\\x2\\x2\\xEF\\xF1\\t\\a\\x2\\x2\\xF0\\xEF\\x3\\x2\\x2\\x2\\xF1\\xF2\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xF2\\xF0\\x3\\x2\\x2\\x2\\xF2\\xF3\\x3\\x2\\x2\\x2\\xF3\\xF4\\x3\\x2\\x2\\x2\\xF4\"+\r\n\t\t\"\\xF5\\b%\\x2\\x2\\xF5J\\x3\\x2\\x2\\x2\\f\\x2\\xAF\\xB4\\xBA\\xC9\\xD4\\xDD\\xE6\\xEB\\xF2\"+\r\n\t\t\"\\x3\\b\\x2\\x2\";\r\n\tpublic static readonly ATN _ATN =\r\n\t\tnew ATNDeserializer().Deserialize(_serializedATN.ToCharArray());\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs	(revision f6b2e0c4435adf65f67294cb2ac93d0704ad0733)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs	(date 1653109975577)
@@ -32,8 +32,8 @@
 		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
 		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
 		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
-		T__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, 
-		BOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;
+		T__24=25, T__25=26, T__26=27, PRINT=28, TYPE=29, INTEGER=30, DOUBLE=31, 
+		CHAR=32, BOOL=33, NULL=34, IDENTIFIER=35, COMMENT=36, WS=37;
 	public static string[] modeNames = {
 		"DEFAULT_MODE"
 	};
@@ -42,8 +42,8 @@
 		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
 		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
 		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
-		"T__25", "T__26", "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", 
-		"IDENTIFIER", "COMMENT", "WS"
+		"T__25", "T__26", "PRINT", "TYPE", "INTEGER", "DOUBLE", "CHAR", "BOOL", 
+		"NULL", "IDENTIFIER", "COMMENT", "WS"
 	};
 
 
@@ -57,13 +57,13 @@
 		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'elseif'", 
 		"'else'", "'for'", "'forend'", "'while'", "'whileend'", "'!'", "'*'", 
 		"'/'", "'%'", "'+'", "'++'", "'--'", "'-'", "'=='", "'!='", "'>'", "'<'", 
-		"'<='", "'>='", "'print'", null, null, null, null, "'null'"
+		"'<='", "'>='", "'print'", null, null, null, null, null, "'null'"
 	};
 	private static readonly string[] _SymbolicNames = {
 		null, null, null, null, null, null, null, null, null, null, null, null, 
 		null, null, null, null, null, null, null, null, null, null, null, null, 
-		null, null, null, null, "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", 
-		"NULL", "IDENTIFIER", "COMMENT", "WS"
+		null, null, null, null, "PRINT", "TYPE", "INTEGER", "DOUBLE", "CHAR", 
+		"BOOL", "NULL", "IDENTIFIER", "COMMENT", "WS"
 	};
 	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);
 
@@ -113,96 +113,106 @@
 	public override string SerializedAtn { get { return _serializedATN; } }
 
 	public static readonly string _serializedATN =
-		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\xF6\b\x1\x4\x2"+
-		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
-		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
-		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
-		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
-		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
-		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4"+
-		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
-		"\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v"+
-		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r"+
-		"\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF"+
-		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14"+
-		"\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18"+
-		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C"+
-		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x6\x1E"+
-		"\xAE\n\x1E\r\x1E\xE\x1E\xAF\x3\x1F\x6\x1F\xB3\n\x1F\r\x1F\xE\x1F\xB4\x3"+
-		"\x1F\x3\x1F\x6\x1F\xB9\n\x1F\r\x1F\xE\x1F\xBA\x3 \x3 \x3 \x3 \x3!\x3!"+
-		"\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xCA\n!\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3"+
-		"#\a#\xD3\n#\f#\xE#\xD6\v#\x3$\x3$\x3$\x3$\a$\xDC\n$\f$\xE$\xDF\v$\x3$"+
-		"\x3$\x3$\x3$\a$\xE5\n$\f$\xE$\xE8\v$\x3$\x3$\x5$\xEC\n$\x3$\x3$\x3%\x6"+
-		"%\xF1\n%\r%\xE%\xF2\x3%\x3%\x3\xE6\x2\x2&\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
-		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2"+
-		"\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)"+
-		"\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2"+
-		"\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&\x3"+
-		"\x2\b\x3\x2\x32;\x4\x2\x43\\\x63|\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;"+
-		"\x43\\\x61\x61\x63|\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\xFE\x2\x3\x3\x2"+
-		"\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2"+
-		"\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3"+
-		"\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2"+
-		"\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2"+
-		"\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+"+
-		"\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
-		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
-		"\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2"+
-		"\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x3"+
-		"K\x3\x2\x2\x2\x5M\x3\x2\x2\x2\aO\x3\x2\x2\x2\tQ\x3\x2\x2\x2\vS\x3\x2\x2"+
-		"\x2\rU\x3\x2\x2\x2\xFX\x3\x2\x2\x2\x11^\x3\x2\x2\x2\x13\x65\x3\x2\x2\x2"+
-		"\x15j\x3\x2\x2\x2\x17n\x3\x2\x2\x2\x19u\x3\x2\x2\x2\x1B{\x3\x2\x2\x2\x1D"+
-		"\x84\x3\x2\x2\x2\x1F\x86\x3\x2\x2\x2!\x88\x3\x2\x2\x2#\x8A\x3\x2\x2\x2"+
-		"%\x8C\x3\x2\x2\x2\'\x8E\x3\x2\x2\x2)\x91\x3\x2\x2\x2+\x94\x3\x2\x2\x2"+
-		"-\x96\x3\x2\x2\x2/\x99\x3\x2\x2\x2\x31\x9C\x3\x2\x2\x2\x33\x9E\x3\x2\x2"+
-		"\x2\x35\xA0\x3\x2\x2\x2\x37\xA3\x3\x2\x2\x2\x39\xA6\x3\x2\x2\x2;\xAD\x3"+
-		"\x2\x2\x2=\xB2\x3\x2\x2\x2?\xBC\x3\x2\x2\x2\x41\xC9\x3\x2\x2\x2\x43\xCB"+
-		"\x3\x2\x2\x2\x45\xD0\x3\x2\x2\x2G\xEB\x3\x2\x2\x2I\xF0\x3\x2\x2\x2KL\a"+
-		"=\x2\x2L\x4\x3\x2\x2\x2MN\a?\x2\x2N\x6\x3\x2\x2\x2OP\a*\x2\x2P\b\x3\x2"+
-		"\x2\x2QR\a.\x2\x2R\n\x3\x2\x2\x2ST\a+\x2\x2T\f\x3\x2\x2\x2UV\ak\x2\x2"+
-		"VW\ah\x2\x2W\xE\x3\x2\x2\x2XY\ak\x2\x2YZ\ah\x2\x2Z[\ag\x2\x2[\\\ap\x2"+
-		"\x2\\]\a\x66\x2\x2]\x10\x3\x2\x2\x2^_\ag\x2\x2_`\an\x2\x2`\x61\au\x2\x2"+
-		"\x61\x62\ag\x2\x2\x62\x63\ak\x2\x2\x63\x64\ah\x2\x2\x64\x12\x3\x2\x2\x2"+
-		"\x65\x66\ag\x2\x2\x66g\an\x2\x2gh\au\x2\x2hi\ag\x2\x2i\x14\x3\x2\x2\x2"+
-		"jk\ah\x2\x2kl\aq\x2\x2lm\at\x2\x2m\x16\x3\x2\x2\x2no\ah\x2\x2op\aq\x2"+
-		"\x2pq\at\x2\x2qr\ag\x2\x2rs\ap\x2\x2st\a\x66\x2\x2t\x18\x3\x2\x2\x2uv"+
-		"\ay\x2\x2vw\aj\x2\x2wx\ak\x2\x2xy\an\x2\x2yz\ag\x2\x2z\x1A\x3\x2\x2\x2"+
-		"{|\ay\x2\x2|}\aj\x2\x2}~\ak\x2\x2~\x7F\an\x2\x2\x7F\x80\ag\x2\x2\x80\x81"+
-		"\ag\x2\x2\x81\x82\ap\x2\x2\x82\x83\a\x66\x2\x2\x83\x1C\x3\x2\x2\x2\x84"+
-		"\x85\a#\x2\x2\x85\x1E\x3\x2\x2\x2\x86\x87\a,\x2\x2\x87 \x3\x2\x2\x2\x88"+
-		"\x89\a\x31\x2\x2\x89\"\x3\x2\x2\x2\x8A\x8B\a\'\x2\x2\x8B$\x3\x2\x2\x2"+
-		"\x8C\x8D\a-\x2\x2\x8D&\x3\x2\x2\x2\x8E\x8F\a-\x2\x2\x8F\x90\a-\x2\x2\x90"+
-		"(\x3\x2\x2\x2\x91\x92\a/\x2\x2\x92\x93\a/\x2\x2\x93*\x3\x2\x2\x2\x94\x95"+
-		"\a/\x2\x2\x95,\x3\x2\x2\x2\x96\x97\a?\x2\x2\x97\x98\a?\x2\x2\x98.\x3\x2"+
-		"\x2\x2\x99\x9A\a#\x2\x2\x9A\x9B\a?\x2\x2\x9B\x30\x3\x2\x2\x2\x9C\x9D\a"+
-		"@\x2\x2\x9D\x32\x3\x2\x2\x2\x9E\x9F\a>\x2\x2\x9F\x34\x3\x2\x2\x2\xA0\xA1"+
-		"\a>\x2\x2\xA1\xA2\a?\x2\x2\xA2\x36\x3\x2\x2\x2\xA3\xA4\a@\x2\x2\xA4\xA5"+
-		"\a?\x2\x2\xA5\x38\x3\x2\x2\x2\xA6\xA7\ar\x2\x2\xA7\xA8\at\x2\x2\xA8\xA9"+
-		"\ak\x2\x2\xA9\xAA\ap\x2\x2\xAA\xAB\av\x2\x2\xAB:\x3\x2\x2\x2\xAC\xAE\t"+
-		"\x2\x2\x2\xAD\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2"+
-		"\xAF\xB0\x3\x2\x2\x2\xB0<\x3\x2\x2\x2\xB1\xB3\t\x2\x2\x2\xB2\xB1\x3\x2"+
-		"\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5"+
-		"\xB6\x3\x2\x2\x2\xB6\xB8\a\x30\x2\x2\xB7\xB9\t\x2\x2\x2\xB8\xB7\x3\x2"+
-		"\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB"+
-		">\x3\x2\x2\x2\xBC\xBD\a)\x2\x2\xBD\xBE\t\x3\x2\x2\xBE\xBF\a)\x2\x2\xBF"+
-		"@\x3\x2\x2\x2\xC0\xC1\av\x2\x2\xC1\xC2\at\x2\x2\xC2\xC3\aw\x2\x2\xC3\xCA"+
-		"\ag\x2\x2\xC4\xC5\ah\x2\x2\xC5\xC6\a\x63\x2\x2\xC6\xC7\an\x2\x2\xC7\xC8"+
-		"\au\x2\x2\xC8\xCA\ag\x2\x2\xC9\xC0\x3\x2\x2\x2\xC9\xC4\x3\x2\x2\x2\xCA"+
-		"\x42\x3\x2\x2\x2\xCB\xCC\ap\x2\x2\xCC\xCD\aw\x2\x2\xCD\xCE\an\x2\x2\xCE"+
-		"\xCF\an\x2\x2\xCF\x44\x3\x2\x2\x2\xD0\xD4\t\x4\x2\x2\xD1\xD3\t\x5\x2\x2"+
-		"\xD2\xD1\x3\x2\x2\x2\xD3\xD6\x3\x2\x2\x2\xD4\xD2\x3\x2\x2\x2\xD4\xD5\x3"+
-		"\x2\x2\x2\xD5\x46\x3\x2\x2\x2\xD6\xD4\x3\x2\x2\x2\xD7\xD8\a\x31\x2\x2"+
-		"\xD8\xD9\a\x31\x2\x2\xD9\xDD\x3\x2\x2\x2\xDA\xDC\n\x6\x2\x2\xDB\xDA\x3"+
-		"\x2\x2\x2\xDC\xDF\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDE\x3\x2\x2\x2"+
-		"\xDE\xEC\x3\x2\x2\x2\xDF\xDD\x3\x2\x2\x2\xE0\xE1\a\x31\x2\x2\xE1\xE2\a"+
-		",\x2\x2\xE2\xE6\x3\x2\x2\x2\xE3\xE5\v\x2\x2\x2\xE4\xE3\x3\x2\x2\x2\xE5"+
-		"\xE8\x3\x2\x2\x2\xE6\xE7\x3\x2\x2\x2\xE6\xE4\x3\x2\x2\x2\xE7\xE9\x3\x2"+
-		"\x2\x2\xE8\xE6\x3\x2\x2\x2\xE9\xEA\a,\x2\x2\xEA\xEC\a\x31\x2\x2\xEB\xD7"+
-		"\x3\x2\x2\x2\xEB\xE0\x3\x2\x2\x2\xEC\xED\x3\x2\x2\x2\xED\xEE\b$\x2\x2"+
-		"\xEEH\x3\x2\x2\x2\xEF\xF1\t\a\x2\x2\xF0\xEF\x3\x2\x2\x2\xF1\xF2\x3\x2"+
-		"\x2\x2\xF2\xF0\x3\x2\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3\xF4\x3\x2\x2\x2\xF4"+
-		"\xF5\b%\x2\x2\xF5J\x3\x2\x2\x2\f\x2\xAF\xB4\xBA\xC9\xD4\xDD\xE6\xEB\xF2"+
-		"\x3\b\x2\x2";
+		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\'\x10F\b\x1\x4"+
+		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
+		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
+		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
+		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
+		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
+		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x3\x2\x3\x2\x3\x3\x3\x3"+
+		"\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3"+
+		"\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3"+
+		"\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3"+
+		"\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
+		"\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3"+
+		"\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
+		"\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3"+
+		"\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
+		"\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3"+
+		"\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3"+
+		"\x1E\x5\x1E\xC4\n\x1E\x3\x1F\x6\x1F\xC7\n\x1F\r\x1F\xE\x1F\xC8\x3 \x6"+
+		" \xCC\n \r \xE \xCD\x3 \x3 \x6 \xD2\n \r \xE \xD3\x3!\x3!\x3!\x3!\x3\""+
+		"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xE3\n\"\x3#\x3#\x3#\x3#"+
+		"\x3#\x3$\x3$\a$\xEC\n$\f$\xE$\xEF\v$\x3%\x3%\x3%\x3%\a%\xF5\n%\f%\xE%"+
+		"\xF8\v%\x3%\x3%\x3%\x3%\a%\xFE\n%\f%\xE%\x101\v%\x3%\x3%\x5%\x105\n%\x3"+
+		"%\x3%\x3&\x6&\x10A\n&\r&\xE&\x10B\x3&\x3&\x3\xFF\x2\x2\'\x3\x2\x3\x5\x2"+
+		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
+		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
+		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
+		"\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$"+
+		"G\x2%I\x2&K\x2\'\x3\x2\b\x3\x2\x32;\x4\x2\x43\\\x63|\x5\x2\x43\\\x61\x61"+
+		"\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\""+
+		"\"\x11B\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2"+
+		"\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2"+
+		"\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19"+
+		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2"+
+		"\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)"+
+		"\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
+		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2"+
+		"\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41"+
+		"\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2"+
+		"I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x3M\x3\x2\x2\x2\x5O\x3\x2\x2\x2\aQ\x3\x2"+
+		"\x2\x2\tS\x3\x2\x2\x2\vU\x3\x2\x2\x2\rW\x3\x2\x2\x2\xFZ\x3\x2\x2\x2\x11"+
+		"`\x3\x2\x2\x2\x13g\x3\x2\x2\x2\x15l\x3\x2\x2\x2\x17p\x3\x2\x2\x2\x19w"+
+		"\x3\x2\x2\x2\x1B}\x3\x2\x2\x2\x1D\x86\x3\x2\x2\x2\x1F\x88\x3\x2\x2\x2"+
+		"!\x8A\x3\x2\x2\x2#\x8C\x3\x2\x2\x2%\x8E\x3\x2\x2\x2\'\x90\x3\x2\x2\x2"+
+		")\x93\x3\x2\x2\x2+\x96\x3\x2\x2\x2-\x98\x3\x2\x2\x2/\x9B\x3\x2\x2\x2\x31"+
+		"\x9E\x3\x2\x2\x2\x33\xA0\x3\x2\x2\x2\x35\xA2\x3\x2\x2\x2\x37\xA5\x3\x2"+
+		"\x2\x2\x39\xA8\x3\x2\x2\x2;\xC3\x3\x2\x2\x2=\xC6\x3\x2\x2\x2?\xCB\x3\x2"+
+		"\x2\x2\x41\xD5\x3\x2\x2\x2\x43\xE2\x3\x2\x2\x2\x45\xE4\x3\x2\x2\x2G\xE9"+
+		"\x3\x2\x2\x2I\x104\x3\x2\x2\x2K\x109\x3\x2\x2\x2MN\a=\x2\x2N\x4\x3\x2"+
+		"\x2\x2OP\a?\x2\x2P\x6\x3\x2\x2\x2QR\a*\x2\x2R\b\x3\x2\x2\x2ST\a.\x2\x2"+
+		"T\n\x3\x2\x2\x2UV\a+\x2\x2V\f\x3\x2\x2\x2WX\ak\x2\x2XY\ah\x2\x2Y\xE\x3"+
+		"\x2\x2\x2Z[\ak\x2\x2[\\\ah\x2\x2\\]\ag\x2\x2]^\ap\x2\x2^_\a\x66\x2\x2"+
+		"_\x10\x3\x2\x2\x2`\x61\ag\x2\x2\x61\x62\an\x2\x2\x62\x63\au\x2\x2\x63"+
+		"\x64\ag\x2\x2\x64\x65\ak\x2\x2\x65\x66\ah\x2\x2\x66\x12\x3\x2\x2\x2gh"+
+		"\ag\x2\x2hi\an\x2\x2ij\au\x2\x2jk\ag\x2\x2k\x14\x3\x2\x2\x2lm\ah\x2\x2"+
+		"mn\aq\x2\x2no\at\x2\x2o\x16\x3\x2\x2\x2pq\ah\x2\x2qr\aq\x2\x2rs\at\x2"+
+		"\x2st\ag\x2\x2tu\ap\x2\x2uv\a\x66\x2\x2v\x18\x3\x2\x2\x2wx\ay\x2\x2xy"+
+		"\aj\x2\x2yz\ak\x2\x2z{\an\x2\x2{|\ag\x2\x2|\x1A\x3\x2\x2\x2}~\ay\x2\x2"+
+		"~\x7F\aj\x2\x2\x7F\x80\ak\x2\x2\x80\x81\an\x2\x2\x81\x82\ag\x2\x2\x82"+
+		"\x83\ag\x2\x2\x83\x84\ap\x2\x2\x84\x85\a\x66\x2\x2\x85\x1C\x3\x2\x2\x2"+
+		"\x86\x87\a#\x2\x2\x87\x1E\x3\x2\x2\x2\x88\x89\a,\x2\x2\x89 \x3\x2\x2\x2"+
+		"\x8A\x8B\a\x31\x2\x2\x8B\"\x3\x2\x2\x2\x8C\x8D\a\'\x2\x2\x8D$\x3\x2\x2"+
+		"\x2\x8E\x8F\a-\x2\x2\x8F&\x3\x2\x2\x2\x90\x91\a-\x2\x2\x91\x92\a-\x2\x2"+
+		"\x92(\x3\x2\x2\x2\x93\x94\a/\x2\x2\x94\x95\a/\x2\x2\x95*\x3\x2\x2\x2\x96"+
+		"\x97\a/\x2\x2\x97,\x3\x2\x2\x2\x98\x99\a?\x2\x2\x99\x9A\a?\x2\x2\x9A."+
+		"\x3\x2\x2\x2\x9B\x9C\a#\x2\x2\x9C\x9D\a?\x2\x2\x9D\x30\x3\x2\x2\x2\x9E"+
+		"\x9F\a@\x2\x2\x9F\x32\x3\x2\x2\x2\xA0\xA1\a>\x2\x2\xA1\x34\x3\x2\x2\x2"+
+		"\xA2\xA3\a>\x2\x2\xA3\xA4\a?\x2\x2\xA4\x36\x3\x2\x2\x2\xA5\xA6\a@\x2\x2"+
+		"\xA6\xA7\a?\x2\x2\xA7\x38\x3\x2\x2\x2\xA8\xA9\ar\x2\x2\xA9\xAA\at\x2\x2"+
+		"\xAA\xAB\ak\x2\x2\xAB\xAC\ap\x2\x2\xAC\xAD\av\x2\x2\xAD:\x3\x2\x2\x2\xAE"+
+		"\xAF\ak\x2\x2\xAF\xB0\ap\x2\x2\xB0\xC4\av\x2\x2\xB1\xB2\a\x66\x2\x2\xB2"+
+		"\xB3\aq\x2\x2\xB3\xB4\aw\x2\x2\xB4\xB5\a\x64\x2\x2\xB5\xB6\an\x2\x2\xB6"+
+		"\xC4\ag\x2\x2\xB7\xB8\a\x65\x2\x2\xB8\xB9\aj\x2\x2\xB9\xBA\a\x63\x2\x2"+
+		"\xBA\xC4\at\x2\x2\xBB\xBC\a\x64\x2\x2\xBC\xBD\aq\x2\x2\xBD\xBE\aq\x2\x2"+
+		"\xBE\xC4\an\x2\x2\xBF\xC0\ax\x2\x2\xC0\xC1\aq\x2\x2\xC1\xC2\ak\x2\x2\xC2"+
+		"\xC4\a\x66\x2\x2\xC3\xAE\x3\x2\x2\x2\xC3\xB1\x3\x2\x2\x2\xC3\xB7\x3\x2"+
+		"\x2\x2\xC3\xBB\x3\x2\x2\x2\xC3\xBF\x3\x2\x2\x2\xC4<\x3\x2\x2\x2\xC5\xC7"+
+		"\t\x2\x2\x2\xC6\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2\x2\x2\xC8\xC6\x3\x2\x2\x2"+
+		"\xC8\xC9\x3\x2\x2\x2\xC9>\x3\x2\x2\x2\xCA\xCC\t\x2\x2\x2\xCB\xCA\x3\x2"+
+		"\x2\x2\xCC\xCD\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCD\xCE\x3\x2\x2\x2\xCE"+
+		"\xCF\x3\x2\x2\x2\xCF\xD1\a\x30\x2\x2\xD0\xD2\t\x2\x2\x2\xD1\xD0\x3\x2"+
+		"\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD1\x3\x2\x2\x2\xD3\xD4\x3\x2\x2\x2\xD4"+
+		"@\x3\x2\x2\x2\xD5\xD6\a)\x2\x2\xD6\xD7\t\x3\x2\x2\xD7\xD8\a)\x2\x2\xD8"+
+		"\x42\x3\x2\x2\x2\xD9\xDA\av\x2\x2\xDA\xDB\at\x2\x2\xDB\xDC\aw\x2\x2\xDC"+
+		"\xE3\ag\x2\x2\xDD\xDE\ah\x2\x2\xDE\xDF\a\x63\x2\x2\xDF\xE0\an\x2\x2\xE0"+
+		"\xE1\au\x2\x2\xE1\xE3\ag\x2\x2\xE2\xD9\x3\x2\x2\x2\xE2\xDD\x3\x2\x2\x2"+
+		"\xE3\x44\x3\x2\x2\x2\xE4\xE5\ap\x2\x2\xE5\xE6\aw\x2\x2\xE6\xE7\an\x2\x2"+
+		"\xE7\xE8\an\x2\x2\xE8\x46\x3\x2\x2\x2\xE9\xED\t\x4\x2\x2\xEA\xEC\t\x5"+
+		"\x2\x2\xEB\xEA\x3\x2\x2\x2\xEC\xEF\x3\x2\x2\x2\xED\xEB\x3\x2\x2\x2\xED"+
+		"\xEE\x3\x2\x2\x2\xEEH\x3\x2\x2\x2\xEF\xED\x3\x2\x2\x2\xF0\xF1\a\x31\x2"+
+		"\x2\xF1\xF2\a\x31\x2\x2\xF2\xF6\x3\x2\x2\x2\xF3\xF5\n\x6\x2\x2\xF4\xF3"+
+		"\x3\x2\x2\x2\xF5\xF8\x3\x2\x2\x2\xF6\xF4\x3\x2\x2\x2\xF6\xF7\x3\x2\x2"+
+		"\x2\xF7\x105\x3\x2\x2\x2\xF8\xF6\x3\x2\x2\x2\xF9\xFA\a\x31\x2\x2\xFA\xFB"+
+		"\a,\x2\x2\xFB\xFF\x3\x2\x2\x2\xFC\xFE\v\x2\x2\x2\xFD\xFC\x3\x2\x2\x2\xFE"+
+		"\x101\x3\x2\x2\x2\xFF\x100\x3\x2\x2\x2\xFF\xFD\x3\x2\x2\x2\x100\x102\x3"+
+		"\x2\x2\x2\x101\xFF\x3\x2\x2\x2\x102\x103\a,\x2\x2\x103\x105\a\x31\x2\x2"+
+		"\x104\xF0\x3\x2\x2\x2\x104\xF9\x3\x2\x2\x2\x105\x106\x3\x2\x2\x2\x106"+
+		"\x107\b%\x2\x2\x107J\x3\x2\x2\x2\x108\x10A\t\a\x2\x2\x109\x108\x3\x2\x2"+
+		"\x2\x10A\x10B\x3\x2\x2\x2\x10B\x109\x3\x2\x2\x2\x10B\x10C\x3\x2\x2\x2"+
+		"\x10C\x10D\x3\x2\x2\x2\x10D\x10E\b&\x2\x2\x10EL\x3\x2\x2\x2\r\x2\xC3\xC8"+
+		"\xCD\xD3\xE2\xED\xF6\xFF\x104\x10B\x3\b\x2\x2";
 	public static readonly ATN _ATN =
 		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
 }
