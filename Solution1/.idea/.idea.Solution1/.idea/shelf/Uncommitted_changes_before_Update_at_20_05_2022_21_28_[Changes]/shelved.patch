Index: ConsoleApp1/Content/c2022v2.g4
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>grammar c2022v2;\r\n\r\nprogram: line* EOF;\r\n\r\nline: statement \r\n    | ifBlock \r\n    | forBlock \r\n    | whileBlock\r\n    ;\r\n\r\nstatement: (assignment|funCall) ';';\r\n\r\nassignment: IDENTIFIER '=' expression;\r\n\r\nfunCall: (PRINT|IDENTIFIER) '(' (expression (',' expression )*)? ')';\r\n\r\nifBlock: 'if' '(' expression ')' block elseifBlock* elseBlock? 'ifend' ';' ;\r\nelseifBlock: 'elseif' '(' expression ')' block;\r\nelseBlock: 'else' block;\r\n\r\nforBlock: 'for' '(' assignment ';' expression ';' expression ')' block 'forend' ';';\r\n\r\nwhileBlock: 'while' expression block 'whileend' ';';\r\n\r\nblock: line+ ;\r\n\r\nexpression:\r\n    constant\r\n|   IDENTIFIER\r\n|   funCall\r\n|   '(' expression ')'\r\n|   '!' expression\r\n|   expression comp expression\r\n|   expression mul expression\r\n|   expression div expression\r\n|   expression add expression\r\n|   expression sub expression \r\n|   expression unaryadd //TODO FIX CAUSE IT CAN TAKE FUNCCALL++\r\n|   expression unarysub //SAME\r\n//TODO FIX += -= *= /=\r\n;\r\n\r\nmul: '*';\r\ndiv: '/' | '%';\r\nadd: '+';\r\nunaryadd: '++';\r\nunarysub: '--';\r\nsub: '-';\r\ncomp: '==' | '!=' | '>' | '<' | '<=' | '>=';\r\n\r\nconstant: INTEGER | DOUBLE | CHAR | BOOL | NULL;\r\n\r\nPRINT: 'print';\r\n\r\nINTEGER: [0-9]+;\r\nDOUBLE: [0-9]+ '.' [0-9]+;\r\nCHAR: '\\''[a-zA-Z]'\\'';\r\nBOOL: 'true' | 'false';\r\nNULL: 'null';\r\n\r\nIDENTIFIER\r\n    : [a-zA-Z_][a-zA-Z_0-9]*\r\n    ;\r\nCOMMENT : ( '//' ~[\\r\\n]* | '/*' .*? '*/' ) -> skip ;\r\nWS: [ \\t\\r\\n]+ -> skip;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/Content/c2022v2.g4 b/ConsoleApp1/Content/c2022v2.g4
--- a/ConsoleApp1/Content/c2022v2.g4	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/ConsoleApp1/Content/c2022v2.g4	(date 1653056071522)
@@ -34,7 +34,7 @@
 |   expression mul expression
 |   expression div expression
 |   expression add expression
-|   expression sub expression 
+|   expression sub expression
 |   expression unaryadd //TODO FIX CAUSE IT CAN TAKE FUNCCALL++
 |   expression unarysub //SAME
 //TODO FIX += -= *= /=
Index: ConsoleApp1/c2022v2Visitor.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using ConsoleApp1.Content;\r\n\r\nnamespace ConsoleApp1;\r\n\r\npublic class C2022V2Visitor : c2022v2BaseVisitor<object?>\r\n{\r\n    private Dictionary<string, object?> Variables { get; } = new();\r\n\r\n    public override object? VisitAssignment(c2022v2Parser.AssignmentContext context)\r\n    {\r\n        var varName = context.IDENTIFIER().GetText();\r\n        var value = Visit(context.expression());\r\n\r\n        Variables[varName] = value;\r\n        \r\n        return null;\r\n    }\r\n\r\n    public override object? VisitConstant(c2022v2Parser.ConstantContext context)\r\n    {\r\n        if (context.INTEGER() is { } i)\r\n        {\r\n            return int.Parse(i.GetText());\r\n        }\r\n    \r\n        if (context.DOUBLE() is { } d)\r\n        {\r\n            return double.Parse(d.GetText());\r\n        }\r\n        \r\n        if (context.CHAR() is { } c)\r\n        {\r\n            return char.Parse(c.GetText());\r\n        }\r\n        \r\n        if (context.BOOL() is { } b)\r\n        {\r\n            return b.GetText() == \"true\";\r\n        }\r\n    \r\n        if (context.NULL() is { })\r\n        {\r\n            return null;\r\n        }\r\n    \r\n        throw new NotImplementedException();\r\n    }\r\n\r\n    public override object? VisitFunCall(c2022v2Parser.FunCallContext context)\r\n    {\r\n        if (context.PRINT() is { } p)\r\n        {\r\n            //Console.WriteLine(Visit(context.expression()).ToString());\r\n        }\r\n    \r\n        return null;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/c2022v2Visitor.cs b/ConsoleApp1/c2022v2Visitor.cs
--- a/ConsoleApp1/c2022v2Visitor.cs	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/ConsoleApp1/c2022v2Visitor.cs	(date 1653056342679)
@@ -50,7 +50,9 @@
     {
         if (context.PRINT() is { } p)
         {
-            //Console.WriteLine(Visit(context.expression()).ToString());
+            String text = Visit(context.expression().).ToString();
+            var value = context.expression();
+            Console.WriteLine(Visit(value);
         }
     
         return null;
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from D:\\KTUOneDrive\\OneDrive - Kaunas University of Technology\\4pusmetis\\Programavimo kalbÅ³ teorija\\Compiler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime;\r\nusing Antlr4.Runtime.Atn;\r\nusing Antlr4.Runtime.Misc;\r\nusing Antlr4.Runtime.Tree;\r\nusing System.Collections.Generic;\r\nusing DFA = Antlr4.Runtime.Dfa.DFA;\r\n\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2Parser : Parser {\r\n\tpublic const int\r\n\t\tT__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, \r\n\t\tT__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, \r\n\t\tT__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, \r\n\t\tT__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, \r\n\t\tBOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;\r\n\tpublic const int\r\n\t\tRULE_program = 0, RULE_line = 1, RULE_statement = 2, RULE_assignment = 3, \r\n\t\tRULE_funCall = 4, RULE_ifBlock = 5, RULE_elseifBlock = 6, RULE_elseBlock = 7, \r\n\t\tRULE_forBlock = 8, RULE_whileBlock = 9, RULE_block = 10, RULE_expression = 11, \r\n\t\tRULE_mul = 12, RULE_div = 13, RULE_add = 14, RULE_unaryadd = 15, RULE_unarysub = 16, \r\n\t\tRULE_sub = 17, RULE_comp = 18, RULE_constant = 19;\r\n\tpublic static readonly string[] ruleNames = {\r\n\t\t\"program\", \"line\", \"statement\", \"assignment\", \"funCall\", \"ifBlock\", \"elseifBlock\", \r\n\t\t\"elseBlock\", \"forBlock\", \"whileBlock\", \"block\", \"expression\", \"mul\", \"div\", \r\n\t\t\"add\", \"unaryadd\", \"unarysub\", \"sub\", \"comp\", \"constant\"\r\n\t};\r\n\r\n\tprivate static readonly string[] _LiteralNames = {\r\n\t\tnull, \"';'\", \"'='\", \"'('\", \"','\", \"')'\", \"'if'\", \"'ifend'\", \"'elseif'\", \r\n\t\t\"'else'\", \"'for'\", \"'forend'\", \"'while'\", \"'whileend'\", \"'!'\", \"'*'\", \r\n\t\t\"'/'\", \"'%'\", \"'+'\", \"'++'\", \"'--'\", \"'-'\", \"'=='\", \"'!='\", \"'>'\", \"'<'\", \r\n\t\t\"'<='\", \"'>='\", \"'print'\", null, null, null, null, \"'null'\"\r\n\t};\r\n\tprivate static readonly string[] _SymbolicNames = {\r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, \"PRINT\", \"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \r\n\t\t\"NULL\", \"IDENTIFIER\", \"COMMENT\", \"WS\"\r\n\t};\r\n\tpublic static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);\r\n\r\n\t[System.Obsolete(\"Use Vocabulary instead.\")]\r\n\tpublic static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);\r\n\r\n\tprivate static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {\r\n\t\tstring[] tokenNames = new string[length];\r\n\t\tfor (int i = 0; i < tokenNames.Length; i++) {\r\n\t\t\ttokenNames[i] = vocabulary.GetLiteralName(i);\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = vocabulary.GetSymbolicName(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = \"<INVALID>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokenNames;\r\n\t}\r\n\r\n\t[System.Obsolete(\"Use IRecognizer.Vocabulary instead.\")]\r\n\tpublic override string[] TokenNames\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn tokenNames;\r\n\t\t}\r\n\t}\r\n\r\n\t[NotNull]\r\n\tpublic override IVocabulary Vocabulary\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn DefaultVocabulary;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override string GrammarFileName { get { return \"c2022v2.g4\"; } }\r\n\r\n\tpublic override string[] RuleNames { get { return ruleNames; } }\r\n\r\n\tpublic override string SerializedAtn { get { return _serializedATN; } }\r\n\r\n\tpublic c2022v2Parser(ITokenStream input)\r\n\t\t: base(input)\r\n\t{\r\n\t\t_interp = new ParserATNSimulator(this,_ATN);\r\n\t}\r\n\tpublic partial class ProgramContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode Eof() { return GetToken(c2022v2Parser.Eof, 0); }\r\n\t\tpublic LineContext[] line() {\r\n\t\t\treturn GetRuleContexts<LineContext>();\r\n\t\t}\r\n\t\tpublic LineContext line(int i) {\r\n\t\t\treturn GetRuleContext<LineContext>(i);\r\n\t\t}\r\n\t\tpublic ProgramContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_program; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterProgram(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitProgram(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitProgram(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ProgramContext program() {\r\n\t\tProgramContext _localctx = new ProgramContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 0, RULE_program);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 43;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\twhile ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0)) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 40; line();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 45;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t}\r\n\t\t\tState = 46; Match(Eof);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class LineContext : ParserRuleContext {\r\n\t\tpublic StatementContext statement() {\r\n\t\t\treturn GetRuleContext<StatementContext>(0);\r\n\t\t}\r\n\t\tpublic IfBlockContext ifBlock() {\r\n\t\t\treturn GetRuleContext<IfBlockContext>(0);\r\n\t\t}\r\n\t\tpublic ForBlockContext forBlock() {\r\n\t\t\treturn GetRuleContext<ForBlockContext>(0);\r\n\t\t}\r\n\t\tpublic WhileBlockContext whileBlock() {\r\n\t\t\treturn GetRuleContext<WhileBlockContext>(0);\r\n\t\t}\r\n\t\tpublic LineContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_line; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterLine(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitLine(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitLine(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic LineContext line() {\r\n\t\tLineContext _localctx = new LineContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 2, RULE_line);\r\n\t\ttry {\r\n\t\t\tState = 52;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch (_input.La(1)) {\r\n\t\t\tcase PRINT:\r\n\t\t\tcase IDENTIFIER:\r\n\t\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t\t{\r\n\t\t\t\tState = 48; statement();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__5:\r\n\t\t\t\tEnterOuterAlt(_localctx, 2);\r\n\t\t\t\t{\r\n\t\t\t\tState = 49; ifBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__9:\r\n\t\t\t\tEnterOuterAlt(_localctx, 3);\r\n\t\t\t\t{\r\n\t\t\t\tState = 50; forBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase T__11:\r\n\t\t\t\tEnterOuterAlt(_localctx, 4);\r\n\t\t\t\t{\r\n\t\t\t\tState = 51; whileBlock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new NoViableAltException(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class StatementContext : ParserRuleContext {\r\n\t\tpublic AssignmentContext assignment() {\r\n\t\t\treturn GetRuleContext<AssignmentContext>(0);\r\n\t\t}\r\n\t\tpublic FunCallContext funCall() {\r\n\t\t\treturn GetRuleContext<FunCallContext>(0);\r\n\t\t}\r\n\t\tpublic StatementContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_statement; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterStatement(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitStatement(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitStatement(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic StatementContext statement() {\r\n\t\tStatementContext _localctx = new StatementContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 4, RULE_statement);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 56;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch ( Interpreter.AdaptivePredict(_input,2,_ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tState = 54; assignment();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tState = 55; funCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tState = 58; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class AssignmentContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic AssignmentContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_assignment; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterAssignment(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitAssignment(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitAssignment(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic AssignmentContext assignment() {\r\n\t\tAssignmentContext _localctx = new AssignmentContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 6, RULE_assignment);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 60; Match(IDENTIFIER);\r\n\t\t\tState = 61; Match(T__1);\r\n\t\t\tState = 62; expression(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class FunCallContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode PRINT() { return GetToken(c2022v2Parser.PRINT, 0); }\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic FunCallContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_funCall; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterFunCall(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitFunCall(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitFunCall(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic FunCallContext funCall() {\r\n\t\tFunCallContext _localctx = new FunCallContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 8, RULE_funCall);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 64;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !(_la==PRINT || _la==IDENTIFIER) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\tState = 65; Match(T__2);\r\n\t\t\tState = 74;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__13) | (1L << PRINT) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {\r\n\t\t\t\t{\r\n\t\t\t\tState = 66; expression(0);\r\n\t\t\t\tState = 71;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t\twhile (_la==T__3) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t{\r\n\t\t\t\t\tState = 67; Match(T__3);\r\n\t\t\t\t\tState = 68; expression(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tState = 73;\r\n\t\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t\t_la = _input.La(1);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tState = 76; Match(T__4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class IfBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ElseifBlockContext[] elseifBlock() {\r\n\t\t\treturn GetRuleContexts<ElseifBlockContext>();\r\n\t\t}\r\n\t\tpublic ElseifBlockContext elseifBlock(int i) {\r\n\t\t\treturn GetRuleContext<ElseifBlockContext>(i);\r\n\t\t}\r\n\t\tpublic ElseBlockContext elseBlock() {\r\n\t\t\treturn GetRuleContext<ElseBlockContext>(0);\r\n\t\t}\r\n\t\tpublic IfBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_ifBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterIfBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitIfBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitIfBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic IfBlockContext ifBlock() {\r\n\t\tIfBlockContext _localctx = new IfBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 10, RULE_ifBlock);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 78; Match(T__5);\r\n\t\t\tState = 79; Match(T__2);\r\n\t\t\tState = 80; expression(0);\r\n\t\t\tState = 81; Match(T__4);\r\n\t\t\tState = 82; block();\r\n\t\t\tState = 86;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\twhile (_la==T__7) {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 83; elseifBlock();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 88;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t}\r\n\t\t\tState = 90;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif (_la==T__8) {\r\n\t\t\t\t{\r\n\t\t\t\tState = 89; elseBlock();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tState = 92; Match(T__6);\r\n\t\t\tState = 93; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ElseifBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ElseifBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_elseifBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterElseifBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitElseifBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitElseifBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ElseifBlockContext elseifBlock() {\r\n\t\tElseifBlockContext _localctx = new ElseifBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 12, RULE_elseifBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 95; Match(T__7);\r\n\t\t\tState = 96; Match(T__2);\r\n\t\t\tState = 97; expression(0);\r\n\t\t\tState = 98; Match(T__4);\r\n\t\t\tState = 99; block();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ElseBlockContext : ParserRuleContext {\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ElseBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_elseBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterElseBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitElseBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitElseBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ElseBlockContext elseBlock() {\r\n\t\tElseBlockContext _localctx = new ElseBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 14, RULE_elseBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 101; Match(T__8);\r\n\t\t\tState = 102; block();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ForBlockContext : ParserRuleContext {\r\n\t\tpublic AssignmentContext assignment() {\r\n\t\t\treturn GetRuleContext<AssignmentContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic ForBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_forBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterForBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitForBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitForBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ForBlockContext forBlock() {\r\n\t\tForBlockContext _localctx = new ForBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 16, RULE_forBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 104; Match(T__9);\r\n\t\t\tState = 105; Match(T__2);\r\n\t\t\tState = 106; assignment();\r\n\t\t\tState = 107; Match(T__0);\r\n\t\t\tState = 108; expression(0);\r\n\t\t\tState = 109; Match(T__0);\r\n\t\t\tState = 110; expression(0);\r\n\t\t\tState = 111; Match(T__4);\r\n\t\t\tState = 112; block();\r\n\t\t\tState = 113; Match(T__10);\r\n\t\t\tState = 114; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class WhileBlockContext : ParserRuleContext {\r\n\t\tpublic ExpressionContext expression() {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(0);\r\n\t\t}\r\n\t\tpublic BlockContext block() {\r\n\t\t\treturn GetRuleContext<BlockContext>(0);\r\n\t\t}\r\n\t\tpublic WhileBlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_whileBlock; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterWhileBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitWhileBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitWhileBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic WhileBlockContext whileBlock() {\r\n\t\tWhileBlockContext _localctx = new WhileBlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 18, RULE_whileBlock);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 116; Match(T__11);\r\n\t\t\tState = 117; expression(0);\r\n\t\t\tState = 118; block();\r\n\t\t\tState = 119; Match(T__12);\r\n\t\t\tState = 120; Match(T__0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class BlockContext : ParserRuleContext {\r\n\t\tpublic LineContext[] line() {\r\n\t\t\treturn GetRuleContexts<LineContext>();\r\n\t\t}\r\n\t\tpublic LineContext line(int i) {\r\n\t\t\treturn GetRuleContext<LineContext>(i);\r\n\t\t}\r\n\t\tpublic BlockContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_block; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterBlock(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitBlock(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitBlock(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic BlockContext block() {\r\n\t\tBlockContext _localctx = new BlockContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 20, RULE_block);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 123;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tdo {\r\n\t\t\t\t{\r\n\t\t\t\t{\r\n\t\t\t\tState = 122; line();\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tState = 125;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_la = _input.La(1);\r\n\t\t\t} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0) );\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ExpressionContext : ParserRuleContext {\r\n\t\tpublic ConstantContext constant() {\r\n\t\t\treturn GetRuleContext<ConstantContext>(0);\r\n\t\t}\r\n\t\tpublic ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }\r\n\t\tpublic FunCallContext funCall() {\r\n\t\t\treturn GetRuleContext<FunCallContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext[] expression() {\r\n\t\t\treturn GetRuleContexts<ExpressionContext>();\r\n\t\t}\r\n\t\tpublic ExpressionContext expression(int i) {\r\n\t\t\treturn GetRuleContext<ExpressionContext>(i);\r\n\t\t}\r\n\t\tpublic CompContext comp() {\r\n\t\t\treturn GetRuleContext<CompContext>(0);\r\n\t\t}\r\n\t\tpublic MulContext mul() {\r\n\t\t\treturn GetRuleContext<MulContext>(0);\r\n\t\t}\r\n\t\tpublic DivContext div() {\r\n\t\t\treturn GetRuleContext<DivContext>(0);\r\n\t\t}\r\n\t\tpublic AddContext add() {\r\n\t\t\treturn GetRuleContext<AddContext>(0);\r\n\t\t}\r\n\t\tpublic SubContext sub() {\r\n\t\t\treturn GetRuleContext<SubContext>(0);\r\n\t\t}\r\n\t\tpublic UnaryaddContext unaryadd() {\r\n\t\t\treturn GetRuleContext<UnaryaddContext>(0);\r\n\t\t}\r\n\t\tpublic UnarysubContext unarysub() {\r\n\t\t\treturn GetRuleContext<UnarysubContext>(0);\r\n\t\t}\r\n\t\tpublic ExpressionContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_expression; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterExpression(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitExpression(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitExpression(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ExpressionContext expression() {\r\n\t\treturn expression(0);\r\n\t}\r\n\r\n\tprivate ExpressionContext expression(int _p) {\r\n\t\tParserRuleContext _parentctx = _ctx;\r\n\t\tint _parentState = State;\r\n\t\tExpressionContext _localctx = new ExpressionContext(_ctx, _parentState);\r\n\t\tExpressionContext _prevctx = _localctx;\r\n\t\tint _startState = 22;\r\n\t\tEnterRecursionRule(_localctx, 22, RULE_expression, _p);\r\n\t\ttry {\r\n\t\t\tint _alt;\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 137;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\tswitch ( Interpreter.AdaptivePredict(_input,8,_ctx) ) {\r\n\t\t\tcase 1:\r\n\t\t\t\t{\r\n\t\t\t\tState = 128; constant();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\t{\r\n\t\t\t\tState = 129; Match(IDENTIFIER);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\t{\r\n\t\t\t\tState = 130; funCall();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\t{\r\n\t\t\t\tState = 131; Match(T__2);\r\n\t\t\t\tState = 132; expression(0);\r\n\t\t\t\tState = 133; Match(T__4);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\t{\r\n\t\t\t\tState = 135; Match(T__13);\r\n\t\t\t\tState = 136; expression(8);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t_ctx.stop = _input.Lt(-1);\r\n\t\t\tState = 165;\r\n\t\t\t_errHandler.Sync(this);\r\n\t\t\t_alt = Interpreter.AdaptivePredict(_input,10,_ctx);\r\n\t\t\twhile ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber ) {\r\n\t\t\t\tif ( _alt==1 ) {\r\n\t\t\t\t\tif ( _parseListeners!=null ) TriggerExitRuleEvent();\r\n\t\t\t\t\t_prevctx = _localctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\tState = 163;\r\n\t\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t\tswitch ( Interpreter.AdaptivePredict(_input,9,_ctx) ) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 139;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 7))) throw new FailedPredicateException(this, \"Precpred(_ctx, 7)\");\r\n\t\t\t\t\t\tState = 140; comp();\r\n\t\t\t\t\t\tState = 141; expression(8);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 143;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 6))) throw new FailedPredicateException(this, \"Precpred(_ctx, 6)\");\r\n\t\t\t\t\t\tState = 144; mul();\r\n\t\t\t\t\t\tState = 145; expression(7);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 147;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, \"Precpred(_ctx, 5)\");\r\n\t\t\t\t\t\tState = 148; div();\r\n\t\t\t\t\t\tState = 149; expression(6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 151;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, \"Precpred(_ctx, 4)\");\r\n\t\t\t\t\t\tState = 152; add();\r\n\t\t\t\t\t\tState = 153; expression(5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 155;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, \"Precpred(_ctx, 3)\");\r\n\t\t\t\t\t\tState = 156; sub();\r\n\t\t\t\t\t\tState = 157; expression(4);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 159;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, \"Precpred(_ctx, 2)\");\r\n\t\t\t\t\t\tState = 160; unaryadd();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t_localctx = new ExpressionContext(_parentctx, _parentState);\r\n\t\t\t\t\t\tPushNewRecursionContext(_localctx, _startState, RULE_expression);\r\n\t\t\t\t\t\tState = 161;\r\n\t\t\t\t\t\tif (!(Precpred(_ctx, 1))) throw new FailedPredicateException(this, \"Precpred(_ctx, 1)\");\r\n\t\t\t\t\t\tState = 162; unarysub();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tState = 167;\r\n\t\t\t\t_errHandler.Sync(this);\r\n\t\t\t\t_alt = Interpreter.AdaptivePredict(_input,10,_ctx);\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tUnrollRecursionContexts(_parentctx);\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class MulContext : ParserRuleContext {\r\n\t\tpublic MulContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_mul; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterMul(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitMul(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitMul(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic MulContext mul() {\r\n\t\tMulContext _localctx = new MulContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 24, RULE_mul);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 168; Match(T__14);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class DivContext : ParserRuleContext {\r\n\t\tpublic DivContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_div; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterDiv(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitDiv(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitDiv(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic DivContext div() {\r\n\t\tDivContext _localctx = new DivContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 26, RULE_div);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 170;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !(_la==T__15 || _la==T__16) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class AddContext : ParserRuleContext {\r\n\t\tpublic AddContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_add; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterAdd(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitAdd(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitAdd(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic AddContext add() {\r\n\t\tAddContext _localctx = new AddContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 28, RULE_add);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 172; Match(T__17);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class UnaryaddContext : ParserRuleContext {\r\n\t\tpublic UnaryaddContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_unaryadd; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterUnaryadd(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitUnaryadd(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitUnaryadd(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic UnaryaddContext unaryadd() {\r\n\t\tUnaryaddContext _localctx = new UnaryaddContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 30, RULE_unaryadd);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 174; Match(T__18);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class UnarysubContext : ParserRuleContext {\r\n\t\tpublic UnarysubContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_unarysub; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterUnarysub(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitUnarysub(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitUnarysub(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic UnarysubContext unarysub() {\r\n\t\tUnarysubContext _localctx = new UnarysubContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 32, RULE_unarysub);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 176; Match(T__19);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class SubContext : ParserRuleContext {\r\n\t\tpublic SubContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_sub; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterSub(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitSub(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitSub(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic SubContext sub() {\r\n\t\tSubContext _localctx = new SubContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 34, RULE_sub);\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 178; Match(T__20);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class CompContext : ParserRuleContext {\r\n\t\tpublic CompContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_comp; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterComp(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitComp(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitComp(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic CompContext comp() {\r\n\t\tCompContext _localctx = new CompContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 36, RULE_comp);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 180;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__21) | (1L << T__22) | (1L << T__23) | (1L << T__24) | (1L << T__25) | (1L << T__26))) != 0)) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic partial class ConstantContext : ParserRuleContext {\r\n\t\tpublic ITerminalNode INTEGER() { return GetToken(c2022v2Parser.INTEGER, 0); }\r\n\t\tpublic ITerminalNode DOUBLE() { return GetToken(c2022v2Parser.DOUBLE, 0); }\r\n\t\tpublic ITerminalNode CHAR() { return GetToken(c2022v2Parser.CHAR, 0); }\r\n\t\tpublic ITerminalNode BOOL() { return GetToken(c2022v2Parser.BOOL, 0); }\r\n\t\tpublic ITerminalNode NULL() { return GetToken(c2022v2Parser.NULL, 0); }\r\n\t\tpublic ConstantContext(ParserRuleContext parent, int invokingState)\r\n\t\t\t: base(parent, invokingState)\r\n\t\t{\r\n\t\t}\r\n\t\tpublic override int RuleIndex { get { return RULE_constant; } }\r\n\t\tpublic override void EnterRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.EnterConstant(this);\r\n\t\t}\r\n\t\tpublic override void ExitRule(IParseTreeListener listener) {\r\n\t\t\tIc2022v2Listener typedListener = listener as Ic2022v2Listener;\r\n\t\t\tif (typedListener != null) typedListener.ExitConstant(this);\r\n\t\t}\r\n\t\tpublic override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {\r\n\t\t\tIc2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;\r\n\t\t\tif (typedVisitor != null) return typedVisitor.VisitConstant(this);\r\n\t\t\telse return visitor.VisitChildren(this);\r\n\t\t}\r\n\t}\r\n\r\n\t[RuleVersion(0)]\r\n\tpublic ConstantContext constant() {\r\n\t\tConstantContext _localctx = new ConstantContext(_ctx, State);\r\n\t\tEnterRule(_localctx, 38, RULE_constant);\r\n\t\tint _la;\r\n\t\ttry {\r\n\t\t\tEnterOuterAlt(_localctx, 1);\r\n\t\t\t{\r\n\t\t\tState = 182;\r\n\t\t\t_la = _input.La(1);\r\n\t\t\tif ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL))) != 0)) ) {\r\n\t\t\t_errHandler.RecoverInline(this);\r\n\t\t\t} else {\r\n\t\t\t\tif (_input.La(1) == TokenConstants.Eof) {\r\n\t\t\t\t\tmatchedEOF = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_errHandler.ReportMatch(this);\r\n\t\t\t\tConsume();\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (RecognitionException re) {\r\n\t\t\t_localctx.exception = re;\r\n\t\t\t_errHandler.ReportError(this, re);\r\n\t\t\t_errHandler.Recover(this, re);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tExitRule();\r\n\t\t}\r\n\t\treturn _localctx;\r\n\t}\r\n\r\n\tpublic override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {\r\n\t\tswitch (ruleIndex) {\r\n\t\tcase 11: return expression_sempred((ExpressionContext)_localctx, predIndex);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate bool expression_sempred(ExpressionContext _localctx, int predIndex) {\r\n\t\tswitch (predIndex) {\r\n\t\tcase 0: return Precpred(_ctx, 7);\r\n\r\n\t\tcase 1: return Precpred(_ctx, 6);\r\n\r\n\t\tcase 2: return Precpred(_ctx, 5);\r\n\r\n\t\tcase 3: return Precpred(_ctx, 4);\r\n\r\n\t\tcase 4: return Precpred(_ctx, 3);\r\n\r\n\t\tcase 5: return Precpred(_ctx, 2);\r\n\r\n\t\tcase 6: return Precpred(_ctx, 1);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static readonly string _serializedATN =\r\n\t\t\"\\x3\\xAF6F\\x8320\\x479D\\xB75C\\x4880\\x1605\\x191C\\xAB37\\x3&\\xBB\\x4\\x2\\t\\x2\"+\r\n\t\t\"\\x4\\x3\\t\\x3\\x4\\x4\\t\\x4\\x4\\x5\\t\\x5\\x4\\x6\\t\\x6\\x4\\a\\t\\a\\x4\\b\\t\\b\\x4\\t\\t\"+\r\n\t\t\"\\t\\x4\\n\\t\\n\\x4\\v\\t\\v\\x4\\f\\t\\f\\x4\\r\\t\\r\\x4\\xE\\t\\xE\\x4\\xF\\t\\xF\\x4\\x10\\t\"+\r\n\t\t\"\\x10\\x4\\x11\\t\\x11\\x4\\x12\\t\\x12\\x4\\x13\\t\\x13\\x4\\x14\\t\\x14\\x4\\x15\\t\\x15\"+\r\n\t\t\"\\x3\\x2\\a\\x2,\\n\\x2\\f\\x2\\xE\\x2/\\v\\x2\\x3\\x2\\x3\\x2\\x3\\x3\\x3\\x3\\x3\\x3\\x3\\x3\"+\r\n\t\t\"\\x5\\x3\\x37\\n\\x3\\x3\\x4\\x3\\x4\\x5\\x4;\\n\\x4\\x3\\x4\\x3\\x4\\x3\\x5\\x3\\x5\\x3\\x5\"+\r\n\t\t\"\\x3\\x5\\x3\\x6\\x3\\x6\\x3\\x6\\x3\\x6\\x3\\x6\\a\\x6H\\n\\x6\\f\\x6\\xE\\x6K\\v\\x6\\x5\\x6\"+\r\n\t\t\"M\\n\\x6\\x3\\x6\\x3\\x6\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\x3\\a\\a\\aW\\n\\a\\f\\a\\xE\\aZ\\v\"+\r\n\t\t\"\\a\\x3\\a\\x5\\a]\\n\\a\\x3\\a\\x3\\a\\x3\\a\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\t\\x3\"+\r\n\t\t\"\\t\\x3\\t\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\"+\r\n\t\t\"\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\v\\x3\\f\\x6\\f~\\n\\f\\r\\f\\xE\\f\\x7F\\x3\\r\\x3\\r\\x3\\r\"+\r\n\t\t\"\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x5\\r\\x8C\\n\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\"+\r\n\t\t\"\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\"+\r\n\t\t\"\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\a\\r\\xA6\\n\\r\\f\\r\\xE\\r\\xA9\\v\\r\\x3\\xE\\x3\\xE\\x3\"+\r\n\t\t\"\\xF\\x3\\xF\\x3\\x10\\x3\\x10\\x3\\x11\\x3\\x11\\x3\\x12\\x3\\x12\\x3\\x13\\x3\\x13\\x3\\x14\"+\r\n\t\t\"\\x3\\x14\\x3\\x15\\x3\\x15\\x3\\x15\\x2\\x2\\x3\\x18\\x16\\x2\\x2\\x4\\x2\\x6\\x2\\b\\x2\\n\"+\r\n\t\t\"\\x2\\f\\x2\\xE\\x2\\x10\\x2\\x12\\x2\\x14\\x2\\x16\\x2\\x18\\x2\\x1A\\x2\\x1C\\x2\\x1E\\x2\"+\r\n\t\t\" \\x2\\\"\\x2$\\x2&\\x2(\\x2\\x2\\x6\\x4\\x2\\x1E\\x1E$$\\x3\\x2\\x12\\x13\\x3\\x2\\x18\\x1D\"+\r\n\t\t\"\\x3\\x2\\x1F#\\xBB\\x2-\\x3\\x2\\x2\\x2\\x4\\x36\\x3\\x2\\x2\\x2\\x6:\\x3\\x2\\x2\\x2\\b>\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\n\\x42\\x3\\x2\\x2\\x2\\fP\\x3\\x2\\x2\\x2\\xE\\x61\\x3\\x2\\x2\\x2\\x10g\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x12j\\x3\\x2\\x2\\x2\\x14v\\x3\\x2\\x2\\x2\\x16}\\x3\\x2\\x2\\x2\\x18\\x8B\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x1A\\xAA\\x3\\x2\\x2\\x2\\x1C\\xAC\\x3\\x2\\x2\\x2\\x1E\\xAE\\x3\\x2\\x2\"+\r\n\t\t\"\\x2 \\xB0\\x3\\x2\\x2\\x2\\\"\\xB2\\x3\\x2\\x2\\x2$\\xB4\\x3\\x2\\x2\\x2&\\xB6\\x3\\x2\\x2\"+\r\n\t\t\"\\x2(\\xB8\\x3\\x2\\x2\\x2*,\\x5\\x4\\x3\\x2+*\\x3\\x2\\x2\\x2,/\\x3\\x2\\x2\\x2-+\\x3\\x2\"+\r\n\t\t\"\\x2\\x2-.\\x3\\x2\\x2\\x2.\\x30\\x3\\x2\\x2\\x2/-\\x3\\x2\\x2\\x2\\x30\\x31\\a\\x2\\x2\\x3\"+\r\n\t\t\"\\x31\\x3\\x3\\x2\\x2\\x2\\x32\\x37\\x5\\x6\\x4\\x2\\x33\\x37\\x5\\f\\a\\x2\\x34\\x37\\x5\\x12\"+\r\n\t\t\"\\n\\x2\\x35\\x37\\x5\\x14\\v\\x2\\x36\\x32\\x3\\x2\\x2\\x2\\x36\\x33\\x3\\x2\\x2\\x2\\x36\"+\r\n\t\t\"\\x34\\x3\\x2\\x2\\x2\\x36\\x35\\x3\\x2\\x2\\x2\\x37\\x5\\x3\\x2\\x2\\x2\\x38;\\x5\\b\\x5\\x2\"+\r\n\t\t\"\\x39;\\x5\\n\\x6\\x2:\\x38\\x3\\x2\\x2\\x2:\\x39\\x3\\x2\\x2\\x2;<\\x3\\x2\\x2\\x2<=\\a\\x3\"+\r\n\t\t\"\\x2\\x2=\\a\\x3\\x2\\x2\\x2>?\\a$\\x2\\x2?@\\a\\x4\\x2\\x2@\\x41\\x5\\x18\\r\\x2\\x41\\t\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x42\\x43\\t\\x2\\x2\\x2\\x43L\\a\\x5\\x2\\x2\\x44I\\x5\\x18\\r\\x2\\x45\\x46\"+\r\n\t\t\"\\a\\x6\\x2\\x2\\x46H\\x5\\x18\\r\\x2G\\x45\\x3\\x2\\x2\\x2HK\\x3\\x2\\x2\\x2IG\\x3\\x2\\x2\"+\r\n\t\t\"\\x2IJ\\x3\\x2\\x2\\x2JM\\x3\\x2\\x2\\x2KI\\x3\\x2\\x2\\x2L\\x44\\x3\\x2\\x2\\x2LM\\x3\\x2\"+\r\n\t\t\"\\x2\\x2MN\\x3\\x2\\x2\\x2NO\\a\\a\\x2\\x2O\\v\\x3\\x2\\x2\\x2PQ\\a\\b\\x2\\x2QR\\a\\x5\\x2\"+\r\n\t\t\"\\x2RS\\x5\\x18\\r\\x2ST\\a\\a\\x2\\x2TX\\x5\\x16\\f\\x2UW\\x5\\xE\\b\\x2VU\\x3\\x2\\x2\\x2\"+\r\n\t\t\"WZ\\x3\\x2\\x2\\x2XV\\x3\\x2\\x2\\x2XY\\x3\\x2\\x2\\x2Y\\\\\\x3\\x2\\x2\\x2ZX\\x3\\x2\\x2\\x2\"+\r\n\t\t\"[]\\x5\\x10\\t\\x2\\\\[\\x3\\x2\\x2\\x2\\\\]\\x3\\x2\\x2\\x2]^\\x3\\x2\\x2\\x2^_\\a\\t\\x2\\x2\"+\r\n\t\t\"_`\\a\\x3\\x2\\x2`\\r\\x3\\x2\\x2\\x2\\x61\\x62\\a\\n\\x2\\x2\\x62\\x63\\a\\x5\\x2\\x2\\x63\"+\r\n\t\t\"\\x64\\x5\\x18\\r\\x2\\x64\\x65\\a\\a\\x2\\x2\\x65\\x66\\x5\\x16\\f\\x2\\x66\\xF\\x3\\x2\\x2\"+\r\n\t\t\"\\x2gh\\a\\v\\x2\\x2hi\\x5\\x16\\f\\x2i\\x11\\x3\\x2\\x2\\x2jk\\a\\f\\x2\\x2kl\\a\\x5\\x2\\x2\"+\r\n\t\t\"lm\\x5\\b\\x5\\x2mn\\a\\x3\\x2\\x2no\\x5\\x18\\r\\x2op\\a\\x3\\x2\\x2pq\\x5\\x18\\r\\x2qr\"+\r\n\t\t\"\\a\\a\\x2\\x2rs\\x5\\x16\\f\\x2st\\a\\r\\x2\\x2tu\\a\\x3\\x2\\x2u\\x13\\x3\\x2\\x2\\x2vw\\a\"+\r\n\t\t\"\\xE\\x2\\x2wx\\x5\\x18\\r\\x2xy\\x5\\x16\\f\\x2yz\\a\\xF\\x2\\x2z{\\a\\x3\\x2\\x2{\\x15\\x3\"+\r\n\t\t\"\\x2\\x2\\x2|~\\x5\\x4\\x3\\x2}|\\x3\\x2\\x2\\x2~\\x7F\\x3\\x2\\x2\\x2\\x7F}\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x7F\\x80\\x3\\x2\\x2\\x2\\x80\\x17\\x3\\x2\\x2\\x2\\x81\\x82\\b\\r\\x1\\x2\\x82\\x8C\\x5\"+\r\n\t\t\"(\\x15\\x2\\x83\\x8C\\a$\\x2\\x2\\x84\\x8C\\x5\\n\\x6\\x2\\x85\\x86\\a\\x5\\x2\\x2\\x86\\x87\"+\r\n\t\t\"\\x5\\x18\\r\\x2\\x87\\x88\\a\\a\\x2\\x2\\x88\\x8C\\x3\\x2\\x2\\x2\\x89\\x8A\\a\\x10\\x2\\x2\"+\r\n\t\t\"\\x8A\\x8C\\x5\\x18\\r\\n\\x8B\\x81\\x3\\x2\\x2\\x2\\x8B\\x83\\x3\\x2\\x2\\x2\\x8B\\x84\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x8B\\x85\\x3\\x2\\x2\\x2\\x8B\\x89\\x3\\x2\\x2\\x2\\x8C\\xA7\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x8D\\x8E\\f\\t\\x2\\x2\\x8E\\x8F\\x5&\\x14\\x2\\x8F\\x90\\x5\\x18\\r\\n\\x90\\xA6\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x91\\x92\\f\\b\\x2\\x2\\x92\\x93\\x5\\x1A\\xE\\x2\\x93\\x94\\x5\\x18\\r\\t\\x94\\xA6\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x95\\x96\\f\\a\\x2\\x2\\x96\\x97\\x5\\x1C\\xF\\x2\\x97\\x98\\x5\\x18\\r\\b\"+\r\n\t\t\"\\x98\\xA6\\x3\\x2\\x2\\x2\\x99\\x9A\\f\\x6\\x2\\x2\\x9A\\x9B\\x5\\x1E\\x10\\x2\\x9B\\x9C\"+\r\n\t\t\"\\x5\\x18\\r\\a\\x9C\\xA6\\x3\\x2\\x2\\x2\\x9D\\x9E\\f\\x5\\x2\\x2\\x9E\\x9F\\x5$\\x13\\x2\"+\r\n\t\t\"\\x9F\\xA0\\x5\\x18\\r\\x6\\xA0\\xA6\\x3\\x2\\x2\\x2\\xA1\\xA2\\f\\x4\\x2\\x2\\xA2\\xA6\\x5\"+\r\n\t\t\" \\x11\\x2\\xA3\\xA4\\f\\x3\\x2\\x2\\xA4\\xA6\\x5\\\"\\x12\\x2\\xA5\\x8D\\x3\\x2\\x2\\x2\\xA5\"+\r\n\t\t\"\\x91\\x3\\x2\\x2\\x2\\xA5\\x95\\x3\\x2\\x2\\x2\\xA5\\x99\\x3\\x2\\x2\\x2\\xA5\\x9D\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xA5\\xA1\\x3\\x2\\x2\\x2\\xA5\\xA3\\x3\\x2\\x2\\x2\\xA6\\xA9\\x3\\x2\\x2\\x2\\xA7\"+\r\n\t\t\"\\xA5\\x3\\x2\\x2\\x2\\xA7\\xA8\\x3\\x2\\x2\\x2\\xA8\\x19\\x3\\x2\\x2\\x2\\xA9\\xA7\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xAA\\xAB\\a\\x11\\x2\\x2\\xAB\\x1B\\x3\\x2\\x2\\x2\\xAC\\xAD\\t\\x3\\x2\\x2\\xAD\"+\r\n\t\t\"\\x1D\\x3\\x2\\x2\\x2\\xAE\\xAF\\a\\x14\\x2\\x2\\xAF\\x1F\\x3\\x2\\x2\\x2\\xB0\\xB1\\a\\x15\"+\r\n\t\t\"\\x2\\x2\\xB1!\\x3\\x2\\x2\\x2\\xB2\\xB3\\a\\x16\\x2\\x2\\xB3#\\x3\\x2\\x2\\x2\\xB4\\xB5\\a\"+\r\n\t\t\"\\x17\\x2\\x2\\xB5%\\x3\\x2\\x2\\x2\\xB6\\xB7\\t\\x4\\x2\\x2\\xB7\\'\\x3\\x2\\x2\\x2\\xB8\\xB9\"+\r\n\t\t\"\\t\\x5\\x2\\x2\\xB9)\\x3\\x2\\x2\\x2\\r-\\x36:ILX\\\\\\x7F\\x8B\\xA5\\xA7\";\r\n\tpublic static readonly ATN _ATN =\r\n\t\tnew ATNDeserializer().Deserialize(_serializedATN.ToCharArray());\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs	(date 1653056072541)
@@ -8,7 +8,7 @@
 // </auto-generated>
 //------------------------------------------------------------------------------
 
-// Generated from D:\KTUOneDrive\OneDrive - Kaunas University of Technology\4pusmetis\Programavimo kalbÅ³ teorija\Compiler\CompilerC2022V2\Solution1\ConsoleApp1\Content\c2022v2.g4 by ANTLR 4.6.6
+// Generated from C:\Users\modes\OneDrive\Stalinis kompiuteris\Compuler\CompilerC2022V2\Solution1\ConsoleApp1\Content\c2022v2.g4 by ANTLR 4.6.6
 
 // Unreachable code detected
 #pragma warning disable 0162
@@ -33,32 +33,28 @@
 	public const int
 		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
 		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
-		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
-		T__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, 
-		BOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;
+		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, INTEGER=24, 
+		DOUBLE=25, CHAR=26, BOOL=27, NULL=28, IDENTIFIER=29, WS=30;
 	public const int
 		RULE_program = 0, RULE_line = 1, RULE_statement = 2, RULE_assignment = 3, 
-		RULE_funCall = 4, RULE_ifBlock = 5, RULE_elseifBlock = 6, RULE_elseBlock = 7, 
-		RULE_forBlock = 8, RULE_whileBlock = 9, RULE_block = 10, RULE_expression = 11, 
-		RULE_mul = 12, RULE_div = 13, RULE_add = 14, RULE_unaryadd = 15, RULE_unarysub = 16, 
-		RULE_sub = 17, RULE_comp = 18, RULE_constant = 19;
+		RULE_funCall = 4, RULE_ifBlock = 5, RULE_forBlock = 6, RULE_whileBlock = 7, 
+		RULE_block = 8, RULE_expression = 9, RULE_mul = 10, RULE_div = 11, RULE_add = 12, 
+		RULE_sub = 13, RULE_comp = 14, RULE_constant = 15;
 	public static readonly string[] ruleNames = {
-		"program", "line", "statement", "assignment", "funCall", "ifBlock", "elseifBlock", 
-		"elseBlock", "forBlock", "whileBlock", "block", "expression", "mul", "div", 
-		"add", "unaryadd", "unarysub", "sub", "comp", "constant"
+		"program", "line", "statement", "assignment", "funCall", "ifBlock", "forBlock", 
+		"whileBlock", "block", "expression", "mul", "div", "add", "sub", "comp", 
+		"constant"
 	};
 
 	private static readonly string[] _LiteralNames = {
-		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'elseif'", 
-		"'else'", "'for'", "'forend'", "'while'", "'whileend'", "'!'", "'*'", 
-		"'/'", "'%'", "'+'", "'++'", "'--'", "'-'", "'=='", "'!='", "'>'", "'<'", 
-		"'<='", "'>='", "'print'", null, null, null, null, "'null'"
+		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'for'", "'forend'", 
+		"'while'", "'whileend'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", 
+		"'!='", "'>'", "'<'", "'<='", "'>='", null, null, null, null, "'null'"
 	};
 	private static readonly string[] _SymbolicNames = {
 		null, null, null, null, null, null, null, null, null, null, null, null, 
 		null, null, null, null, null, null, null, null, null, null, null, null, 
-		null, null, null, null, "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", 
-		"NULL", "IDENTIFIER", "COMMENT", "WS"
+		"INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", "WS"
 	};
 	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);
 
@@ -146,20 +142,20 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 43;
+			State = 35;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
-			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0)) {
+			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__7) | (1L << T__9) | (1L << IDENTIFIER))) != 0)) {
 				{
 				{
-				State = 40; line();
+				State = 32; line();
 				}
 				}
-				State = 45;
+				State = 37;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 			}
-			State = 46; Match(Eof);
+			State = 38; Match(Eof);
 			}
 		}
 		catch (RecognitionException re) {
@@ -211,32 +207,31 @@
 		LineContext _localctx = new LineContext(_ctx, State);
 		EnterRule(_localctx, 2, RULE_line);
 		try {
-			State = 52;
+			State = 44;
 			_errHandler.Sync(this);
 			switch (_input.La(1)) {
-			case PRINT:
 			case IDENTIFIER:
 				EnterOuterAlt(_localctx, 1);
 				{
-				State = 48; statement();
+				State = 40; statement();
 				}
 				break;
 			case T__5:
 				EnterOuterAlt(_localctx, 2);
 				{
-				State = 49; ifBlock();
+				State = 41; ifBlock();
 				}
 				break;
-			case T__9:
+			case T__7:
 				EnterOuterAlt(_localctx, 3);
 				{
-				State = 50; forBlock();
+				State = 42; forBlock();
 				}
 				break;
-			case T__11:
+			case T__9:
 				EnterOuterAlt(_localctx, 4);
 				{
-				State = 51; whileBlock();
+				State = 43; whileBlock();
 				}
 				break;
 			default:
@@ -288,22 +283,22 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 56;
+			State = 48;
 			_errHandler.Sync(this);
 			switch ( Interpreter.AdaptivePredict(_input,2,_ctx) ) {
 			case 1:
 				{
-				State = 54; assignment();
+				State = 46; assignment();
 				}
 				break;
 
 			case 2:
 				{
-				State = 55; funCall();
+				State = 47; funCall();
 				}
 				break;
 			}
-			State = 58; Match(T__0);
+			State = 50; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -349,9 +344,9 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 60; Match(IDENTIFIER);
-			State = 61; Match(T__1);
-			State = 62; expression(0);
+			State = 52; Match(IDENTIFIER);
+			State = 53; Match(T__1);
+			State = 54; expression(0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -366,7 +361,6 @@
 	}
 
 	public partial class FunCallContext : ParserRuleContext {
-		public ITerminalNode PRINT() { return GetToken(c2022v2Parser.PRINT, 0); }
 		public ITerminalNode IDENTIFIER() { return GetToken(c2022v2Parser.IDENTIFIER, 0); }
 		public ExpressionContext[] expression() {
 			return GetRuleContexts<ExpressionContext>();
@@ -402,43 +396,32 @@
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 64;
-			_la = _input.La(1);
-			if ( !(_la==PRINT || _la==IDENTIFIER) ) {
-			_errHandler.RecoverInline(this);
-			} else {
-				if (_input.La(1) == TokenConstants.Eof) {
-					matchedEOF = true;
-				}
-
-				_errHandler.ReportMatch(this);
-				Consume();
-			}
-			State = 65; Match(T__2);
-			State = 74;
+			State = 56; Match(IDENTIFIER);
+			State = 57; Match(T__2);
+			State = 66;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
-			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__13) | (1L << PRINT) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {
+			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__2) | (1L << T__11) | (1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL) | (1L << IDENTIFIER))) != 0)) {
 				{
-				State = 66; expression(0);
-				State = 71;
+				State = 58; expression(0);
+				State = 63;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
 				while (_la==T__3) {
 					{
 					{
-					State = 67; Match(T__3);
-					State = 68; expression(0);
+					State = 59; Match(T__3);
+					State = 60; expression(0);
 					}
 					}
-					State = 73;
+					State = 65;
 					_errHandler.Sync(this);
 					_la = _input.La(1);
 				}
 				}
 			}
 
-			State = 76; Match(T__4);
+			State = 68; Match(T__4);
 			}
 		}
 		catch (RecognitionException re) {
@@ -459,15 +442,6 @@
 		public BlockContext block() {
 			return GetRuleContext<BlockContext>(0);
 		}
-		public ElseifBlockContext[] elseifBlock() {
-			return GetRuleContexts<ElseifBlockContext>();
-		}
-		public ElseifBlockContext elseifBlock(int i) {
-			return GetRuleContext<ElseifBlockContext>(i);
-		}
-		public ElseBlockContext elseBlock() {
-			return GetRuleContext<ElseBlockContext>(0);
-		}
 		public IfBlockContext(ParserRuleContext parent, int invokingState)
 			: base(parent, invokingState)
 		{
@@ -492,137 +466,16 @@
 	public IfBlockContext ifBlock() {
 		IfBlockContext _localctx = new IfBlockContext(_ctx, State);
 		EnterRule(_localctx, 10, RULE_ifBlock);
-		int _la;
-		try {
-			EnterOuterAlt(_localctx, 1);
-			{
-			State = 78; Match(T__5);
-			State = 79; Match(T__2);
-			State = 80; expression(0);
-			State = 81; Match(T__4);
-			State = 82; block();
-			State = 86;
-			_errHandler.Sync(this);
-			_la = _input.La(1);
-			while (_la==T__7) {
-				{
-				{
-				State = 83; elseifBlock();
-				}
-				}
-				State = 88;
-				_errHandler.Sync(this);
-				_la = _input.La(1);
-			}
-			State = 90;
-			_errHandler.Sync(this);
-			_la = _input.La(1);
-			if (_la==T__8) {
-				{
-				State = 89; elseBlock();
-				}
-			}
-
-			State = 92; Match(T__6);
-			State = 93; Match(T__0);
-			}
-		}
-		catch (RecognitionException re) {
-			_localctx.exception = re;
-			_errHandler.ReportError(this, re);
-			_errHandler.Recover(this, re);
-		}
-		finally {
-			ExitRule();
-		}
-		return _localctx;
-	}
-
-	public partial class ElseifBlockContext : ParserRuleContext {
-		public ExpressionContext expression() {
-			return GetRuleContext<ExpressionContext>(0);
-		}
-		public BlockContext block() {
-			return GetRuleContext<BlockContext>(0);
-		}
-		public ElseifBlockContext(ParserRuleContext parent, int invokingState)
-			: base(parent, invokingState)
-		{
-		}
-		public override int RuleIndex { get { return RULE_elseifBlock; } }
-		public override void EnterRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.EnterElseifBlock(this);
-		}
-		public override void ExitRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.ExitElseifBlock(this);
-		}
-		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
-			Ic2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;
-			if (typedVisitor != null) return typedVisitor.VisitElseifBlock(this);
-			else return visitor.VisitChildren(this);
-		}
-	}
-
-	[RuleVersion(0)]
-	public ElseifBlockContext elseifBlock() {
-		ElseifBlockContext _localctx = new ElseifBlockContext(_ctx, State);
-		EnterRule(_localctx, 12, RULE_elseifBlock);
-		try {
-			EnterOuterAlt(_localctx, 1);
-			{
-			State = 95; Match(T__7);
-			State = 96; Match(T__2);
-			State = 97; expression(0);
-			State = 98; Match(T__4);
-			State = 99; block();
-			}
-		}
-		catch (RecognitionException re) {
-			_localctx.exception = re;
-			_errHandler.ReportError(this, re);
-			_errHandler.Recover(this, re);
-		}
-		finally {
-			ExitRule();
-		}
-		return _localctx;
-	}
-
-	public partial class ElseBlockContext : ParserRuleContext {
-		public BlockContext block() {
-			return GetRuleContext<BlockContext>(0);
-		}
-		public ElseBlockContext(ParserRuleContext parent, int invokingState)
-			: base(parent, invokingState)
-		{
-		}
-		public override int RuleIndex { get { return RULE_elseBlock; } }
-		public override void EnterRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.EnterElseBlock(this);
-		}
-		public override void ExitRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.ExitElseBlock(this);
-		}
-		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
-			Ic2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;
-			if (typedVisitor != null) return typedVisitor.VisitElseBlock(this);
-			else return visitor.VisitChildren(this);
-		}
-	}
-
-	[RuleVersion(0)]
-	public ElseBlockContext elseBlock() {
-		ElseBlockContext _localctx = new ElseBlockContext(_ctx, State);
-		EnterRule(_localctx, 14, RULE_elseBlock);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 101; Match(T__8);
-			State = 102; block();
+			State = 70; Match(T__5);
+			State = 71; Match(T__2);
+			State = 72; expression(0);
+			State = 73; Match(T__4);
+			State = 74; block();
+			State = 75; Match(T__6);
+			State = 76; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -672,21 +525,21 @@
 	[RuleVersion(0)]
 	public ForBlockContext forBlock() {
 		ForBlockContext _localctx = new ForBlockContext(_ctx, State);
-		EnterRule(_localctx, 16, RULE_forBlock);
+		EnterRule(_localctx, 12, RULE_forBlock);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 104; Match(T__9);
-			State = 105; Match(T__2);
-			State = 106; assignment();
-			State = 107; Match(T__0);
-			State = 108; expression(0);
-			State = 109; Match(T__0);
-			State = 110; expression(0);
-			State = 111; Match(T__4);
-			State = 112; block();
-			State = 113; Match(T__10);
-			State = 114; Match(T__0);
+			State = 78; Match(T__7);
+			State = 79; Match(T__2);
+			State = 80; assignment();
+			State = 81; Match(T__0);
+			State = 82; expression(0);
+			State = 83; Match(T__0);
+			State = 84; expression(0);
+			State = 85; Match(T__4);
+			State = 86; block();
+			State = 87; Match(T__8);
+			State = 88; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -730,15 +583,15 @@
 	[RuleVersion(0)]
 	public WhileBlockContext whileBlock() {
 		WhileBlockContext _localctx = new WhileBlockContext(_ctx, State);
-		EnterRule(_localctx, 18, RULE_whileBlock);
+		EnterRule(_localctx, 14, RULE_whileBlock);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 116; Match(T__11);
-			State = 117; expression(0);
-			State = 118; block();
-			State = 119; Match(T__12);
-			State = 120; Match(T__0);
+			State = 90; Match(T__9);
+			State = 91; expression(0);
+			State = 92; block();
+			State = 93; Match(T__10);
+			State = 94; Match(T__0);
 			}
 		}
 		catch (RecognitionException re) {
@@ -782,24 +635,24 @@
 	[RuleVersion(0)]
 	public BlockContext block() {
 		BlockContext _localctx = new BlockContext(_ctx, State);
-		EnterRule(_localctx, 20, RULE_block);
+		EnterRule(_localctx, 16, RULE_block);
 		int _la;
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 123;
+			State = 97;
 			_errHandler.Sync(this);
 			_la = _input.La(1);
 			do {
 				{
 				{
-				State = 122; line();
+				State = 96; line();
 				}
 				}
-				State = 125;
+				State = 99;
 				_errHandler.Sync(this);
 				_la = _input.La(1);
-			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__9) | (1L << T__11) | (1L << PRINT) | (1L << IDENTIFIER))) != 0) );
+			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__5) | (1L << T__7) | (1L << T__9) | (1L << IDENTIFIER))) != 0) );
 			}
 		}
 		catch (RecognitionException re) {
@@ -842,12 +695,6 @@
 		public SubContext sub() {
 			return GetRuleContext<SubContext>(0);
 		}
-		public UnaryaddContext unaryadd() {
-			return GetRuleContext<UnaryaddContext>(0);
-		}
-		public UnarysubContext unarysub() {
-			return GetRuleContext<UnarysubContext>(0);
-		}
 		public ExpressionContext(ParserRuleContext parent, int invokingState)
 			: base(parent, invokingState)
 		{
@@ -878,68 +725,68 @@
 		int _parentState = State;
 		ExpressionContext _localctx = new ExpressionContext(_ctx, _parentState);
 		ExpressionContext _prevctx = _localctx;
-		int _startState = 22;
-		EnterRecursionRule(_localctx, 22, RULE_expression, _p);
+		int _startState = 18;
+		EnterRecursionRule(_localctx, 18, RULE_expression, _p);
 		try {
 			int _alt;
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 137;
+			State = 111;
 			_errHandler.Sync(this);
-			switch ( Interpreter.AdaptivePredict(_input,8,_ctx) ) {
+			switch ( Interpreter.AdaptivePredict(_input,6,_ctx) ) {
 			case 1:
 				{
-				State = 128; constant();
+				State = 102; constant();
 				}
 				break;
 
 			case 2:
 				{
-				State = 129; Match(IDENTIFIER);
+				State = 103; Match(IDENTIFIER);
 				}
 				break;
 
 			case 3:
 				{
-				State = 130; funCall();
+				State = 104; funCall();
 				}
 				break;
 
 			case 4:
 				{
-				State = 131; Match(T__2);
-				State = 132; expression(0);
-				State = 133; Match(T__4);
+				State = 105; Match(T__2);
+				State = 106; expression(0);
+				State = 107; Match(T__4);
 				}
 				break;
 
 			case 5:
 				{
-				State = 135; Match(T__13);
-				State = 136; expression(8);
+				State = 109; Match(T__11);
+				State = 110; expression(6);
 				}
 				break;
 			}
 			_ctx.stop = _input.Lt(-1);
-			State = 165;
+			State = 135;
 			_errHandler.Sync(this);
-			_alt = Interpreter.AdaptivePredict(_input,10,_ctx);
+			_alt = Interpreter.AdaptivePredict(_input,8,_ctx);
 			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber ) {
 				if ( _alt==1 ) {
 					if ( _parseListeners!=null ) TriggerExitRuleEvent();
 					_prevctx = _localctx;
 					{
-					State = 163;
+					State = 133;
 					_errHandler.Sync(this);
-					switch ( Interpreter.AdaptivePredict(_input,9,_ctx) ) {
+					switch ( Interpreter.AdaptivePredict(_input,7,_ctx) ) {
 					case 1:
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 139;
-						if (!(Precpred(_ctx, 7))) throw new FailedPredicateException(this, "Precpred(_ctx, 7)");
-						State = 140; comp();
-						State = 141; expression(8);
+						State = 113;
+						if (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, "Precpred(_ctx, 5)");
+						State = 114; comp();
+						State = 115; expression(6);
 						}
 						break;
 
@@ -947,10 +794,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 143;
-						if (!(Precpred(_ctx, 6))) throw new FailedPredicateException(this, "Precpred(_ctx, 6)");
-						State = 144; mul();
-						State = 145; expression(7);
+						State = 117;
+						if (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, "Precpred(_ctx, 4)");
+						State = 118; mul();
+						State = 119; expression(5);
 						}
 						break;
 
@@ -958,10 +805,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 147;
-						if (!(Precpred(_ctx, 5))) throw new FailedPredicateException(this, "Precpred(_ctx, 5)");
-						State = 148; div();
-						State = 149; expression(6);
+						State = 121;
+						if (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, "Precpred(_ctx, 3)");
+						State = 122; div();
+						State = 123; expression(4);
 						}
 						break;
 
@@ -969,10 +816,10 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 151;
-						if (!(Precpred(_ctx, 4))) throw new FailedPredicateException(this, "Precpred(_ctx, 4)");
-						State = 152; add();
-						State = 153; expression(5);
+						State = 125;
+						if (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, "Precpred(_ctx, 2)");
+						State = 126; add();
+						State = 127; expression(3);
 						}
 						break;
 
@@ -980,38 +827,18 @@
 						{
 						_localctx = new ExpressionContext(_parentctx, _parentState);
 						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 155;
-						if (!(Precpred(_ctx, 3))) throw new FailedPredicateException(this, "Precpred(_ctx, 3)");
-						State = 156; sub();
-						State = 157; expression(4);
-						}
-						break;
-
-					case 6:
-						{
-						_localctx = new ExpressionContext(_parentctx, _parentState);
-						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 159;
-						if (!(Precpred(_ctx, 2))) throw new FailedPredicateException(this, "Precpred(_ctx, 2)");
-						State = 160; unaryadd();
-						}
-						break;
-
-					case 7:
-						{
-						_localctx = new ExpressionContext(_parentctx, _parentState);
-						PushNewRecursionContext(_localctx, _startState, RULE_expression);
-						State = 161;
+						State = 129;
 						if (!(Precpred(_ctx, 1))) throw new FailedPredicateException(this, "Precpred(_ctx, 1)");
-						State = 162; unarysub();
+						State = 130; sub();
+						State = 131; expression(2);
 						}
 						break;
 					}
 					} 
 				}
-				State = 167;
+				State = 137;
 				_errHandler.Sync(this);
-				_alt = Interpreter.AdaptivePredict(_input,10,_ctx);
+				_alt = Interpreter.AdaptivePredict(_input,8,_ctx);
 			}
 			}
 		}
@@ -1050,11 +877,11 @@
 	[RuleVersion(0)]
 	public MulContext mul() {
 		MulContext _localctx = new MulContext(_ctx, State);
-		EnterRule(_localctx, 24, RULE_mul);
+		EnterRule(_localctx, 20, RULE_mul);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 168; Match(T__14);
+			State = 138; Match(T__12);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1092,14 +919,14 @@
 	[RuleVersion(0)]
 	public DivContext div() {
 		DivContext _localctx = new DivContext(_ctx, State);
-		EnterRule(_localctx, 26, RULE_div);
+		EnterRule(_localctx, 22, RULE_div);
 		int _la;
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 170;
+			State = 140;
 			_la = _input.La(1);
-			if ( !(_la==T__15 || _la==T__16) ) {
+			if ( !(_la==T__13 || _la==T__14) ) {
 			_errHandler.RecoverInline(this);
 			} else {
 				if (_input.La(1) == TokenConstants.Eof) {
@@ -1146,95 +973,11 @@
 	[RuleVersion(0)]
 	public AddContext add() {
 		AddContext _localctx = new AddContext(_ctx, State);
-		EnterRule(_localctx, 28, RULE_add);
-		try {
-			EnterOuterAlt(_localctx, 1);
-			{
-			State = 172; Match(T__17);
-			}
-		}
-		catch (RecognitionException re) {
-			_localctx.exception = re;
-			_errHandler.ReportError(this, re);
-			_errHandler.Recover(this, re);
-		}
-		finally {
-			ExitRule();
-		}
-		return _localctx;
-	}
-
-	public partial class UnaryaddContext : ParserRuleContext {
-		public UnaryaddContext(ParserRuleContext parent, int invokingState)
-			: base(parent, invokingState)
-		{
-		}
-		public override int RuleIndex { get { return RULE_unaryadd; } }
-		public override void EnterRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.EnterUnaryadd(this);
-		}
-		public override void ExitRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.ExitUnaryadd(this);
-		}
-		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
-			Ic2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;
-			if (typedVisitor != null) return typedVisitor.VisitUnaryadd(this);
-			else return visitor.VisitChildren(this);
-		}
-	}
-
-	[RuleVersion(0)]
-	public UnaryaddContext unaryadd() {
-		UnaryaddContext _localctx = new UnaryaddContext(_ctx, State);
-		EnterRule(_localctx, 30, RULE_unaryadd);
+		EnterRule(_localctx, 24, RULE_add);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 174; Match(T__18);
-			}
-		}
-		catch (RecognitionException re) {
-			_localctx.exception = re;
-			_errHandler.ReportError(this, re);
-			_errHandler.Recover(this, re);
-		}
-		finally {
-			ExitRule();
-		}
-		return _localctx;
-	}
-
-	public partial class UnarysubContext : ParserRuleContext {
-		public UnarysubContext(ParserRuleContext parent, int invokingState)
-			: base(parent, invokingState)
-		{
-		}
-		public override int RuleIndex { get { return RULE_unarysub; } }
-		public override void EnterRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.EnterUnarysub(this);
-		}
-		public override void ExitRule(IParseTreeListener listener) {
-			Ic2022v2Listener typedListener = listener as Ic2022v2Listener;
-			if (typedListener != null) typedListener.ExitUnarysub(this);
-		}
-		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
-			Ic2022v2Visitor<TResult> typedVisitor = visitor as Ic2022v2Visitor<TResult>;
-			if (typedVisitor != null) return typedVisitor.VisitUnarysub(this);
-			else return visitor.VisitChildren(this);
-		}
-	}
-
-	[RuleVersion(0)]
-	public UnarysubContext unarysub() {
-		UnarysubContext _localctx = new UnarysubContext(_ctx, State);
-		EnterRule(_localctx, 32, RULE_unarysub);
-		try {
-			EnterOuterAlt(_localctx, 1);
-			{
-			State = 176; Match(T__19);
+			State = 142; Match(T__15);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1272,11 +1015,11 @@
 	[RuleVersion(0)]
 	public SubContext sub() {
 		SubContext _localctx = new SubContext(_ctx, State);
-		EnterRule(_localctx, 34, RULE_sub);
+		EnterRule(_localctx, 26, RULE_sub);
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 178; Match(T__20);
+			State = 144; Match(T__16);
 			}
 		}
 		catch (RecognitionException re) {
@@ -1314,14 +1057,14 @@
 	[RuleVersion(0)]
 	public CompContext comp() {
 		CompContext _localctx = new CompContext(_ctx, State);
-		EnterRule(_localctx, 36, RULE_comp);
+		EnterRule(_localctx, 28, RULE_comp);
 		int _la;
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 180;
+			State = 146;
 			_la = _input.La(1);
-			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__21) | (1L << T__22) | (1L << T__23) | (1L << T__24) | (1L << T__25) | (1L << T__26))) != 0)) ) {
+			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__17) | (1L << T__18) | (1L << T__19) | (1L << T__20) | (1L << T__21) | (1L << T__22))) != 0)) ) {
 			_errHandler.RecoverInline(this);
 			} else {
 				if (_input.La(1) == TokenConstants.Eof) {
@@ -1373,12 +1116,12 @@
 	[RuleVersion(0)]
 	public ConstantContext constant() {
 		ConstantContext _localctx = new ConstantContext(_ctx, State);
-		EnterRule(_localctx, 38, RULE_constant);
+		EnterRule(_localctx, 30, RULE_constant);
 		int _la;
 		try {
 			EnterOuterAlt(_localctx, 1);
 			{
-			State = 182;
+			State = 148;
 			_la = _input.La(1);
 			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << INTEGER) | (1L << DOUBLE) | (1L << CHAR) | (1L << BOOL) | (1L << NULL))) != 0)) ) {
 			_errHandler.RecoverInline(this);
@@ -1405,94 +1148,77 @@
 
 	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
 		switch (ruleIndex) {
-		case 11: return expression_sempred((ExpressionContext)_localctx, predIndex);
+		case 9: return expression_sempred((ExpressionContext)_localctx, predIndex);
 		}
 		return true;
 	}
 	private bool expression_sempred(ExpressionContext _localctx, int predIndex) {
 		switch (predIndex) {
-		case 0: return Precpred(_ctx, 7);
-
-		case 1: return Precpred(_ctx, 6);
+		case 0: return Precpred(_ctx, 5);
 
-		case 2: return Precpred(_ctx, 5);
+		case 1: return Precpred(_ctx, 4);
 
-		case 3: return Precpred(_ctx, 4);
+		case 2: return Precpred(_ctx, 3);
 
-		case 4: return Precpred(_ctx, 3);
+		case 3: return Precpred(_ctx, 2);
 
-		case 5: return Precpred(_ctx, 2);
-
-		case 6: return Precpred(_ctx, 1);
+		case 4: return Precpred(_ctx, 1);
 		}
 		return true;
 	}
 
 	public static readonly string _serializedATN =
-		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3&\xBB\x4\x2\t\x2"+
+		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3 \x99\x4\x2\t\x2"+
 		"\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t"+
 		"\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t"+
-		"\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
-		"\x3\x2\a\x2,\n\x2\f\x2\xE\x2/\v\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3"+
-		"\x5\x3\x37\n\x3\x3\x4\x3\x4\x5\x4;\n\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5"+
-		"\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\a\x6H\n\x6\f\x6\xE\x6K\v\x6\x5\x6"+
-		"M\n\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\a\aW\n\a\f\a\xE\aZ\v"+
-		"\a\x3\a\x5\a]\n\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3"+
-		"\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
-		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x6\f~\n\f\r\f\xE\f\x7F\x3\r\x3\r\x3\r"+
-		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x5\r\x8C\n\r\x3\r\x3\r\x3\r\x3\r\x3"+
-		"\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3"+
-		"\r\x3\r\x3\r\x3\r\x3\r\x3\r\a\r\xA6\n\r\f\r\xE\r\xA9\v\r\x3\xE\x3\xE\x3"+
-		"\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14"+
-		"\x3\x14\x3\x15\x3\x15\x3\x15\x2\x2\x3\x18\x16\x2\x2\x4\x2\x6\x2\b\x2\n"+
-		"\x2\f\x2\xE\x2\x10\x2\x12\x2\x14\x2\x16\x2\x18\x2\x1A\x2\x1C\x2\x1E\x2"+
-		" \x2\"\x2$\x2&\x2(\x2\x2\x6\x4\x2\x1E\x1E$$\x3\x2\x12\x13\x3\x2\x18\x1D"+
-		"\x3\x2\x1F#\xBB\x2-\x3\x2\x2\x2\x4\x36\x3\x2\x2\x2\x6:\x3\x2\x2\x2\b>"+
-		"\x3\x2\x2\x2\n\x42\x3\x2\x2\x2\fP\x3\x2\x2\x2\xE\x61\x3\x2\x2\x2\x10g"+
-		"\x3\x2\x2\x2\x12j\x3\x2\x2\x2\x14v\x3\x2\x2\x2\x16}\x3\x2\x2\x2\x18\x8B"+
-		"\x3\x2\x2\x2\x1A\xAA\x3\x2\x2\x2\x1C\xAC\x3\x2\x2\x2\x1E\xAE\x3\x2\x2"+
-		"\x2 \xB0\x3\x2\x2\x2\"\xB2\x3\x2\x2\x2$\xB4\x3\x2\x2\x2&\xB6\x3\x2\x2"+
-		"\x2(\xB8\x3\x2\x2\x2*,\x5\x4\x3\x2+*\x3\x2\x2\x2,/\x3\x2\x2\x2-+\x3\x2"+
-		"\x2\x2-.\x3\x2\x2\x2.\x30\x3\x2\x2\x2/-\x3\x2\x2\x2\x30\x31\a\x2\x2\x3"+
-		"\x31\x3\x3\x2\x2\x2\x32\x37\x5\x6\x4\x2\x33\x37\x5\f\a\x2\x34\x37\x5\x12"+
-		"\n\x2\x35\x37\x5\x14\v\x2\x36\x32\x3\x2\x2\x2\x36\x33\x3\x2\x2\x2\x36"+
-		"\x34\x3\x2\x2\x2\x36\x35\x3\x2\x2\x2\x37\x5\x3\x2\x2\x2\x38;\x5\b\x5\x2"+
-		"\x39;\x5\n\x6\x2:\x38\x3\x2\x2\x2:\x39\x3\x2\x2\x2;<\x3\x2\x2\x2<=\a\x3"+
-		"\x2\x2=\a\x3\x2\x2\x2>?\a$\x2\x2?@\a\x4\x2\x2@\x41\x5\x18\r\x2\x41\t\x3"+
-		"\x2\x2\x2\x42\x43\t\x2\x2\x2\x43L\a\x5\x2\x2\x44I\x5\x18\r\x2\x45\x46"+
-		"\a\x6\x2\x2\x46H\x5\x18\r\x2G\x45\x3\x2\x2\x2HK\x3\x2\x2\x2IG\x3\x2\x2"+
-		"\x2IJ\x3\x2\x2\x2JM\x3\x2\x2\x2KI\x3\x2\x2\x2L\x44\x3\x2\x2\x2LM\x3\x2"+
-		"\x2\x2MN\x3\x2\x2\x2NO\a\a\x2\x2O\v\x3\x2\x2\x2PQ\a\b\x2\x2QR\a\x5\x2"+
-		"\x2RS\x5\x18\r\x2ST\a\a\x2\x2TX\x5\x16\f\x2UW\x5\xE\b\x2VU\x3\x2\x2\x2"+
-		"WZ\x3\x2\x2\x2XV\x3\x2\x2\x2XY\x3\x2\x2\x2Y\\\x3\x2\x2\x2ZX\x3\x2\x2\x2"+
-		"[]\x5\x10\t\x2\\[\x3\x2\x2\x2\\]\x3\x2\x2\x2]^\x3\x2\x2\x2^_\a\t\x2\x2"+
-		"_`\a\x3\x2\x2`\r\x3\x2\x2\x2\x61\x62\a\n\x2\x2\x62\x63\a\x5\x2\x2\x63"+
-		"\x64\x5\x18\r\x2\x64\x65\a\a\x2\x2\x65\x66\x5\x16\f\x2\x66\xF\x3\x2\x2"+
-		"\x2gh\a\v\x2\x2hi\x5\x16\f\x2i\x11\x3\x2\x2\x2jk\a\f\x2\x2kl\a\x5\x2\x2"+
-		"lm\x5\b\x5\x2mn\a\x3\x2\x2no\x5\x18\r\x2op\a\x3\x2\x2pq\x5\x18\r\x2qr"+
-		"\a\a\x2\x2rs\x5\x16\f\x2st\a\r\x2\x2tu\a\x3\x2\x2u\x13\x3\x2\x2\x2vw\a"+
-		"\xE\x2\x2wx\x5\x18\r\x2xy\x5\x16\f\x2yz\a\xF\x2\x2z{\a\x3\x2\x2{\x15\x3"+
-		"\x2\x2\x2|~\x5\x4\x3\x2}|\x3\x2\x2\x2~\x7F\x3\x2\x2\x2\x7F}\x3\x2\x2\x2"+
-		"\x7F\x80\x3\x2\x2\x2\x80\x17\x3\x2\x2\x2\x81\x82\b\r\x1\x2\x82\x8C\x5"+
-		"(\x15\x2\x83\x8C\a$\x2\x2\x84\x8C\x5\n\x6\x2\x85\x86\a\x5\x2\x2\x86\x87"+
-		"\x5\x18\r\x2\x87\x88\a\a\x2\x2\x88\x8C\x3\x2\x2\x2\x89\x8A\a\x10\x2\x2"+
-		"\x8A\x8C\x5\x18\r\n\x8B\x81\x3\x2\x2\x2\x8B\x83\x3\x2\x2\x2\x8B\x84\x3"+
-		"\x2\x2\x2\x8B\x85\x3\x2\x2\x2\x8B\x89\x3\x2\x2\x2\x8C\xA7\x3\x2\x2\x2"+
-		"\x8D\x8E\f\t\x2\x2\x8E\x8F\x5&\x14\x2\x8F\x90\x5\x18\r\n\x90\xA6\x3\x2"+
-		"\x2\x2\x91\x92\f\b\x2\x2\x92\x93\x5\x1A\xE\x2\x93\x94\x5\x18\r\t\x94\xA6"+
-		"\x3\x2\x2\x2\x95\x96\f\a\x2\x2\x96\x97\x5\x1C\xF\x2\x97\x98\x5\x18\r\b"+
-		"\x98\xA6\x3\x2\x2\x2\x99\x9A\f\x6\x2\x2\x9A\x9B\x5\x1E\x10\x2\x9B\x9C"+
-		"\x5\x18\r\a\x9C\xA6\x3\x2\x2\x2\x9D\x9E\f\x5\x2\x2\x9E\x9F\x5$\x13\x2"+
-		"\x9F\xA0\x5\x18\r\x6\xA0\xA6\x3\x2\x2\x2\xA1\xA2\f\x4\x2\x2\xA2\xA6\x5"+
-		" \x11\x2\xA3\xA4\f\x3\x2\x2\xA4\xA6\x5\"\x12\x2\xA5\x8D\x3\x2\x2\x2\xA5"+
-		"\x91\x3\x2\x2\x2\xA5\x95\x3\x2\x2\x2\xA5\x99\x3\x2\x2\x2\xA5\x9D\x3\x2"+
-		"\x2\x2\xA5\xA1\x3\x2\x2\x2\xA5\xA3\x3\x2\x2\x2\xA6\xA9\x3\x2\x2\x2\xA7"+
-		"\xA5\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2\xA8\x19\x3\x2\x2\x2\xA9\xA7\x3\x2"+
-		"\x2\x2\xAA\xAB\a\x11\x2\x2\xAB\x1B\x3\x2\x2\x2\xAC\xAD\t\x3\x2\x2\xAD"+
-		"\x1D\x3\x2\x2\x2\xAE\xAF\a\x14\x2\x2\xAF\x1F\x3\x2\x2\x2\xB0\xB1\a\x15"+
-		"\x2\x2\xB1!\x3\x2\x2\x2\xB2\xB3\a\x16\x2\x2\xB3#\x3\x2\x2\x2\xB4\xB5\a"+
-		"\x17\x2\x2\xB5%\x3\x2\x2\x2\xB6\xB7\t\x4\x2\x2\xB7\'\x3\x2\x2\x2\xB8\xB9"+
-		"\t\x5\x2\x2\xB9)\x3\x2\x2\x2\r-\x36:ILX\\\x7F\x8B\xA5\xA7";
+		"\x10\x4\x11\t\x11\x3\x2\a\x2$\n\x2\f\x2\xE\x2\'\v\x2\x3\x2\x3\x2\x3\x3"+
+		"\x3\x3\x3\x3\x3\x3\x5\x3/\n\x3\x3\x4\x3\x4\x5\x4\x33\n\x4\x3\x4\x3\x4"+
+		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\a\x6@\n\x6\f\x6"+
+		"\xE\x6\x43\v\x6\x5\x6\x45\n\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
+		"\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
+		"\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x6\n\x64\n\n\r\n\xE\n\x65\x3\v\x3"+
+		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x5\vr\n\v\x3\v\x3\v\x3\v\x3"+
+		"\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3"+
+		"\v\x3\v\x3\v\a\v\x88\n\v\f\v\xE\v\x8B\v\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3"+
+		"\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x2\x2\x3\x14\x12\x2"+
+		"\x2\x4\x2\x6\x2\b\x2\n\x2\f\x2\xE\x2\x10\x2\x12\x2\x14\x2\x16\x2\x18\x2"+
+		"\x1A\x2\x1C\x2\x1E\x2 \x2\x2\x5\x3\x2\x10\x11\x3\x2\x14\x19\x3\x2\x1A"+
+		"\x1E\x99\x2%\x3\x2\x2\x2\x4.\x3\x2\x2\x2\x6\x32\x3\x2\x2\x2\b\x36\x3\x2"+
+		"\x2\x2\n:\x3\x2\x2\x2\fH\x3\x2\x2\x2\xEP\x3\x2\x2\x2\x10\\\x3\x2\x2\x2"+
+		"\x12\x63\x3\x2\x2\x2\x14q\x3\x2\x2\x2\x16\x8C\x3\x2\x2\x2\x18\x8E\x3\x2"+
+		"\x2\x2\x1A\x90\x3\x2\x2\x2\x1C\x92\x3\x2\x2\x2\x1E\x94\x3\x2\x2\x2 \x96"+
+		"\x3\x2\x2\x2\"$\x5\x4\x3\x2#\"\x3\x2\x2\x2$\'\x3\x2\x2\x2%#\x3\x2\x2\x2"+
+		"%&\x3\x2\x2\x2&(\x3\x2\x2\x2\'%\x3\x2\x2\x2()\a\x2\x2\x3)\x3\x3\x2\x2"+
+		"\x2*/\x5\x6\x4\x2+/\x5\f\a\x2,/\x5\xE\b\x2-/\x5\x10\t\x2.*\x3\x2\x2\x2"+
+		".+\x3\x2\x2\x2.,\x3\x2\x2\x2.-\x3\x2\x2\x2/\x5\x3\x2\x2\x2\x30\x33\x5"+
+		"\b\x5\x2\x31\x33\x5\n\x6\x2\x32\x30\x3\x2\x2\x2\x32\x31\x3\x2\x2\x2\x33"+
+		"\x34\x3\x2\x2\x2\x34\x35\a\x3\x2\x2\x35\a\x3\x2\x2\x2\x36\x37\a\x1F\x2"+
+		"\x2\x37\x38\a\x4\x2\x2\x38\x39\x5\x14\v\x2\x39\t\x3\x2\x2\x2:;\a\x1F\x2"+
+		"\x2;\x44\a\x5\x2\x2<\x41\x5\x14\v\x2=>\a\x6\x2\x2>@\x5\x14\v\x2?=\x3\x2"+
+		"\x2\x2@\x43\x3\x2\x2\x2\x41?\x3\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42\x45\x3"+
+		"\x2\x2\x2\x43\x41\x3\x2\x2\x2\x44<\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2\x45"+
+		"\x46\x3\x2\x2\x2\x46G\a\a\x2\x2G\v\x3\x2\x2\x2HI\a\b\x2\x2IJ\a\x5\x2\x2"+
+		"JK\x5\x14\v\x2KL\a\a\x2\x2LM\x5\x12\n\x2MN\a\t\x2\x2NO\a\x3\x2\x2O\r\x3"+
+		"\x2\x2\x2PQ\a\n\x2\x2QR\a\x5\x2\x2RS\x5\b\x5\x2ST\a\x3\x2\x2TU\x5\x14"+
+		"\v\x2UV\a\x3\x2\x2VW\x5\x14\v\x2WX\a\a\x2\x2XY\x5\x12\n\x2YZ\a\v\x2\x2"+
+		"Z[\a\x3\x2\x2[\xF\x3\x2\x2\x2\\]\a\f\x2\x2]^\x5\x14\v\x2^_\x5\x12\n\x2"+
+		"_`\a\r\x2\x2`\x61\a\x3\x2\x2\x61\x11\x3\x2\x2\x2\x62\x64\x5\x4\x3\x2\x63"+
+		"\x62\x3\x2\x2\x2\x64\x65\x3\x2\x2\x2\x65\x63\x3\x2\x2\x2\x65\x66\x3\x2"+
+		"\x2\x2\x66\x13\x3\x2\x2\x2gh\b\v\x1\x2hr\x5 \x11\x2ir\a\x1F\x2\x2jr\x5"+
+		"\n\x6\x2kl\a\x5\x2\x2lm\x5\x14\v\x2mn\a\a\x2\x2nr\x3\x2\x2\x2op\a\xE\x2"+
+		"\x2pr\x5\x14\v\bqg\x3\x2\x2\x2qi\x3\x2\x2\x2qj\x3\x2\x2\x2qk\x3\x2\x2"+
+		"\x2qo\x3\x2\x2\x2r\x89\x3\x2\x2\x2st\f\a\x2\x2tu\x5\x1E\x10\x2uv\x5\x14"+
+		"\v\bv\x88\x3\x2\x2\x2wx\f\x6\x2\x2xy\x5\x16\f\x2yz\x5\x14\v\az\x88\x3"+
+		"\x2\x2\x2{|\f\x5\x2\x2|}\x5\x18\r\x2}~\x5\x14\v\x6~\x88\x3\x2\x2\x2\x7F"+
+		"\x80\f\x4\x2\x2\x80\x81\x5\x1A\xE\x2\x81\x82\x5\x14\v\x5\x82\x88\x3\x2"+
+		"\x2\x2\x83\x84\f\x3\x2\x2\x84\x85\x5\x1C\xF\x2\x85\x86\x5\x14\v\x4\x86"+
+		"\x88\x3\x2\x2\x2\x87s\x3\x2\x2\x2\x87w\x3\x2\x2\x2\x87{\x3\x2\x2\x2\x87"+
+		"\x7F\x3\x2\x2\x2\x87\x83\x3\x2\x2\x2\x88\x8B\x3\x2\x2\x2\x89\x87\x3\x2"+
+		"\x2\x2\x89\x8A\x3\x2\x2\x2\x8A\x15\x3\x2\x2\x2\x8B\x89\x3\x2\x2\x2\x8C"+
+		"\x8D\a\xF\x2\x2\x8D\x17\x3\x2\x2\x2\x8E\x8F\t\x2\x2\x2\x8F\x19\x3\x2\x2"+
+		"\x2\x90\x91\a\x12\x2\x2\x91\x1B\x3\x2\x2\x2\x92\x93\a\x13\x2\x2\x93\x1D"+
+		"\x3\x2\x2\x2\x94\x95\t\x3\x2\x2\x95\x1F\x3\x2\x2\x2\x96\x97\t\x4\x2\x2"+
+		"\x97!\x3\x2\x2\x2\v%.\x32\x41\x44\x65q\x87\x89";
 	public static readonly ATN _ATN =
 		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
 }
Index: .idea/.idea.Solution1/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile>ConsoleApp1/ConsoleApp1.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7a71278d-1cd7-486a-93e7-b09a716d6e25\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ref/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ref/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/refint/ConsoleApp1.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/refint/ConsoleApp1.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/f3b9684f72bc2cc435eb694f7cc86eca8c240d2d1cefa1e8697a61f1f2f27f/SafeFileHandle.Windows.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29PmUYAlJ7PmEiYQZpEIWlBgXjj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ConsoleApp1\" type=\"DotNetProject\" factoryName=\".NET Project\">\r\n      <option name=\"EXE_PATH\" value=\"\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/ConsoleApp1/ConsoleApp1.csproj\" />\r\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\r\n      <option name=\"PROJECT_TFM\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7a71278d-1cd7-486a-93e7-b09a716d6e25\" name=\"Changes\" comment=\"\" />\r\n      <created>1653023113611</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1653023113611</updated>\r\n      <workItem from=\"1653023118882\" duration=\"235000\" />\r\n      <workItem from=\"1653029894573\" duration=\"3566000\" />\r\n      <workItem from=\"1653033488614\" duration=\"1494000\" />\r\n      <workItem from=\"1653035006703\" duration=\"247000\" />\r\n      <workItem from=\"1653046092248\" duration=\"518000\" />\r\n      <workItem from=\"1653047072830\" duration=\"534000\" />\r\n      <workItem from=\"1653047736530\" duration=\"90000\" />\r\n      <workItem from=\"1653047844229\" duration=\"4058000\" />\r\n    </task>\r\n    <task id=\"LOCALâ00001\" summary=\"new\">\r\n      <created>1653023147518</created>\r\n      <option name=\"number\" value=\"LOCALâ00001\" />\r\n      <option name=\"presentableId\" value=\"LOCALâ00001\" />\r\n      <updated>1653023147518</updated>\r\n    </task>\r\n    <task id=\"LOCALâ00002\" summary=\"simple g4\">\r\n      <created>1653023251588</created>\r\n      <option name=\"number\" value=\"LOCALâ00002\" />\r\n      <option name=\"presentableId\" value=\"LOCALâ00002\" />\r\n      <updated>1653023251588</updated>\r\n    </task>\r\n    <task id=\"LOCALâ00003\" summary=\"start gramma\">\r\n      <created>1653031385198</created>\r\n      <option name=\"number\" value=\"LOCALâ00003\" />\r\n      <option name=\"presentableId\" value=\"LOCALâ00003\" />\r\n      <updated>1653031385198</updated>\r\n    </task>\r\n    <task id=\"LOCALâ00004\" summary=\".\">\r\n      <created>1653033664149</created>\r\n      <option name=\"number\" value=\"LOCALâ00004\" />\r\n      <option name=\"presentableId\" value=\"LOCALâ00004\" />\r\n      <updated>1653033664149</updated>\r\n    </task>\r\n    <task id=\"LOCALâ00005\" summary=\"new begining\">\r\n      <created>1653035202894</created>\r\n      <option name=\"number\" value=\"LOCALâ00005\" />\r\n      <option name=\"presentableId\" value=\"LOCALâ00005\" />\r\n      <updated>1653035202894</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"NUnit\" />\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n    <MESSAGE value=\"new\" />\r\n    <MESSAGE value=\"simple g4\" />\r\n    <MESSAGE value=\"start gramma\" />\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"new begining\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"new begining\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.Solution1/.idea/workspace.xml b/.idea/.idea.Solution1/.idea/workspace.xml
--- a/.idea/.idea.Solution1/.idea/workspace.xml	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/.idea/.idea.Solution1/.idea/workspace.xml	(date 1653057092872)
@@ -8,38 +8,20 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="7a71278d-1cd7-486a-93e7-b09a716d6e25" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/shelf/Uncommitted_changes_before_Update_at_2022-05-20_16_27__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/shelf/Uncommitted_changes_before_Update_at_2022-05-20_16_27__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Solution1/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/Content/c2022v2.g4" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/Content/test.c2022v2" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.exe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/ConsoleApp1.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/bin/Debug/net6.0/Content/test.c2022v2" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.dgspec.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/ConsoleApp1.csproj.nuget.g.props" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.GeneratedMSBuildEditorConfig.editorconfig" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.assets.cache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.Antlr4GeneratedCodeFileListAbsolute.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.csproj.CoreCompileInputs.cache" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.genruntimeconfig.cache" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ConsoleApp1.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/apphost.exe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseListener.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2BaseVisitor.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Listener.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Parser.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/c2022v2Visitor.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ref/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/ref/ConsoleApp1.dll" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/refint/ConsoleApp1.dll" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/refint/ConsoleApp1.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/project.assets.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/project.nuget.cache" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/project.packagespec.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info" beforeDir="false" afterPath="$PROJECT_DIR$/ConsoleApp1/obj/rider.project.restore.info" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -47,8 +29,14 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="HighlightingSettingsPerFile">
-    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/f3b9684f72bc2cc435eb694f7cc86eca8c240d2d1cefa1e8697a61f1f2f27f/SafeFileHandle.Windows.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/fd9722470dec41f1a857a84e3978f5b534200/31/4fc8b6fe/AbstractParseTreeVisitor`1.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/fd9722470dec41f1a857a84e3978f5b534200/31/6d725661/ParserRuleContext.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/fd9722470dec41f1a857a84e3978f5b534200/f6/f644c0c8/TerminalNodeImpl.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/ConsoleApp1/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://diff.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://diff.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://diff.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://diff.cs" root0="SKIP_HIGHLIGHTING" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -158,4 +146,16 @@
     <MESSAGE value="new begining" />
     <option name="LAST_COMMIT_MESSAGE" value="new begining" />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="DotNet Breakpoints">
+          <url>file://$PROJECT_DIR$/ConsoleApp1/c2022v2Visitor.cs</url>
+          <line>15</line>
+          <properties documentPath="D:\KTUOneDrive\OneDrive - Kaunas University of Technology\4pusmetis\Programavimo kalbÅ³ teorija\Compiler\CompilerC2022V2\Solution1\ConsoleApp1\c2022v2Visitor.cs" initialLine="15" containingFunctionPresentation="method 'VisitAssignment'" />
+          <option name="timeStamp" value="5" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>T__0=1\r\nT__1=2\r\nT__2=3\r\nT__3=4\r\nT__4=5\r\nT__5=6\r\nT__6=7\r\nT__7=8\r\nT__8=9\r\nT__9=10\r\nT__10=11\r\nT__11=12\r\nT__12=13\r\nT__13=14\r\nT__14=15\r\nT__15=16\r\nT__16=17\r\nT__17=18\r\nT__18=19\r\nT__19=20\r\nT__20=21\r\nT__21=22\r\nT__22=23\r\nT__23=24\r\nT__24=25\r\nT__25=26\r\nT__26=27\r\nPRINT=28\r\nINTEGER=29\r\nDOUBLE=30\r\nCHAR=31\r\nBOOL=32\r\nNULL=33\r\nIDENTIFIER=34\r\nCOMMENT=35\r\nWS=36\r\n';'=1\r\n'='=2\r\n'('=3\r\n','=4\r\n')'=5\r\n'if'=6\r\n'ifend'=7\r\n'elseif'=8\r\n'else'=9\r\n'for'=10\r\n'forend'=11\r\n'while'=12\r\n'whileend'=13\r\n'!'=14\r\n'*'=15\r\n'/'=16\r\n'%'=17\r\n'+'=18\r\n'++'=19\r\n'--'=20\r\n'-'=21\r\n'=='=22\r\n'!='=23\r\n'>'=24\r\n'<'=25\r\n'<='=26\r\n'>='=27\r\n'print'=28\r\n'null'=33\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens b/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2.tokens	(date 1653056094164)
@@ -21,19 +21,13 @@
 T__20=21
 T__21=22
 T__22=23
-T__23=24
-T__24=25
-T__25=26
-T__26=27
-PRINT=28
-INTEGER=29
-DOUBLE=30
-CHAR=31
-BOOL=32
-NULL=33
-IDENTIFIER=34
-COMMENT=35
-WS=36
+INTEGER=24
+DOUBLE=25
+CHAR=26
+BOOL=27
+NULL=28
+IDENTIFIER=29
+WS=30
 ';'=1
 '='=2
 '('=3
@@ -41,25 +35,20 @@
 ')'=5
 'if'=6
 'ifend'=7
-'elseif'=8
-'else'=9
-'for'=10
-'forend'=11
-'while'=12
-'whileend'=13
-'!'=14
-'*'=15
-'/'=16
-'%'=17
-'+'=18
-'++'=19
-'--'=20
-'-'=21
-'=='=22
-'!='=23
-'>'=24
-'<'=25
-'<='=26
-'>='=27
-'print'=28
-'null'=33
+'for'=8
+'forend'=9
+'while'=10
+'whileend'=11
+'!'=12
+'*'=13
+'/'=14
+'%'=15
+'+'=16
+'-'=17
+'=='=18
+'!='=19
+'>'=20
+'<'=21
+'<='=22
+'>='=23
+'null'=28
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>T__0=1\r\nT__1=2\r\nT__2=3\r\nT__3=4\r\nT__4=5\r\nT__5=6\r\nT__6=7\r\nT__7=8\r\nT__8=9\r\nT__9=10\r\nT__10=11\r\nT__11=12\r\nT__12=13\r\nT__13=14\r\nT__14=15\r\nT__15=16\r\nT__16=17\r\nT__17=18\r\nT__18=19\r\nT__19=20\r\nT__20=21\r\nT__21=22\r\nT__22=23\r\nT__23=24\r\nT__24=25\r\nT__25=26\r\nT__26=27\r\nPRINT=28\r\nINTEGER=29\r\nDOUBLE=30\r\nCHAR=31\r\nBOOL=32\r\nNULL=33\r\nIDENTIFIER=34\r\nCOMMENT=35\r\nWS=36\r\n';'=1\r\n'='=2\r\n'('=3\r\n','=4\r\n')'=5\r\n'if'=6\r\n'ifend'=7\r\n'elseif'=8\r\n'else'=9\r\n'for'=10\r\n'forend'=11\r\n'while'=12\r\n'whileend'=13\r\n'!'=14\r\n'*'=15\r\n'/'=16\r\n'%'=17\r\n'+'=18\r\n'++'=19\r\n'--'=20\r\n'-'=21\r\n'=='=22\r\n'!='=23\r\n'>'=24\r\n'<'=25\r\n'<='=26\r\n'>='=27\r\n'print'=28\r\n'null'=33\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.tokens	(date 1653056098628)
@@ -21,19 +21,13 @@
 T__20=21
 T__21=22
 T__22=23
-T__23=24
-T__24=25
-T__25=26
-T__26=27
-PRINT=28
-INTEGER=29
-DOUBLE=30
-CHAR=31
-BOOL=32
-NULL=33
-IDENTIFIER=34
-COMMENT=35
-WS=36
+INTEGER=24
+DOUBLE=25
+CHAR=26
+BOOL=27
+NULL=28
+IDENTIFIER=29
+WS=30
 ';'=1
 '='=2
 '('=3
@@ -41,25 +35,20 @@
 ')'=5
 'if'=6
 'ifend'=7
-'elseif'=8
-'else'=9
-'for'=10
-'forend'=11
-'while'=12
-'whileend'=13
-'!'=14
-'*'=15
-'/'=16
-'%'=17
-'+'=18
-'++'=19
-'--'=20
-'-'=21
-'=='=22
-'!='=23
-'>'=24
-'<'=25
-'<='=26
-'>='=27
-'print'=28
-'null'=33
+'for'=8
+'forend'=9
+'while'=10
+'whileend'=11
+'!'=12
+'*'=13
+'/'=14
+'%'=15
+'+'=16
+'-'=17
+'=='=18
+'!='=19
+'>'=20
+'<'=21
+'<='=22
+'>='=23
+'null'=28
Index: ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     ANTLR Version: 4.6.6\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n// Generated from D:\\KTUOneDrive\\OneDrive - Kaunas University of Technology\\4pusmetis\\Programavimo kalbÅ³ teorija\\Compiler\\CompilerC2022V2\\Solution1\\ConsoleApp1\\Content\\c2022v2.g4 by ANTLR 4.6.6\r\n\r\n// Unreachable code detected\r\n#pragma warning disable 0162\r\n// The variable '...' is assigned but its value is never used\r\n#pragma warning disable 0219\r\n// Missing XML comment for publicly visible type or member '...'\r\n#pragma warning disable 1591\r\n// Ambiguous reference in cref attribute\r\n#pragma warning disable 419\r\n\r\nnamespace ConsoleApp1.Content {\r\nusing Antlr4.Runtime;\r\nusing Antlr4.Runtime.Atn;\r\nusing Antlr4.Runtime.Misc;\r\nusing DFA = Antlr4.Runtime.Dfa.DFA;\r\n\r\n[System.CodeDom.Compiler.GeneratedCode(\"ANTLR\", \"4.6.6\")]\r\n[System.CLSCompliant(false)]\r\npublic partial class c2022v2Lexer : Lexer {\r\n\tpublic const int\r\n\t\tT__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, \r\n\t\tT__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, \r\n\t\tT__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, \r\n\t\tT__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, \r\n\t\tBOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;\r\n\tpublic static string[] modeNames = {\r\n\t\t\"DEFAULT_MODE\"\r\n\t};\r\n\r\n\tpublic static readonly string[] ruleNames = {\r\n\t\t\"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \"T__7\", \"T__8\", \r\n\t\t\"T__9\", \"T__10\", \"T__11\", \"T__12\", \"T__13\", \"T__14\", \"T__15\", \"T__16\", \r\n\t\t\"T__17\", \"T__18\", \"T__19\", \"T__20\", \"T__21\", \"T__22\", \"T__23\", \"T__24\", \r\n\t\t\"T__25\", \"T__26\", \"PRINT\", \"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \"NULL\", \r\n\t\t\"IDENTIFIER\", \"COMMENT\", \"WS\"\r\n\t};\r\n\r\n\r\n\tpublic c2022v2Lexer(ICharStream input)\r\n\t\t: base(input)\r\n\t{\r\n\t\t_interp = new LexerATNSimulator(this,_ATN);\r\n\t}\r\n\r\n\tprivate static readonly string[] _LiteralNames = {\r\n\t\tnull, \"';'\", \"'='\", \"'('\", \"','\", \"')'\", \"'if'\", \"'ifend'\", \"'elseif'\", \r\n\t\t\"'else'\", \"'for'\", \"'forend'\", \"'while'\", \"'whileend'\", \"'!'\", \"'*'\", \r\n\t\t\"'/'\", \"'%'\", \"'+'\", \"'++'\", \"'--'\", \"'-'\", \"'=='\", \"'!='\", \"'>'\", \"'<'\", \r\n\t\t\"'<='\", \"'>='\", \"'print'\", null, null, null, null, \"'null'\"\r\n\t};\r\n\tprivate static readonly string[] _SymbolicNames = {\r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \r\n\t\tnull, null, null, null, \"PRINT\", \"INTEGER\", \"DOUBLE\", \"CHAR\", \"BOOL\", \r\n\t\t\"NULL\", \"IDENTIFIER\", \"COMMENT\", \"WS\"\r\n\t};\r\n\tpublic static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);\r\n\r\n\t[System.Obsolete(\"Use Vocabulary instead.\")]\r\n\tpublic static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);\r\n\r\n\tprivate static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {\r\n\t\tstring[] tokenNames = new string[length];\r\n\t\tfor (int i = 0; i < tokenNames.Length; i++) {\r\n\t\t\ttokenNames[i] = vocabulary.GetLiteralName(i);\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = vocabulary.GetSymbolicName(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (tokenNames[i] == null) {\r\n\t\t\t\ttokenNames[i] = \"<INVALID>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokenNames;\r\n\t}\r\n\r\n\t[System.Obsolete(\"Use IRecognizer.Vocabulary instead.\")]\r\n\tpublic override string[] TokenNames\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn tokenNames;\r\n\t\t}\r\n\t}\r\n\r\n\t[NotNull]\r\n\tpublic override IVocabulary Vocabulary\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn DefaultVocabulary;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override string GrammarFileName { get { return \"c2022v2.g4\"; } }\r\n\r\n\tpublic override string[] RuleNames { get { return ruleNames; } }\r\n\r\n\tpublic override string[] ModeNames { get { return modeNames; } }\r\n\r\n\tpublic override string SerializedAtn { get { return _serializedATN; } }\r\n\r\n\tpublic static readonly string _serializedATN =\r\n\t\t\"\\x3\\xAF6F\\x8320\\x479D\\xB75C\\x4880\\x1605\\x191C\\xAB37\\x2&\\xF6\\b\\x1\\x4\\x2\"+\r\n\t\t\"\\t\\x2\\x4\\x3\\t\\x3\\x4\\x4\\t\\x4\\x4\\x5\\t\\x5\\x4\\x6\\t\\x6\\x4\\a\\t\\a\\x4\\b\\t\\b\\x4\"+\r\n\t\t\"\\t\\t\\t\\x4\\n\\t\\n\\x4\\v\\t\\v\\x4\\f\\t\\f\\x4\\r\\t\\r\\x4\\xE\\t\\xE\\x4\\xF\\t\\xF\\x4\\x10\"+\r\n\t\t\"\\t\\x10\\x4\\x11\\t\\x11\\x4\\x12\\t\\x12\\x4\\x13\\t\\x13\\x4\\x14\\t\\x14\\x4\\x15\\t\\x15\"+\r\n\t\t\"\\x4\\x16\\t\\x16\\x4\\x17\\t\\x17\\x4\\x18\\t\\x18\\x4\\x19\\t\\x19\\x4\\x1A\\t\\x1A\\x4\\x1B\"+\r\n\t\t\"\\t\\x1B\\x4\\x1C\\t\\x1C\\x4\\x1D\\t\\x1D\\x4\\x1E\\t\\x1E\\x4\\x1F\\t\\x1F\\x4 \\t \\x4!\"+\r\n\t\t\"\\t!\\x4\\\"\\t\\\"\\x4#\\t#\\x4$\\t$\\x4%\\t%\\x3\\x2\\x3\\x2\\x3\\x3\\x3\\x3\\x3\\x4\\x3\\x4\"+\r\n\t\t\"\\x3\\x5\\x3\\x5\\x3\\x6\\x3\\x6\\x3\\a\\x3\\a\\x3\\a\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\\x3\\b\"+\r\n\t\t\"\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\t\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\n\\x3\\v\\x3\\v\"+\r\n\t\t\"\\x3\\v\\x3\\v\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\f\\x3\\r\\x3\\r\\x3\\r\\x3\\r\\x3\\r\"+\r\n\t\t\"\\x3\\r\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xE\\x3\\xF\\x3\\xF\"+\r\n\t\t\"\\x3\\x10\\x3\\x10\\x3\\x11\\x3\\x11\\x3\\x12\\x3\\x12\\x3\\x13\\x3\\x13\\x3\\x14\\x3\\x14\"+\r\n\t\t\"\\x3\\x14\\x3\\x15\\x3\\x15\\x3\\x15\\x3\\x16\\x3\\x16\\x3\\x17\\x3\\x17\\x3\\x17\\x3\\x18\"+\r\n\t\t\"\\x3\\x18\\x3\\x18\\x3\\x19\\x3\\x19\\x3\\x1A\\x3\\x1A\\x3\\x1B\\x3\\x1B\\x3\\x1B\\x3\\x1C\"+\r\n\t\t\"\\x3\\x1C\\x3\\x1C\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1D\\x3\\x1E\\x6\\x1E\"+\r\n\t\t\"\\xAE\\n\\x1E\\r\\x1E\\xE\\x1E\\xAF\\x3\\x1F\\x6\\x1F\\xB3\\n\\x1F\\r\\x1F\\xE\\x1F\\xB4\\x3\"+\r\n\t\t\"\\x1F\\x3\\x1F\\x6\\x1F\\xB9\\n\\x1F\\r\\x1F\\xE\\x1F\\xBA\\x3 \\x3 \\x3 \\x3 \\x3!\\x3!\"+\r\n\t\t\"\\x3!\\x3!\\x3!\\x3!\\x3!\\x3!\\x3!\\x5!\\xCA\\n!\\x3\\\"\\x3\\\"\\x3\\\"\\x3\\\"\\x3\\\"\\x3#\\x3\"+\r\n\t\t\"#\\a#\\xD3\\n#\\f#\\xE#\\xD6\\v#\\x3$\\x3$\\x3$\\x3$\\a$\\xDC\\n$\\f$\\xE$\\xDF\\v$\\x3$\"+\r\n\t\t\"\\x3$\\x3$\\x3$\\a$\\xE5\\n$\\f$\\xE$\\xE8\\v$\\x3$\\x3$\\x5$\\xEC\\n$\\x3$\\x3$\\x3%\\x6\"+\r\n\t\t\"%\\xF1\\n%\\r%\\xE%\\xF2\\x3%\\x3%\\x3\\xE6\\x2\\x2&\\x3\\x2\\x3\\x5\\x2\\x4\\a\\x2\\x5\\t\"+\r\n\t\t\"\\x2\\x6\\v\\x2\\a\\r\\x2\\b\\xF\\x2\\t\\x11\\x2\\n\\x13\\x2\\v\\x15\\x2\\f\\x17\\x2\\r\\x19\\x2\"+\r\n\t\t\"\\xE\\x1B\\x2\\xF\\x1D\\x2\\x10\\x1F\\x2\\x11!\\x2\\x12#\\x2\\x13%\\x2\\x14\\'\\x2\\x15)\"+\r\n\t\t\"\\x2\\x16+\\x2\\x17-\\x2\\x18/\\x2\\x19\\x31\\x2\\x1A\\x33\\x2\\x1B\\x35\\x2\\x1C\\x37\\x2\"+\r\n\t\t\"\\x1D\\x39\\x2\\x1E;\\x2\\x1F=\\x2 ?\\x2!\\x41\\x2\\\"\\x43\\x2#\\x45\\x2$G\\x2%I\\x2&\\x3\"+\r\n\t\t\"\\x2\\b\\x3\\x2\\x32;\\x4\\x2\\x43\\\\\\x63|\\x5\\x2\\x43\\\\\\x61\\x61\\x63|\\x6\\x2\\x32;\"+\r\n\t\t\"\\x43\\\\\\x61\\x61\\x63|\\x4\\x2\\f\\f\\xF\\xF\\x5\\x2\\v\\f\\xF\\xF\\\"\\\"\\xFE\\x2\\x3\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x2\\x5\\x3\\x2\\x2\\x2\\x2\\a\\x3\\x2\\x2\\x2\\x2\\t\\x3\\x2\\x2\\x2\\x2\\v\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x2\\r\\x3\\x2\\x2\\x2\\x2\\xF\\x3\\x2\\x2\\x2\\x2\\x11\\x3\\x2\\x2\\x2\\x2\\x13\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\x2\\x15\\x3\\x2\\x2\\x2\\x2\\x17\\x3\\x2\\x2\\x2\\x2\\x19\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"\\x1B\\x3\\x2\\x2\\x2\\x2\\x1D\\x3\\x2\\x2\\x2\\x2\\x1F\\x3\\x2\\x2\\x2\\x2!\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x2#\\x3\\x2\\x2\\x2\\x2%\\x3\\x2\\x2\\x2\\x2\\'\\x3\\x2\\x2\\x2\\x2)\\x3\\x2\\x2\\x2\\x2+\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x2-\\x3\\x2\\x2\\x2\\x2/\\x3\\x2\\x2\\x2\\x2\\x31\\x3\\x2\\x2\\x2\\x2\\x33\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x2\\x35\\x3\\x2\\x2\\x2\\x2\\x37\\x3\\x2\\x2\\x2\\x2\\x39\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x2;\\x3\\x2\\x2\\x2\\x2=\\x3\\x2\\x2\\x2\\x2?\\x3\\x2\\x2\\x2\\x2\\x41\\x3\\x2\\x2\\x2\\x2\"+\r\n\t\t\"\\x43\\x3\\x2\\x2\\x2\\x2\\x45\\x3\\x2\\x2\\x2\\x2G\\x3\\x2\\x2\\x2\\x2I\\x3\\x2\\x2\\x2\\x3\"+\r\n\t\t\"K\\x3\\x2\\x2\\x2\\x5M\\x3\\x2\\x2\\x2\\aO\\x3\\x2\\x2\\x2\\tQ\\x3\\x2\\x2\\x2\\vS\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\rU\\x3\\x2\\x2\\x2\\xFX\\x3\\x2\\x2\\x2\\x11^\\x3\\x2\\x2\\x2\\x13\\x65\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x15j\\x3\\x2\\x2\\x2\\x17n\\x3\\x2\\x2\\x2\\x19u\\x3\\x2\\x2\\x2\\x1B{\\x3\\x2\\x2\\x2\\x1D\"+\r\n\t\t\"\\x84\\x3\\x2\\x2\\x2\\x1F\\x86\\x3\\x2\\x2\\x2!\\x88\\x3\\x2\\x2\\x2#\\x8A\\x3\\x2\\x2\\x2\"+\r\n\t\t\"%\\x8C\\x3\\x2\\x2\\x2\\'\\x8E\\x3\\x2\\x2\\x2)\\x91\\x3\\x2\\x2\\x2+\\x94\\x3\\x2\\x2\\x2\"+\r\n\t\t\"-\\x96\\x3\\x2\\x2\\x2/\\x99\\x3\\x2\\x2\\x2\\x31\\x9C\\x3\\x2\\x2\\x2\\x33\\x9E\\x3\\x2\\x2\"+\r\n\t\t\"\\x2\\x35\\xA0\\x3\\x2\\x2\\x2\\x37\\xA3\\x3\\x2\\x2\\x2\\x39\\xA6\\x3\\x2\\x2\\x2;\\xAD\\x3\"+\r\n\t\t\"\\x2\\x2\\x2=\\xB2\\x3\\x2\\x2\\x2?\\xBC\\x3\\x2\\x2\\x2\\x41\\xC9\\x3\\x2\\x2\\x2\\x43\\xCB\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\x45\\xD0\\x3\\x2\\x2\\x2G\\xEB\\x3\\x2\\x2\\x2I\\xF0\\x3\\x2\\x2\\x2KL\\a\"+\r\n\t\t\"=\\x2\\x2L\\x4\\x3\\x2\\x2\\x2MN\\a?\\x2\\x2N\\x6\\x3\\x2\\x2\\x2OP\\a*\\x2\\x2P\\b\\x3\\x2\"+\r\n\t\t\"\\x2\\x2QR\\a.\\x2\\x2R\\n\\x3\\x2\\x2\\x2ST\\a+\\x2\\x2T\\f\\x3\\x2\\x2\\x2UV\\ak\\x2\\x2\"+\r\n\t\t\"VW\\ah\\x2\\x2W\\xE\\x3\\x2\\x2\\x2XY\\ak\\x2\\x2YZ\\ah\\x2\\x2Z[\\ag\\x2\\x2[\\\\\\ap\\x2\"+\r\n\t\t\"\\x2\\\\]\\a\\x66\\x2\\x2]\\x10\\x3\\x2\\x2\\x2^_\\ag\\x2\\x2_`\\an\\x2\\x2`\\x61\\au\\x2\\x2\"+\r\n\t\t\"\\x61\\x62\\ag\\x2\\x2\\x62\\x63\\ak\\x2\\x2\\x63\\x64\\ah\\x2\\x2\\x64\\x12\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x65\\x66\\ag\\x2\\x2\\x66g\\an\\x2\\x2gh\\au\\x2\\x2hi\\ag\\x2\\x2i\\x14\\x3\\x2\\x2\\x2\"+\r\n\t\t\"jk\\ah\\x2\\x2kl\\aq\\x2\\x2lm\\at\\x2\\x2m\\x16\\x3\\x2\\x2\\x2no\\ah\\x2\\x2op\\aq\\x2\"+\r\n\t\t\"\\x2pq\\at\\x2\\x2qr\\ag\\x2\\x2rs\\ap\\x2\\x2st\\a\\x66\\x2\\x2t\\x18\\x3\\x2\\x2\\x2uv\"+\r\n\t\t\"\\ay\\x2\\x2vw\\aj\\x2\\x2wx\\ak\\x2\\x2xy\\an\\x2\\x2yz\\ag\\x2\\x2z\\x1A\\x3\\x2\\x2\\x2\"+\r\n\t\t\"{|\\ay\\x2\\x2|}\\aj\\x2\\x2}~\\ak\\x2\\x2~\\x7F\\an\\x2\\x2\\x7F\\x80\\ag\\x2\\x2\\x80\\x81\"+\r\n\t\t\"\\ag\\x2\\x2\\x81\\x82\\ap\\x2\\x2\\x82\\x83\\a\\x66\\x2\\x2\\x83\\x1C\\x3\\x2\\x2\\x2\\x84\"+\r\n\t\t\"\\x85\\a#\\x2\\x2\\x85\\x1E\\x3\\x2\\x2\\x2\\x86\\x87\\a,\\x2\\x2\\x87 \\x3\\x2\\x2\\x2\\x88\"+\r\n\t\t\"\\x89\\a\\x31\\x2\\x2\\x89\\\"\\x3\\x2\\x2\\x2\\x8A\\x8B\\a\\'\\x2\\x2\\x8B$\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\x8C\\x8D\\a-\\x2\\x2\\x8D&\\x3\\x2\\x2\\x2\\x8E\\x8F\\a-\\x2\\x2\\x8F\\x90\\a-\\x2\\x2\\x90\"+\r\n\t\t\"(\\x3\\x2\\x2\\x2\\x91\\x92\\a/\\x2\\x2\\x92\\x93\\a/\\x2\\x2\\x93*\\x3\\x2\\x2\\x2\\x94\\x95\"+\r\n\t\t\"\\a/\\x2\\x2\\x95,\\x3\\x2\\x2\\x2\\x96\\x97\\a?\\x2\\x2\\x97\\x98\\a?\\x2\\x2\\x98.\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\x99\\x9A\\a#\\x2\\x2\\x9A\\x9B\\a?\\x2\\x2\\x9B\\x30\\x3\\x2\\x2\\x2\\x9C\\x9D\\a\"+\r\n\t\t\"@\\x2\\x2\\x9D\\x32\\x3\\x2\\x2\\x2\\x9E\\x9F\\a>\\x2\\x2\\x9F\\x34\\x3\\x2\\x2\\x2\\xA0\\xA1\"+\r\n\t\t\"\\a>\\x2\\x2\\xA1\\xA2\\a?\\x2\\x2\\xA2\\x36\\x3\\x2\\x2\\x2\\xA3\\xA4\\a@\\x2\\x2\\xA4\\xA5\"+\r\n\t\t\"\\a?\\x2\\x2\\xA5\\x38\\x3\\x2\\x2\\x2\\xA6\\xA7\\ar\\x2\\x2\\xA7\\xA8\\at\\x2\\x2\\xA8\\xA9\"+\r\n\t\t\"\\ak\\x2\\x2\\xA9\\xAA\\ap\\x2\\x2\\xAA\\xAB\\av\\x2\\x2\\xAB:\\x3\\x2\\x2\\x2\\xAC\\xAE\\t\"+\r\n\t\t\"\\x2\\x2\\x2\\xAD\\xAC\\x3\\x2\\x2\\x2\\xAE\\xAF\\x3\\x2\\x2\\x2\\xAF\\xAD\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\xAF\\xB0\\x3\\x2\\x2\\x2\\xB0<\\x3\\x2\\x2\\x2\\xB1\\xB3\\t\\x2\\x2\\x2\\xB2\\xB1\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB3\\xB4\\x3\\x2\\x2\\x2\\xB4\\xB2\\x3\\x2\\x2\\x2\\xB4\\xB5\\x3\\x2\\x2\\x2\\xB5\"+\r\n\t\t\"\\xB6\\x3\\x2\\x2\\x2\\xB6\\xB8\\a\\x30\\x2\\x2\\xB7\\xB9\\t\\x2\\x2\\x2\\xB8\\xB7\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xB9\\xBA\\x3\\x2\\x2\\x2\\xBA\\xB8\\x3\\x2\\x2\\x2\\xBA\\xBB\\x3\\x2\\x2\\x2\\xBB\"+\r\n\t\t\">\\x3\\x2\\x2\\x2\\xBC\\xBD\\a)\\x2\\x2\\xBD\\xBE\\t\\x3\\x2\\x2\\xBE\\xBF\\a)\\x2\\x2\\xBF\"+\r\n\t\t\"@\\x3\\x2\\x2\\x2\\xC0\\xC1\\av\\x2\\x2\\xC1\\xC2\\at\\x2\\x2\\xC2\\xC3\\aw\\x2\\x2\\xC3\\xCA\"+\r\n\t\t\"\\ag\\x2\\x2\\xC4\\xC5\\ah\\x2\\x2\\xC5\\xC6\\a\\x63\\x2\\x2\\xC6\\xC7\\an\\x2\\x2\\xC7\\xC8\"+\r\n\t\t\"\\au\\x2\\x2\\xC8\\xCA\\ag\\x2\\x2\\xC9\\xC0\\x3\\x2\\x2\\x2\\xC9\\xC4\\x3\\x2\\x2\\x2\\xCA\"+\r\n\t\t\"\\x42\\x3\\x2\\x2\\x2\\xCB\\xCC\\ap\\x2\\x2\\xCC\\xCD\\aw\\x2\\x2\\xCD\\xCE\\an\\x2\\x2\\xCE\"+\r\n\t\t\"\\xCF\\an\\x2\\x2\\xCF\\x44\\x3\\x2\\x2\\x2\\xD0\\xD4\\t\\x4\\x2\\x2\\xD1\\xD3\\t\\x5\\x2\\x2\"+\r\n\t\t\"\\xD2\\xD1\\x3\\x2\\x2\\x2\\xD3\\xD6\\x3\\x2\\x2\\x2\\xD4\\xD2\\x3\\x2\\x2\\x2\\xD4\\xD5\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\xD5\\x46\\x3\\x2\\x2\\x2\\xD6\\xD4\\x3\\x2\\x2\\x2\\xD7\\xD8\\a\\x31\\x2\\x2\"+\r\n\t\t\"\\xD8\\xD9\\a\\x31\\x2\\x2\\xD9\\xDD\\x3\\x2\\x2\\x2\\xDA\\xDC\\n\\x6\\x2\\x2\\xDB\\xDA\\x3\"+\r\n\t\t\"\\x2\\x2\\x2\\xDC\\xDF\\x3\\x2\\x2\\x2\\xDD\\xDB\\x3\\x2\\x2\\x2\\xDD\\xDE\\x3\\x2\\x2\\x2\"+\r\n\t\t\"\\xDE\\xEC\\x3\\x2\\x2\\x2\\xDF\\xDD\\x3\\x2\\x2\\x2\\xE0\\xE1\\a\\x31\\x2\\x2\\xE1\\xE2\\a\"+\r\n\t\t\",\\x2\\x2\\xE2\\xE6\\x3\\x2\\x2\\x2\\xE3\\xE5\\v\\x2\\x2\\x2\\xE4\\xE3\\x3\\x2\\x2\\x2\\xE5\"+\r\n\t\t\"\\xE8\\x3\\x2\\x2\\x2\\xE6\\xE7\\x3\\x2\\x2\\x2\\xE6\\xE4\\x3\\x2\\x2\\x2\\xE7\\xE9\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xE8\\xE6\\x3\\x2\\x2\\x2\\xE9\\xEA\\a,\\x2\\x2\\xEA\\xEC\\a\\x31\\x2\\x2\\xEB\\xD7\"+\r\n\t\t\"\\x3\\x2\\x2\\x2\\xEB\\xE0\\x3\\x2\\x2\\x2\\xEC\\xED\\x3\\x2\\x2\\x2\\xED\\xEE\\b$\\x2\\x2\"+\r\n\t\t\"\\xEEH\\x3\\x2\\x2\\x2\\xEF\\xF1\\t\\a\\x2\\x2\\xF0\\xEF\\x3\\x2\\x2\\x2\\xF1\\xF2\\x3\\x2\"+\r\n\t\t\"\\x2\\x2\\xF2\\xF0\\x3\\x2\\x2\\x2\\xF2\\xF3\\x3\\x2\\x2\\x2\\xF3\\xF4\\x3\\x2\\x2\\x2\\xF4\"+\r\n\t\t\"\\xF5\\b%\\x2\\x2\\xF5J\\x3\\x2\\x2\\x2\\f\\x2\\xAF\\xB4\\xBA\\xC9\\xD4\\xDD\\xE6\\xEB\\xF2\"+\r\n\t\t\"\\x3\\b\\x2\\x2\";\r\n\tpublic static readonly ATN _ATN =\r\n\t\tnew ATNDeserializer().Deserialize(_serializedATN.ToCharArray());\r\n}\r\n} // namespace ConsoleApp1.Content\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs
--- a/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs	(revision 55b4cd1a087f776dad16c1d125510338781e968f)
+++ b/ConsoleApp1/obj/Debug/net6.0/c2022v2Lexer.cs	(date 1653056100797)
@@ -8,7 +8,7 @@
 // </auto-generated>
 //------------------------------------------------------------------------------
 
-// Generated from D:\KTUOneDrive\OneDrive - Kaunas University of Technology\4pusmetis\Programavimo kalbÅ³ teorija\Compiler\CompilerC2022V2\Solution1\ConsoleApp1\Content\c2022v2.g4 by ANTLR 4.6.6
+// Generated from C:\Users\modes\OneDrive\Stalinis kompiuteris\Compuler\CompilerC2022V2\Solution1\ConsoleApp1\Content\c2022v2.g4 by ANTLR 4.6.6
 
 // Unreachable code detected
 #pragma warning disable 0162
@@ -31,9 +31,8 @@
 	public const int
 		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
 		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
-		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
-		T__24=25, T__25=26, T__26=27, PRINT=28, INTEGER=29, DOUBLE=30, CHAR=31, 
-		BOOL=32, NULL=33, IDENTIFIER=34, COMMENT=35, WS=36;
+		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, INTEGER=24, 
+		DOUBLE=25, CHAR=26, BOOL=27, NULL=28, IDENTIFIER=29, WS=30;
 	public static string[] modeNames = {
 		"DEFAULT_MODE"
 	};
@@ -41,9 +40,8 @@
 	public static readonly string[] ruleNames = {
 		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
 		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
-		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
-		"T__25", "T__26", "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", 
-		"IDENTIFIER", "COMMENT", "WS"
+		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "INTEGER", "DOUBLE", 
+		"CHAR", "BOOL", "NULL", "IDENTIFIER", "WS"
 	};
 
 
@@ -54,16 +52,14 @@
 	}
 
 	private static readonly string[] _LiteralNames = {
-		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'elseif'", 
-		"'else'", "'for'", "'forend'", "'while'", "'whileend'", "'!'", "'*'", 
-		"'/'", "'%'", "'+'", "'++'", "'--'", "'-'", "'=='", "'!='", "'>'", "'<'", 
-		"'<='", "'>='", "'print'", null, null, null, null, "'null'"
+		null, "';'", "'='", "'('", "','", "')'", "'if'", "'ifend'", "'for'", "'forend'", 
+		"'while'", "'whileend'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", 
+		"'!='", "'>'", "'<'", "'<='", "'>='", null, null, null, null, "'null'"
 	};
 	private static readonly string[] _SymbolicNames = {
 		null, null, null, null, null, null, null, null, null, null, null, null, 
 		null, null, null, null, null, null, null, null, null, null, null, null, 
-		null, null, null, null, "PRINT", "INTEGER", "DOUBLE", "CHAR", "BOOL", 
-		"NULL", "IDENTIFIER", "COMMENT", "WS"
+		"INTEGER", "DOUBLE", "CHAR", "BOOL", "NULL", "IDENTIFIER", "WS"
 	};
 	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);
 
@@ -113,95 +109,73 @@
 	public override string SerializedAtn { get { return _serializedATN; } }
 
 	public static readonly string _serializedATN =
-		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\xF6\b\x1\x4\x2"+
+		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2 \xB8\b\x1\x4\x2"+
 		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
 		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
 		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
 		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
-		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
-		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4"+
-		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
-		"\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v"+
-		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r"+
-		"\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF"+
-		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14"+
-		"\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18"+
-		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C"+
-		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x6\x1E"+
-		"\xAE\n\x1E\r\x1E\xE\x1E\xAF\x3\x1F\x6\x1F\xB3\n\x1F\r\x1F\xE\x1F\xB4\x3"+
-		"\x1F\x3\x1F\x6\x1F\xB9\n\x1F\r\x1F\xE\x1F\xBA\x3 \x3 \x3 \x3 \x3!\x3!"+
-		"\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xCA\n!\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3"+
-		"#\a#\xD3\n#\f#\xE#\xD6\v#\x3$\x3$\x3$\x3$\a$\xDC\n$\f$\xE$\xDF\v$\x3$"+
-		"\x3$\x3$\x3$\a$\xE5\n$\f$\xE$\xE8\v$\x3$\x3$\x5$\xEC\n$\x3$\x3$\x3%\x6"+
-		"%\xF1\n%\r%\xE%\xF2\x3%\x3%\x3\xE6\x2\x2&\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
-		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2"+
-		"\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)"+
-		"\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2"+
-		"\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&\x3"+
-		"\x2\b\x3\x2\x32;\x4\x2\x43\\\x63|\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;"+
-		"\x43\\\x61\x61\x63|\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\xFE\x2\x3\x3\x2"+
-		"\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2"+
-		"\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3"+
-		"\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2"+
-		"\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2"+
-		"\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+"+
-		"\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
-		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
-		"\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2"+
-		"\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x3"+
-		"K\x3\x2\x2\x2\x5M\x3\x2\x2\x2\aO\x3\x2\x2\x2\tQ\x3\x2\x2\x2\vS\x3\x2\x2"+
-		"\x2\rU\x3\x2\x2\x2\xFX\x3\x2\x2\x2\x11^\x3\x2\x2\x2\x13\x65\x3\x2\x2\x2"+
-		"\x15j\x3\x2\x2\x2\x17n\x3\x2\x2\x2\x19u\x3\x2\x2\x2\x1B{\x3\x2\x2\x2\x1D"+
-		"\x84\x3\x2\x2\x2\x1F\x86\x3\x2\x2\x2!\x88\x3\x2\x2\x2#\x8A\x3\x2\x2\x2"+
-		"%\x8C\x3\x2\x2\x2\'\x8E\x3\x2\x2\x2)\x91\x3\x2\x2\x2+\x94\x3\x2\x2\x2"+
-		"-\x96\x3\x2\x2\x2/\x99\x3\x2\x2\x2\x31\x9C\x3\x2\x2\x2\x33\x9E\x3\x2\x2"+
-		"\x2\x35\xA0\x3\x2\x2\x2\x37\xA3\x3\x2\x2\x2\x39\xA6\x3\x2\x2\x2;\xAD\x3"+
-		"\x2\x2\x2=\xB2\x3\x2\x2\x2?\xBC\x3\x2\x2\x2\x41\xC9\x3\x2\x2\x2\x43\xCB"+
-		"\x3\x2\x2\x2\x45\xD0\x3\x2\x2\x2G\xEB\x3\x2\x2\x2I\xF0\x3\x2\x2\x2KL\a"+
-		"=\x2\x2L\x4\x3\x2\x2\x2MN\a?\x2\x2N\x6\x3\x2\x2\x2OP\a*\x2\x2P\b\x3\x2"+
-		"\x2\x2QR\a.\x2\x2R\n\x3\x2\x2\x2ST\a+\x2\x2T\f\x3\x2\x2\x2UV\ak\x2\x2"+
-		"VW\ah\x2\x2W\xE\x3\x2\x2\x2XY\ak\x2\x2YZ\ah\x2\x2Z[\ag\x2\x2[\\\ap\x2"+
-		"\x2\\]\a\x66\x2\x2]\x10\x3\x2\x2\x2^_\ag\x2\x2_`\an\x2\x2`\x61\au\x2\x2"+
-		"\x61\x62\ag\x2\x2\x62\x63\ak\x2\x2\x63\x64\ah\x2\x2\x64\x12\x3\x2\x2\x2"+
-		"\x65\x66\ag\x2\x2\x66g\an\x2\x2gh\au\x2\x2hi\ag\x2\x2i\x14\x3\x2\x2\x2"+
-		"jk\ah\x2\x2kl\aq\x2\x2lm\at\x2\x2m\x16\x3\x2\x2\x2no\ah\x2\x2op\aq\x2"+
-		"\x2pq\at\x2\x2qr\ag\x2\x2rs\ap\x2\x2st\a\x66\x2\x2t\x18\x3\x2\x2\x2uv"+
-		"\ay\x2\x2vw\aj\x2\x2wx\ak\x2\x2xy\an\x2\x2yz\ag\x2\x2z\x1A\x3\x2\x2\x2"+
-		"{|\ay\x2\x2|}\aj\x2\x2}~\ak\x2\x2~\x7F\an\x2\x2\x7F\x80\ag\x2\x2\x80\x81"+
-		"\ag\x2\x2\x81\x82\ap\x2\x2\x82\x83\a\x66\x2\x2\x83\x1C\x3\x2\x2\x2\x84"+
-		"\x85\a#\x2\x2\x85\x1E\x3\x2\x2\x2\x86\x87\a,\x2\x2\x87 \x3\x2\x2\x2\x88"+
-		"\x89\a\x31\x2\x2\x89\"\x3\x2\x2\x2\x8A\x8B\a\'\x2\x2\x8B$\x3\x2\x2\x2"+
-		"\x8C\x8D\a-\x2\x2\x8D&\x3\x2\x2\x2\x8E\x8F\a-\x2\x2\x8F\x90\a-\x2\x2\x90"+
-		"(\x3\x2\x2\x2\x91\x92\a/\x2\x2\x92\x93\a/\x2\x2\x93*\x3\x2\x2\x2\x94\x95"+
-		"\a/\x2\x2\x95,\x3\x2\x2\x2\x96\x97\a?\x2\x2\x97\x98\a?\x2\x2\x98.\x3\x2"+
-		"\x2\x2\x99\x9A\a#\x2\x2\x9A\x9B\a?\x2\x2\x9B\x30\x3\x2\x2\x2\x9C\x9D\a"+
-		"@\x2\x2\x9D\x32\x3\x2\x2\x2\x9E\x9F\a>\x2\x2\x9F\x34\x3\x2\x2\x2\xA0\xA1"+
-		"\a>\x2\x2\xA1\xA2\a?\x2\x2\xA2\x36\x3\x2\x2\x2\xA3\xA4\a@\x2\x2\xA4\xA5"+
-		"\a?\x2\x2\xA5\x38\x3\x2\x2\x2\xA6\xA7\ar\x2\x2\xA7\xA8\at\x2\x2\xA8\xA9"+
-		"\ak\x2\x2\xA9\xAA\ap\x2\x2\xAA\xAB\av\x2\x2\xAB:\x3\x2\x2\x2\xAC\xAE\t"+
-		"\x2\x2\x2\xAD\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2"+
-		"\xAF\xB0\x3\x2\x2\x2\xB0<\x3\x2\x2\x2\xB1\xB3\t\x2\x2\x2\xB2\xB1\x3\x2"+
-		"\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5"+
-		"\xB6\x3\x2\x2\x2\xB6\xB8\a\x30\x2\x2\xB7\xB9\t\x2\x2\x2\xB8\xB7\x3\x2"+
-		"\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB"+
-		">\x3\x2\x2\x2\xBC\xBD\a)\x2\x2\xBD\xBE\t\x3\x2\x2\xBE\xBF\a)\x2\x2\xBF"+
-		"@\x3\x2\x2\x2\xC0\xC1\av\x2\x2\xC1\xC2\at\x2\x2\xC2\xC3\aw\x2\x2\xC3\xCA"+
-		"\ag\x2\x2\xC4\xC5\ah\x2\x2\xC5\xC6\a\x63\x2\x2\xC6\xC7\an\x2\x2\xC7\xC8"+
-		"\au\x2\x2\xC8\xCA\ag\x2\x2\xC9\xC0\x3\x2\x2\x2\xC9\xC4\x3\x2\x2\x2\xCA"+
-		"\x42\x3\x2\x2\x2\xCB\xCC\ap\x2\x2\xCC\xCD\aw\x2\x2\xCD\xCE\an\x2\x2\xCE"+
-		"\xCF\an\x2\x2\xCF\x44\x3\x2\x2\x2\xD0\xD4\t\x4\x2\x2\xD1\xD3\t\x5\x2\x2"+
-		"\xD2\xD1\x3\x2\x2\x2\xD3\xD6\x3\x2\x2\x2\xD4\xD2\x3\x2\x2\x2\xD4\xD5\x3"+
-		"\x2\x2\x2\xD5\x46\x3\x2\x2\x2\xD6\xD4\x3\x2\x2\x2\xD7\xD8\a\x31\x2\x2"+
-		"\xD8\xD9\a\x31\x2\x2\xD9\xDD\x3\x2\x2\x2\xDA\xDC\n\x6\x2\x2\xDB\xDA\x3"+
-		"\x2\x2\x2\xDC\xDF\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDE\x3\x2\x2\x2"+
-		"\xDE\xEC\x3\x2\x2\x2\xDF\xDD\x3\x2\x2\x2\xE0\xE1\a\x31\x2\x2\xE1\xE2\a"+
-		",\x2\x2\xE2\xE6\x3\x2\x2\x2\xE3\xE5\v\x2\x2\x2\xE4\xE3\x3\x2\x2\x2\xE5"+
-		"\xE8\x3\x2\x2\x2\xE6\xE7\x3\x2\x2\x2\xE6\xE4\x3\x2\x2\x2\xE7\xE9\x3\x2"+
-		"\x2\x2\xE8\xE6\x3\x2\x2\x2\xE9\xEA\a,\x2\x2\xEA\xEC\a\x31\x2\x2\xEB\xD7"+
-		"\x3\x2\x2\x2\xEB\xE0\x3\x2\x2\x2\xEC\xED\x3\x2\x2\x2\xED\xEE\b$\x2\x2"+
-		"\xEEH\x3\x2\x2\x2\xEF\xF1\t\a\x2\x2\xF0\xEF\x3\x2\x2\x2\xF1\xF2\x3\x2"+
-		"\x2\x2\xF2\xF0\x3\x2\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3\xF4\x3\x2\x2\x2\xF4"+
-		"\xF5\b%\x2\x2\xF5J\x3\x2\x2\x2\f\x2\xAF\xB4\xBA\xC9\xD4\xDD\xE6\xEB\xF2"+
+		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x3\x2\x3\x2"+
+		"\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3"+
+		"\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
+		"\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3"+
+		"\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3"+
+		"\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3"+
+		"\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x6"+
+		"\x19\x8A\n\x19\r\x19\xE\x19\x8B\x3\x1A\x6\x1A\x8F\n\x1A\r\x1A\xE\x1A\x90"+
+		"\x3\x1A\x3\x1A\x6\x1A\x95\n\x1A\r\x1A\xE\x1A\x96\x3\x1B\x3\x1B\x3\x1C"+
+		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x5\x1C\xA4\n"+
+		"\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\a\x1E\xAD\n\x1E"+
+		"\f\x1E\xE\x1E\xB0\v\x1E\x3\x1F\x6\x1F\xB3\n\x1F\r\x1F\xE\x1F\xB4\x3\x1F"+
+		"\x3\x1F\x2\x2\x2 \x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
+		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
+		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
+		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
+		"=\x2 \x3\x2\a\x3\x2\x32;\x4\x2\x43\\\x63|\x5\x2\x43\\\x61\x61\x63|\x5"+
+		"\x2\x32;\x43\\\x63|\x4\x2\v\f\xF\xF\xBD\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
+		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
+		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
+		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
+		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
+		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
+		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
+		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2"+
+		"=\x3\x2\x2\x2\x3?\x3\x2\x2\x2\x5\x41\x3\x2\x2\x2\a\x43\x3\x2\x2\x2\t\x45"+
+		"\x3\x2\x2\x2\vG\x3\x2\x2\x2\rI\x3\x2\x2\x2\xFL\x3\x2\x2\x2\x11R\x3\x2"+
+		"\x2\x2\x13V\x3\x2\x2\x2\x15]\x3\x2\x2\x2\x17\x63\x3\x2\x2\x2\x19l\x3\x2"+
+		"\x2\x2\x1Bn\x3\x2\x2\x2\x1Dp\x3\x2\x2\x2\x1Fr\x3\x2\x2\x2!t\x3\x2\x2\x2"+
+		"#v\x3\x2\x2\x2%x\x3\x2\x2\x2\'{\x3\x2\x2\x2)~\x3\x2\x2\x2+\x80\x3\x2\x2"+
+		"\x2-\x82\x3\x2\x2\x2/\x85\x3\x2\x2\x2\x31\x89\x3\x2\x2\x2\x33\x8E\x3\x2"+
+		"\x2\x2\x35\x98\x3\x2\x2\x2\x37\xA3\x3\x2\x2\x2\x39\xA5\x3\x2\x2\x2;\xAA"+
+		"\x3\x2\x2\x2=\xB2\x3\x2\x2\x2?@\a=\x2\x2@\x4\x3\x2\x2\x2\x41\x42\a?\x2"+
+		"\x2\x42\x6\x3\x2\x2\x2\x43\x44\a*\x2\x2\x44\b\x3\x2\x2\x2\x45\x46\a.\x2"+
+		"\x2\x46\n\x3\x2\x2\x2GH\a+\x2\x2H\f\x3\x2\x2\x2IJ\ak\x2\x2JK\ah\x2\x2"+
+		"K\xE\x3\x2\x2\x2LM\ak\x2\x2MN\ah\x2\x2NO\ag\x2\x2OP\ap\x2\x2PQ\a\x66\x2"+
+		"\x2Q\x10\x3\x2\x2\x2RS\ah\x2\x2ST\aq\x2\x2TU\at\x2\x2U\x12\x3\x2\x2\x2"+
+		"VW\ah\x2\x2WX\aq\x2\x2XY\at\x2\x2YZ\ag\x2\x2Z[\ap\x2\x2[\\\a\x66\x2\x2"+
+		"\\\x14\x3\x2\x2\x2]^\ay\x2\x2^_\aj\x2\x2_`\ak\x2\x2`\x61\an\x2\x2\x61"+
+		"\x62\ag\x2\x2\x62\x16\x3\x2\x2\x2\x63\x64\ay\x2\x2\x64\x65\aj\x2\x2\x65"+
+		"\x66\ak\x2\x2\x66g\an\x2\x2gh\ag\x2\x2hi\ag\x2\x2ij\ap\x2\x2jk\a\x66\x2"+
+		"\x2k\x18\x3\x2\x2\x2lm\a#\x2\x2m\x1A\x3\x2\x2\x2no\a,\x2\x2o\x1C\x3\x2"+
+		"\x2\x2pq\a\x31\x2\x2q\x1E\x3\x2\x2\x2rs\a\'\x2\x2s \x3\x2\x2\x2tu\a-\x2"+
+		"\x2u\"\x3\x2\x2\x2vw\a/\x2\x2w$\x3\x2\x2\x2xy\a?\x2\x2yz\a?\x2\x2z&\x3"+
+		"\x2\x2\x2{|\a#\x2\x2|}\a?\x2\x2}(\x3\x2\x2\x2~\x7F\a@\x2\x2\x7F*\x3\x2"+
+		"\x2\x2\x80\x81\a>\x2\x2\x81,\x3\x2\x2\x2\x82\x83\a>\x2\x2\x83\x84\a?\x2"+
+		"\x2\x84.\x3\x2\x2\x2\x85\x86\a@\x2\x2\x86\x87\a?\x2\x2\x87\x30\x3\x2\x2"+
+		"\x2\x88\x8A\t\x2\x2\x2\x89\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x89"+
+		"\x3\x2\x2\x2\x8B\x8C\x3\x2\x2\x2\x8C\x32\x3\x2\x2\x2\x8D\x8F\t\x2\x2\x2"+
+		"\x8E\x8D\x3\x2\x2\x2\x8F\x90\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x90\x91\x3"+
+		"\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x94\a\x30\x2\x2\x93\x95\t\x2\x2\x2\x94"+
+		"\x93\x3\x2\x2\x2\x95\x96\x3\x2\x2\x2\x96\x94\x3\x2\x2\x2\x96\x97\x3\x2"+
+		"\x2\x2\x97\x34\x3\x2\x2\x2\x98\x99\t\x3\x2\x2\x99\x36\x3\x2\x2\x2\x9A"+
+		"\x9B\av\x2\x2\x9B\x9C\at\x2\x2\x9C\x9D\aw\x2\x2\x9D\xA4\ag\x2\x2\x9E\x9F"+
+		"\ah\x2\x2\x9F\xA0\a\x63\x2\x2\xA0\xA1\an\x2\x2\xA1\xA2\au\x2\x2\xA2\xA4"+
+		"\ag\x2\x2\xA3\x9A\x3\x2\x2\x2\xA3\x9E\x3\x2\x2\x2\xA4\x38\x3\x2\x2\x2"+
+		"\xA5\xA6\ap\x2\x2\xA6\xA7\aw\x2\x2\xA7\xA8\an\x2\x2\xA8\xA9\an\x2\x2\xA9"+
+		":\x3\x2\x2\x2\xAA\xAE\t\x4\x2\x2\xAB\xAD\t\x5\x2\x2\xAC\xAB\x3\x2\x2\x2"+
+		"\xAD\xB0\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF<\x3\x2"+
+		"\x2\x2\xB0\xAE\x3\x2\x2\x2\xB1\xB3\t\x6\x2\x2\xB2\xB1\x3\x2\x2\x2\xB3"+
+		"\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5\xB6\x3\x2"+
+		"\x2\x2\xB6\xB7\b\x1F\x2\x2\xB7>\x3\x2\x2\x2\t\x2\x8B\x90\x96\xA3\xAE\xB4"+
 		"\x3\b\x2\x2";
 	public static readonly ATN _ATN =
 		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
